<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-send-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_query</refname>
  <refpurpose>
   Exécute une requête PostgreSQL asynchrone
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type><methodname>pg_send_query</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_send_query</function> envoie une requête ou des requêtes de
   manière asynchrone à la connexion <parameter>connection</parameter>.
   Contrairement à <function>pg_query</function>, elle peut envoyer plusieurs
   requêtes à la fois au serveur PostgreSQL et obtenir les résultats un par un
   en utilisant <function>pg_get_result</function>.
  </para>
  <para> 
   L'exécution du script n'est pas bloquée durant l'exécution des requêtes. Utilisez 
   <function>pg_connection_busy</function> pour vérifier si la connexion est
   occupée (c'est-à-dire la requête est en train d'être exécutée). Les requêtes
   peuvent être annulées avec <function>pg_cancel_query</function>.
  </para>
  <para>
   Bien que l'on puisse envoyer plusieurs requêtes en même temps,
   il n'est pas possible d'envoyer plusieurs requêtes sur une connexion
   occupée. Si une requête est envoyée alors que la connexion est occupée,
   elle attendra que la requête précédente soit terminée et perdra tous ses
   résultats.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       La ressource de connexion de la base de données PostgreSQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La requête ou les requêtes SQL à être exécutées.
      </para>
      <para>
       Les données contenues dans la requête doivent être
       <link linkend="function.pg-escape-string">échappées proprement</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, &false; ou <literal>0</literal> en cas d'échec.
   Utilisez <function>pg_get_result</function> pour déterminer le résultat
   de la requête.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_send_query</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Connexion impossible");

  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn,"select * from auteurs; select count(*) from auteurs;");
  }
    
  $res1 = pg_get_result($dbconn);
  echo "Premier appel de pg_get_result() : $res1\n";
  $rows1 = pg_num_rows($res1);
  echo "$res1 a $rows1 enregistrements\n\n";
    
  $res2 = pg_get_result($dbconn);
  echo "Second appel de pg_get_result() : $res2\n";
  $rows2 = pg_num_rows($res2);
  echo "$res2 a $rows2 enregistrements\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Premier appel de pg_get_result() : Resource id #3
Resource id #3 a 3 enregistrements

Second appel de pg_get_result() : Resource id #4
Resource id #4 a 1 enregistrements
]]>
    </screen>
   </example> 
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_query</function></member>
    <member><function>pg_cancel_query</function></member>
    <member><function>pg_get_result</function></member>
    <member><function>pg_connection_busy</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
