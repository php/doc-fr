<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: blanchonvincent Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id='function.pg-escape-identifier' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_escape_identifier</refname>
  <refpurpose>
   Protège un identifiant pour l'insertion dans un champ texte.
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>pg_escape_identifier</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_escape_identifier</function> protège un identifiant
   (exemple: table, nom de champ) pour une requête en base de données.
   Le résultat est une chaîne de caractère protégée pour PostgreSQL.
   <function>pg_escape_identifier</function> ajoute des guillemets
   avant et après les données. Les utilisateurs ne doivent donc pas ajouter
   de guillemets. L'utilisation de cette fonction est recommandée pour les
   les identifiants des requêtes. Pour les données brutes SQL (c'est à dire
   les paramètres, excepté de type bytea), <function>pg_escape_literal</function>
   ou <function>pg_escape_string</function> doit être utilisé. Pour les champs
   de type bytea il est nécessaire d'utiliser <function>pg_escape_bytea</function>.
  </para>
  <note>
   <para>
    Cette fonction a une protection de code interne et peut être utilisée
    pour PostgreSQL 8.4 ou moins récent.
    </para>
  </note>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Une &string; contenant du texte à protéger.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une &string; contenant les données protégées.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_escape_identifier</function></title>
    <programlisting role="php">
<![CDATA[
<?php 
  // Connexion à la base de données
  $dbconn = pg_connect('dbname=foo');
  
  // Protection du nom de la table
  $escaped = pg_escape_identifier($table_name);
  
  // Sélection des lignes de la table $table_name
  pg_query("SELECT * FROM {$escaped};");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_escape_literal</function></member>
    <member><function>pg_escape_bytea</function></member>
    <member><function>pg_escape_string</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
