<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-delete" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_delete</refname>
  <refpurpose>
   Efface des lignes PostgreSQL
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>bool</type></type><methodname>pg_delete</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>conditions</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PGSQL_DML_EXEC</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_delete</function> efface les lignes d'une table spécifiées par
   les clés et valeur du tableau associatif <parameter>conditions</parameter>.
  </para>
  <para>
   Si <parameter>flags</parameter> est fournit,
   <function>pg_convert</function> est appliqué à
   <parameter>conditions</parameter> avec les drapeaux fournit.
  </para>
  <para>
   Par défaut <function>pg_delete</function> passe des valeurs brutes.
   Les valeurs doivent être échappé ou le drapeau <constant>PGSQL_DML_ESCAPE</constant>
   doit être spécifié dans <parameter>flags</parameter>.
   <constant>PGSQL_DML_ESCAPE</constant> met des guillemets et échappe les paramètres/identifiants.
   Par conséquent, les noms de table/colonnes deviennent sensible à la casse.
  </para>
  <para>
   Notez que ni l'échappement ni les requêtes préparer peuvent protéger des
   requêtes LIKE, JSON, Tableaux, Regex, etc. Ces paramètres devraient être
   traité en fonction de leur contexte. C'est à dire échapper/valider les valeurs.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       Nom de la table depuis laquelle les lignes seront effacées.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>conditions</parameter></term>
     <listitem>
      <para>
       Un &array; où les clés sont les noms des champs de la table 
       <parameter>table_name</parameter> et où les valeurs sont les valeurs
       de ces champs qui sont à effacés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Toute combinaison des valeurs suivantes :
       <constant>PGSQL_CONV_FORCE_NULL</constant>,
       <constant>PGSQL_DML_NO_CONV</constant>,
       <constant>PGSQL_DML_ESCAPE</constant>,
       <constant>PGSQL_DML_EXEC</constant>,
       <constant>PGSQL_DML_ASYNC</constant> ou
       <constant>PGSQL_DML_STRING</constant>.
       Si <constant>PGSQL_DML_STRING</constant> fait partie du paramètre
       <parameter>flags</parameter> alors, la requête sera retournée.
       Lorsque la constante <constant>PGSQL_DML_NO_CONV</constant> ou la constante
       <constant>PGSQL_DML_ESCAPE</constant> est définie,aucun appel à la fonction
       <function>pg_convert</function> ne sera faite en interne.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;  Retourne une &string; si <constant>PGSQL_DML_STRING</constant>
   est passé dans le paramètre <parameter>flags</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_delete</function></title>
    <programlisting role="php"> 
<![CDATA[
<?php 
 $db = pg_connect ('dbname=foo');
 // Ceci est sûr quelque peu, car toutes les valeurs sont échappées
 // Cependant PostgreSSQL supporte les JSON/Tableaux. Ceci ne sont pas
 // sûr ni par échappement ni par les requêtes préparés.
 $res = pg_delete($db, 'post_log', $_POST, PG_DML_ESCAPE);
 if ($res) {
     echo "Les données POSTées ont été effacées : $res\n";
 } else {
     echo "Les données d'entrées sont erronées.\n";
 }
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_convert</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
