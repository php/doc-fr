<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-send-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_execute</refname>
  <refpurpose>
   Envoie une requête pour exécuter une requête préparée avec des paramètres
   donnés, sans attendre le(s) résultat(s)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type><methodname>pg_send_execute</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>statement_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envoie une requête pour exécuter une requête préparée avec des paramètres
   donnés, sans attendre le(s) résultat(s).
  </para>
  <para>
   Cette fonction est similaire à <function>pg_send_query_params</function>,
   mais la commande qui sera exécutée est spécifiée en nommant une requête
   préalablement préparée, au lieu de donner une chaîne en tant que requête.
   Les paramètres de la fonctions sont gérés de la même manière que
   <function>pg_execute</function>. Comme <function>pg_execute</function>, la
   fonction ne fonctionnera pas sur les versions antérieures à PostgreSQL 7.4.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement_name</parameter></term>
     <listitem>
      <para>
       Le nom de la requête préparée à exécuter. Si une chaîne vide est
       spécifiée (""), alors la requête qui n'est pas nommée est exécutée. Le
       nom doit avoir été précédemment préparé en utilisant
       <function>pg_prepare</function>, <function>pg_send_prepare</function>
       ou une commande SQL <literal>PREPARE</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un tableau de valeurs de paramètres pour substituer les variables $1, $2, etc.
       dans la requête préparée originale. Le nombre d'éléments présents dans
       le tableau doit concorder avec le nombre de variables à remplacer.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, &false; ou <literal>0</literal> en cas d'échec.
   Utilisez <function>pg_get_result</function> pour déterminer le résultat
   de la requête.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_send_execute</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Connexion impossible");

  // Prépare une requête pour l'exécution
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM magasins WHERE nom = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Exécute la requête préparée. Notez qu'il n'est pas nécessaire d'échapper
  // la chaîne "Joe's Widgets"
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Exécute la même requête préparée, cette fois avec un paramètre différent
  if (!pg_connection_busy($dbconn)) {
    pg_execute($dbconn, "my_query", array("Vêtements Vêtements Vêtements"));
    $res3 = pg_get_result($dbconn);
  }
  
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_execute</function></member>    
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
