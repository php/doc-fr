<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d33a6756e7a94bc06164d2a97bb0a3ffa19e3471 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.oci-fetch-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_fetch_all</refname>
  <refpurpose>Lit plusieurs lignes d'un résultat dans un tableau multidimensionnel</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>oci_fetch_all</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">output</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>OCI_FETCHSTATEMENT_BY_COLUMN | OCI_ASSOC</initializer></methodparam>
  </methodsynopsis>
  <para>
   Lit toutes les lignes d'un résultat Oracle dans un tableau à 2 dimensions.
   Par défaut, toutes les lignes sont retournées.
  </para>
  <para>
   Cette fonction peut être appelée une seule fois pour chaque requête
   exécutée via la fonction <function>oci_execute</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output</parameter></term>
     <listitem>
      <para>
       La variable qui va contenir les lignes retournées.
      </para>
      <para>
       Les colonnes LOB sont retournées sous la forme d'une chaîne
       lorsqu'Oracle supporte la conversion.
      </para>
      <para>
       Voir la fonction <function>oci_fetch_array</function> pour plus
       d'informations sur la façon dont les données et leurs types sont
       récupérés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Nombre de lignes initiales à ignorer lors de la lecture du
       résultat. Par défaut, ce paramètre vaut 0, pour commencer la lecture
       à la première ligne.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Nombre de lignes maximal à retourner. Par défaut, vaut -1, ce qui
       signifie que toutes les lignes disponibles seront retournées
       depuis le paramètre <parameter>offset</parameter> + 1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>flags</parameter> indique la structure
       du tableau mais aussi si des tableaux associatifs doivent
       être utilisés.
       <table>
        <title>Modes de structure des tableaux pour la fonction
         <function>oci_fetch_all</function></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Constante</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>OCI_FETCHSTATEMENT_BY_ROW</constant></entry>
           <entry>Le tableau retourné contiendra un seul sous tableau par
            lignes.</entry>
          </row>
          <row>
           <entry><constant>OCI_FETCHSTATEMENT_BY_COLUMN</constant></entry>
           <entry>Le tableau retourné contiendra un seul sous tableau par
            colonnes. C'est le comportement par défaut.</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Les tableaux peuvent être indexés soit par l'en-tête de colonne,
       soit numériquement.
       <table>
        <title>Modes d'index des tableaux pour la fonction
         <function>oci_fetch_all</function></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Constante</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>OCI_NUM</constant></entry>
           <entry>Des indexes numériques sont utilisés pour chaque tableau
            de colonnes.</entry>
          </row>
          <row>
           <entry><constant>OCI_ASSOC</constant></entry>
           <entry>Des indexes associatifs sont utilisés pour chaque tableau
            de colonnes. C'est le comportement par défaut.</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Utilisez l'opérateur d'addition &quot;+&quot; pour choisir une
       combinaison de structures de tableaux et de modes d'index.
      </para>
      <para>
       Les noms de colonnes qui ne sont pas sensibles à la casse (par défaut sous Oracle),
       auront des noms d'attributs en majuscule. Les noms de colonnes qui sont sensibles à la
       casse, auront des noms d'attributs utilisant exactement la même casse de la colonne.
       Utilisez la fonction <function>var_dump</function> sur l'objet de résultat pour vérifier
       la casse appropriée à utiliser pour chaque requête.
      </para>
      <para>
       Les requêtes qui possèdent plus d'une colonne dont le nom est
       identique doivent utiliser des alias. Sinon, seulement une
       des colonnes apparaîtra dans le tableau associatif.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le nombre de lignes récupérées dans le paramètre <parameter>output</parameter>
   qui peut être de 0 ou plus.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_all</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res);

echo "$nrows rows fetched<br>\n";
var_dump($res);

// var_dump affichera :
//    2 rows fetched
//    array(2) {
//      ["POSTAL_CODE"]=>
//      array(2) {
//        [0]=>
//        string(6) "00989x"
//        [1]=>
//        string(6) "10934x"
//      }
//      ["CITY"]=>
//      array(2) {
//        [0]=>
//        string(4) "Roma"
//        [1]=>
//        string(6) "Venice"
//      }
//    }

// Affichage des résultats
echo "<table border='1'>\n";
foreach ($res as $col) {
    echo "<tr>\n";
    foreach ($col as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_all</function> et <constant>OCI_FETCHSTATEMENT_BY_ROW</constant></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res, null, null, OCI_FETCHSTATEMENT_BY_ROW);

echo "$nrows lignes récupérées<br>\n";
var_dump($res);

// Affiche :
//    2 lignes récupérées
//    array(2) {
//      [0]=>
//      array(2) {
//        ["POSTAL_CODE"]=>
//        string(6) "00989x"
//        ["CITY"]=>
//        string(4) "Roma"
//      }
//      [1]=>
//      array(2) {
//        ["POSTAL_CODE"]=>
//        string(6) "10934x"
//        ["CITY"]=>
//        string(6) "Venice"
//      }
//    }

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_all</function> et <constant>OCI_NUM</constant></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res, null, null, OCI_FETCHSTATEMENT_BY_ROW + OCI_NUM);

echo "$nrows lignes récupérées<br>\n";
var_dump($res);

// Affiche :
//    2 lignes récupérées
//    array(2) {
//      [0]=>
//      array(2) {
//        [0]=>
//        string(6) "00989x"
//        [1]=>
//        string(4) "Roma"
//      }
//      [1]=>
//      array(2) {
//        [0]=>
//        string(6) "10934x"
//        [1]=>
//        string(6) "Venice"
//      }
//    }

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    L'utilisation du paramètre <parameter>offset</parameter> est vraiment inefficace.
    Toutes les lignes à éviter sont comprises dans le jeu de résultats retourné par
    la base de données à PHP. Puis, elles sont écartées. Il est plus efficace
    d'utiliser une requête SQL pour restreindre le champ des lignes désirées.
    Voir la fonction <function>oci_fetch_array</function> pour un exemple concrêt.
   </para>
  </note>
  <note>
   <para>
    Les requêtes qui retournent un très grand nombre de lignes peuvent
    gagner en économie de mémoire lors de l'utilisation de fonctions récupérant
    une seule ligne, comme le fait la fonction <function>oci_fetch_array</function>.
   </para>
  </note>
  <note>
   &oci.use.setprefetch;
  </note>
  <note>
   <para>
    Cette fonction ne retournera pas de lignes depuis un jeu
    de résultats implicite d'une base de données Oracle
    12<emphasis>c</emphasis>. Utilisez pluotôt la fonction
    <function>oci_fetch_array</function>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_fetch</function></member>
    <member><function>oci_fetch_array</function></member>
    <member><function>oci_fetch_assoc</function></member>
    <member><function>oci_fetch_object</function></member>
    <member><function>oci_fetch_row</function></member>
    <member><function>oci_set_prefetch</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
