<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f4db3f05fabe985a04bd5ba1414d5331089c45dd Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.db2-set-option" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_set_option</refname>
  <refpurpose>Fixe des options pour une connexion ou des ressources</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>db2_set_option</methodname>
   <methodparam><type>resource</type><parameter>resource</parameter></methodparam>
   <methodparam><type>array</type><parameter>options</parameter></methodparam>
   <methodparam><type>int</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <para>
   Fixe des options pour une ressource ou une connexion. Vous ne pouvez pas
   fixer des options pour un jeu de résultats.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>resource</parameter></term>
     <listitem>
      <para>
       Une ressource valide comme retournée par
       <function>db2_prepare</function> ou une connexion valide comme
       retournée par <function>db2_connect</function> ou
       <function>db2_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Un tableau associatif contenant des options de ressources ou de
       connexion valides. Ce paramètre peut être utilisé pour changer
       les valeurs d'autocommit, types de curseur (flottant ou à avance
       seule) et spécifier la casse des noms de colonne (minuscule,
       majuscule ou naturelle) qui apparaîtra dans le jeu de résultats.
       <variablelist>
        <varlistentry>
         <term><parameter>autocommit</parameter></term>
         <listitem>
          <para>
           Passer <constant>DB2_AUTOCOMMIT_ON</constant> active
           l'autocommit pour la connexion spécifiée.
          </para>
          <para>
           Passer <constant>DB2_AUTOCOMMIT_OFF</constant> désactive
           l'autocommit pour la connexion spécifiée.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>cursor</parameter></term>
         <listitem>
          <para>
           Passer <constant>DB2_FORWARD_ONLY</constant> spécifie un
           curseur à avance seule pour une ressource. Ceci est le
           type de défaut pour un curseur et est supporté par tous
           les serveurs de base de données.
          </para>
          <para>
           Passer <constant>DB2_SCROLLABLE</constant> spécifie un
           curseur flottant pour une ressource. Les curseurs
           flottants permettent aux lignes de résultats d'être
           accessibles dans un ordre non séquentiel. Ce type de
           curseur est supporté seulement par les bases de données
           IBM DB2 Universal Database.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>binmode</parameter></term>
         <listitem>
          <para>
           Passer <constant>DB2_BINARY</constant> spécifie que des
           données binaires seront retournées comme telles. Ceci est
           le mode par défaut. Ceci est équivalent à la
           configuration <literal>ibm_db2.binmode=1</literal> dans
           &php.ini;.
          </para>
          <para>
           Passer <constant>DB2_CONVERT</constant> spécifie que les
           données binaires seront converties en encodage hexadécimal
           et seront retourné ainsi. Ceci est équivalent à la
           configuration <literal>ibm_db2.binmode=2</literal> dans
           &php.ini;.
          </para>
          <para>
           Passer <constant>DB2_PASSTHRU</constant> spécifie que les
           données binaires seront converties en &null;. 
           Ceci est équivalent à la
           configuration <literal>ibm_db2.binmode=3</literal> dans
           &php.ini;.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>db2_attr_case</parameter></term>
         <listitem>
          <para>
           Passer <constant>DB2_CASE_LOWER</constant> spécifie que les
           noms des colonnes dans le jeu de résultats seront
           retournés en minuscules.
          </para>
          <para>
           Passer <constant>DB2_CASE_UPPER</constant> spécifie que les
           noms des colonnes dans le jeu de résultats seront
           retournés en majuscules.
          </para>
          <para>
           Passer <constant>DB2_CASE_NATURAL</constant> spécifie que
           les noms de colonnes dans le jeu de résultats seront
           retournés en casse naturelle.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>deferred_prepare</parameter></term>
         <listitem>
          <para>
           Passer <constant>DB2_DEFERRED_PREPARE_ON</constant> active
           la préparation déférée sur la ressource de requête spécifiée.
          </para>
          <para>
           Passer <constant>DB2_DEFERRED_PREPARE_OFF</constant> désactive
           la préparation déférée sur la ressource de requête spécifiée.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Les nouvelles options suivantes i5/OS sont disponibles depuis la
       version 1.5.1 de ibm_db2. Ces options s'appliquent uniquement lorsque
       PHP et ibm_db2 fonctionnent nativement sur un système i5.
       <variablelist>
        <varlistentry>
         <term><parameter>i5_fetch_only</parameter></term>
         <listitem>
          <para>
           <literal>DB2_I5_FETCH_ON</literal> : les curseurs sont en
           lecture seule et ne peuvent être utilisé pour positionner
           des mises à jour et des suppressions. Ceci est la valeur
           par défaut a moins que la variable d'environnement
           <literal>SQL_ATTR_FOR_FETCH_ONLY</literal> ait été mis à
           <literal>SQL_FALSE</literal>.
          </para>
          <para>
           <literal>DB2_I5_FETCH_OFF</literal> : les curseurs
           peuvent être positionnés pour mises à jour et
           suppressions.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Les nouvelles options suivantes sont disponibles depuis
       ibm_db2 version 1.8.0 et suivants.
       <variablelist>
        <varlistentry>
         <term><parameter>rowcount</parameter></term>
         <listitem>
          <para>
           <literal>DB2_ROWCOUNT_PREFETCH_ON</literal> - Le client peut demander
           un comptage complet des lignes avant de les récupérer, ce qui
           signifie que la fonction <function>db2_num_rows</function> retourne
           le nombre de lignes sélectionnées même si un curseur
           <literal>ROLLFORWARD_ONLY</literal> est utilisé.
          </para>
          <para>
           <literal>DB2_ROWCOUNT_PREFETCH_OFF</literal> - Le client
           ne peut pas demander un comptage complet des lignes avant de les récupérer.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>  
      <para>
       Les options suivantes sont nouvelles, et disponibles depuis 
       ibm_db2 version 1.7.0.
       <variablelist>
        <varlistentry>
         <term><parameter>trusted_user</parameter></term>
         <listitem>
          <para>
           Pour basculer l'utilisateur vers un utilisateur de confiance,
           indiquez l'identifiant utilisateur sous forme de chaîne, de l'utilisateur
           de confiance que vous voulez utiliser. Cette option peut être 
           configurée au niveau de la connexion uniquement. Pour utiliser cette
           option, un contexte de confiance doit être activé sur la ressource
           de connexion.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>trusted_password</parameter></term>
         <listitem>
          <para>
           Le mot de passe, sous forme de chaîne, qui correspond à l'utilisateur
           de confiance.
          </para>
         </listitem>
        </varlistentry>                
       </variablelist>
      </para>            
      <para>
       Les options suivantes sont nouvelles, et disponibles depuis 
       ibm_db2 version 1.6.0. Ces options sont pratiques pour obtenir des informations de
       suivis, accessibles via <function>db2_get_option</function>.
       <note>
        <para>
         Lorsque la valeur de chaque option est sur le point d'être définie, quelques
         serveurs peuvent ne pas gérer la totalité de la longueur fournie et peuvent
         tronquer la valeur.
        </para>
        <para>
         Pour s'assurer que les données spécifiées dans chaque option seront converties
         correctement lorsqu'elles seront transmises au système, utilisez seulement
         les caractères de A à Z, 0 à 9, les soulignés (<literal>_</literal>) et
         les points (<literal>.</literal>).
        </para>
       </note>
       <variablelist>
        <varlistentry>
         <term><parameter>userid</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_USERID</literal> : un pointeur vers une &string;
           terminée par &null; utilisée pour identifier l'ID utilisateur du client envoyé
           au serveur de base de données, lors de la connexion DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supporte une longueur supérieure à
             16 caractères. L'ID utilisateur ne doit pas être confondu avec l'ID utilisateur
             d'identification, il est utilisé pour les processus d'identification uniquement
             et non pour ceux d'autorisation.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>acctstr</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_ACCTSTR</literal> : un pointeur vers une &string;
           terminée par &null; utilisée pour identifier le compte du client à envoyer
           au serveur de base de données lors de la connexion DB2..
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supporte une longueur supérieure à
             200 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>applname</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_APPLNAME</literal> : un pointeur vers une &string;
           terminée par &null; utilisée pour identifier le nom de l'application client
           à envoyer au serveur de base de données lors de la connexion DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS and OS/390 supportent une longueur supérieure à
             32 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>wrkstnname</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_WRKSTNNAME</literal> : un pointeur vers une &string;
           terminée par &null; utilisée pour identifier le nom de la station à
           envoyer au serveur de base de données lors de la connexion DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supportent une longueur supérieure à
             18 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Un &integer; qui spécifie le type de ressource qui a été passé à
       la fonction. Le type de ressource et valeur doit correspondre.
      </para>
      <para>
       Passer <literal>1</literal> en tant que valeur spécifie
       qu'une ressource de connexion a été passée à la fonction.
      </para>
      <para>
       Passer n'importe quel &integer; différent de
       <literal>1</literal> en tant que valeur spécifie qu'une
       ressource a été passée à la fonction.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
  </para>
  <para>
   Le tableau suivant spécifie quelles options sont compatibles avec quels
   types de ressources :
   <table>
    <title>Matrice ressource paramètre</title>
    <tgroup cols="5">
     <colspec colnum="1" colname="col1" align="center" />
     <colspec colnum="2" colname="col2" align="center" />
     <colspec colnum="3" colname="col3" align="center" />
     <colspec colnum="4" colname="col4" align="center" />
     <colspec colnum="5" colname="col5" align="center" />
     
     <thead>
      <row>
       <entry morerows="1">Clé</entry>
       <entry morerows="1">Valeur</entry>
       <entry namest="col3" nameend="col5">Type de ressource</entry>
      </row>
     </thead>
     
     <tbody>
      <row>
       <entry colname="col3">Connexion</entry>
       <entry colname="col4">Requête</entry>
       <entry colname="col5">Jeu de résultats</entry>
      </row>
      <row>
       <entry>autocommit</entry>
       <entry><constant>DB2_AUTOCOMMIT_ON</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">-</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>autocommit</entry>
       <entry><constant>DB2_AUTOCOMMIT_OFF</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">-</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>cursor</entry>
       <entry><constant>DB2_SCROLLABLE</constant></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>cursor</entry>
       <entry><constant>DB2_FORWARD_ONLY</constant></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>binmode</entry>
       <entry><constant>DB2_BINARY</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>binmode</entry>
       <entry><constant>DB2_CONVERT</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>binmode</entry>
       <entry><constant>DB2_PASSTHRU</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>db2_attr_case</entry>
       <entry><constant>DB2_CASE_LOWER</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>db2_attr_case</entry>
       <entry><constant>DB2_CASE_UPPER</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>db2_attr_case</entry>
       <entry><constant>DB2_CASE_NATURAL</constant></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>deferred_prepare</entry>
       <entry><constant>DB2_DEFERRED_PREPARE_ON</constant></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>deferred_prepare</entry>
       <entry><constant>DB2_DEFERRED_PREPARE_OFF</constant></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>i5_fetch_only</entry>
       <entry><literal>DB2_I5_FETCH_ON</literal></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>rowcount</entry>
       <entry><literal>DB2_ROWCOUNT_PREFETCH_ON</literal></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>rowcount</entry>
       <entry><literal>DB2_ROWCOUNT_PREFETCH_OFF</literal></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>trusted_user</entry>
       <entry><literal>&lt;USER NAME&gt; (String)</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">-</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>trusted_password</entry>
       <entry><literal>&lt;PASSWORD&gt; (String)</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">-</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>i5_fetch_only</entry>
       <entry><literal>DB2_I5_FETCH_OFF</literal></entry>
       <entry colname="col3">-</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>userid</entry>
       <entry><literal>SQL_ATTR_INFO_USERID</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>acctstr</entry>
       <entry><literal>SQL_ATTR_INFO_ACCTSTR</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>applname</entry>
       <entry><literal>SQL_ATTR_INFO_APPLNAME</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>wrkstnname</entry>
       <entry><literal>SQL_ATTR_INFO_WRKSTNNAME</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Fixer un paramètre à une ressource de connexion</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_ON);

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type */
$result = db2_set_option($conn, $options, 1);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
   echo 'Options fixées correctement';
}
else
{
   echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Options fixées correctement
]]>
    </screen>
   </example>
   <example>
    <title>Fixe des paramètres multiples avec une ressource de connexion</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_OFF, 
'binmode' => DB2_PASSTHRU,
'db2_attr_case' => DB2_CASE_UPPER,
'cursor' => DB2_SCROLLABLE);

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type */
$result = db2_set_option($conn, $options, 1);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
  echo 'Options fixées correctement';
}
else
{
  echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Options fixées correctement
]]>
    </screen>
   </example>
   
   <example>
    <title>Fixe des paramètres multiples avec une clé invalide</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_OFF, 
'MY_INVALID_KEY' => DB2_PASSTHRU,
'db2_attr_case' => DB2_CASE_UPPER,
'cursor' => DB2_SCROLLABLE);

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type */
$result = db2_set_option($conn, $options, 1);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
   echo 'Options fixées correctement';
}
else
{
   echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Impossible de fixer les options
]]>
    </screen>
   </example>
   
   <example>
    <title>Fixe des paramètres multiples avec une valeur invalide</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_OFF, 
'binmode' => 'INVALID_VALUE',
'db2_attr_case' => DB2_CASE_UPPER,
'cursor' => DB2_SCROLLABLE);

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type */
$result = db2_set_option($conn, $options, 1);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
   echo 'Options fixées correctement';
}
else
{
   echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Impossible de fixer les options
]]>
    </screen>
   </example>
   
   <example>
    <title>Fixe des paramètres multiples avec une ressource de connexion et un mauvais type</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_OFF, 
'binmode' => DB2_PASSTHRU,
'db2_attr_case' => DB2_CASE_UPPER,
'cursor' => DB2_SCROLLABLE);

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type invalide */
$result = db2_set_option($conn, $options, 2);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
  echo 'Options fixées correctement';
}
else
{
  echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Impossible de fixer les options
]]>
    </screen>
   </example>
   
   <example>
    <title>Fixe des paramètres multiples avec une mauvaise ressource</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('autocommit' => DB2_AUTOCOMMIT_OFF, 
'binmode' => DB2_PASSTHRU,
'db2_attr_case' => DB2_CASE_UPPER,
'cursor' => DB2_SCROLLABLE);

$stmt = db2_prepare($conn, 'SELECT * FROM EMPLOYEE');

/* Appel de la fonction en utilisant le type incorrect de ressource, mais le tableau
* d'options et la valeur type valide */
$result = db2_set_option($stmt, $options, 1);

/* Vérifie si toutes les options peuvent être fixées correctement */
if($result)
{
  echo 'Options fixées correctement';
}
else
{
  echo 'Impossible de fixer les options';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Impossible de fixer les options
]]>
    </screen>
   </example>
   
   <example>
    <title>Tout mettre ensemble</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$hostname = 'localhost';
$port = 50000;
$protocol = 'TCPIP';
$username = 'db2inst1';
$password = 'ibmdb2';

/* Chaînes de caractères de Connexion */
$conn_string = "DRIVER={IBM DB2 ODBC DRIVER};DATABASE=$database;";
$conn_string .= "HOSTNAME=$hostname;PORT=$port;PROTOCOL=$protocol;";
$conn_string .= "UID=$username;PWD=$password;";

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($conn_string, '', '');

/* Crée le tableau associatif d'options avec des paires clé-valeur valides */
$options = array('db2_attr_case' => DB2_CASE_LOWER,
'cursor' => DB2_SCROLLABLE);

$stmt = db2_prepare($conn, 'SELECT * FROM EMPLOYEE WHERE EMPNO = ? OR EMPNO = ?');

/* Appel de la fonction en utilisant le type correct de ressource, le tableau
* d'options et la valeur type */
$option_result = db2_set_option($stmt, $options, 2);
$result = db2_execute($stmt, array('000130', '000140'));

/* Récupère la ligne 2 avant la ligne 1 puisque nous avons un curseur flottant */
print_r(db2_fetch_assoc($stmt, 2));
print '<br /><br />';
print_r(db2_fetch_assoc($stmt, 1));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
     [empno] => 000140
     [firstnme] => HEATHER
     [midinit] => A
     [lastname] => NICHOLLS
     [workdept] => C01
     [phoneno] => 1793
     [hiredate] => 1976-12-15
     [job] => ANALYST
     [edlevel] => 18
     [sex] => F
     [birthdate] => 1946-01-19
     [salary] => 28420.00
     [bonus] => 600.00
     [comm] => 2274.00
)

Array
(
     [empno] => 000130
     [firstnme] => DELORES
     [midinit] => M
     [lastname] => QUINTANA
     [workdept] => C01
     [phoneno] => 4578
     [hiredate] => 1971-07-28
     [job] => ANALYST
     [edlevel] => 16
     [sex] => F
     [birthdate] => 1925-09-15
     [salary] => 23800.00
     [bonus] => 500.00
     [comm] => 1904.00
)
]]>
    </screen>
   </example>
   <example>
    <title>Les curseurs i5/OS sont en lecture seule</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = db2_connect("", "", "", array("i5_lib"=>"nobody"));
$stmt = db2_prepare($conn, 'select * from names where first = ?');
$name = "first2";
db2_bind_param($stmt, 1, "name", DB2_PARAM_IN);
$options = array("i5_fetch_only"=>DB2_I5_FETCH_ON);
db2_set_option($stmt,$options,0);
if (db2_execute($stmt)) {
   while ($row = db2_fetch_array($stmt)) {
      echo "{$row[0]} {$row[1]}";
   }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
first2 last2
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_connect</function></member>
    <member><function>db2_pconnect</function></member>
    <member><function>db2_exec</function></member>
    <member><function>db2_prepare</function></member>
    <member><function>db2_cursor_type</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
