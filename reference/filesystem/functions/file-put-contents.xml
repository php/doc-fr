<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ea62fb83196997032641b50fe44420305466195e Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.file-put-contents">
 <refnamediv>
  <refname>file_put_contents</refname> 
  <refpurpose>Écrit des données dans un fichier</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>null</type></type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Revient à appeler les fonctions <function>fopen</function>, 
   <function>fwrite</function> et <function>fclose</function> 
   successivement.
  </para>
  <para>
   Si le fichier <parameter>filename</parameter> n'existe pas, il
   sera créé. Sinon, le fichier existant sera écrasé, si l'option
   <constant>FILE_APPEND</constant> n'est pas définie.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Chemin vers le fichier dans lequel on doit écrire les données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données à écrire. Peut être soit une &string;, un &array; ou une
       ressource de flux (explication plus bas).
      </para>
      <para>
       Si <parameter>data</parameter> est une ressource de type <type>stream</type>,
       le buffer restant de ce flux sera copié dans le fichier spécifié.
       Cela revient à utiliser la fonction <function>stream_copy_to_stream</function>.
      </para>
      <para>
       Vous pouvez également spécifier le paramètre <parameter>data</parameter>
       en tant qu'un tableau à une seule dimension. C'est l'équivalent à
       <literal>file_put_contents($filename, implode('', $array))</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       La valeur du paramètre <parameter>flags</parameter> peut être n'importe
       quelle combinaison des drapeaux suivants, liés par l'opérateur binaire OU
       (<literal>|</literal>).
      </para>
      <para>
       <table>
        <title>Drapeaux disponibles</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Drapeau</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <constant>FILE_USE_INCLUDE_PATH</constant>
           </entry>
           <entry>
            Recherche le fichier <parameter>filename</parameter> dans le dossier
            d'inclusion. Voir <link linkend="ini.include-path">include_path</link>
            pour plus d'informations.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_APPEND</constant>
           </entry>
           <entry>
            Si le fichier <parameter>filename</parameter> existe déjà, 
            cette option permet d'ajouter les données au fichier au lieu
            de l'écraser.
           </entry>
          </row>
          <row>
           <entry>
            <constant>LOCK_EX</constant>
           </entry>
           <entry>
            Acquiert un verrou exclusif sur le fichier lors de l'opération
            d'écriture. En d'autre terme, un appel à la fonction
            <function>flock</function> survient entre l'appel à la fonction
            <function>fopen</function> et l'appel à la fonction
            <function>fwrite</function>. Ce comportement n'est pas identique à
            un appel à la fonction <function>fopen</function> avec le mode "x".
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Une ressource de contexte valide créée avec la fonction
       <function>stream_context_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le nombre d'octets qui ont été écrits au fichier, ou &false;
   si une erreur survient.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Utilisation simple de file_put_contents</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// Ouvre un fichier pour lire un contenu existant
$current = file_get_contents($file);
// Ajoute une personne
$current .= "Jean Dupond\n";
// Écrit le résultat dans le fichier
file_put_contents($file, $current);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Utilisation d'options pour file_put_contents</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// Une nouvelle personne à ajouter
$person = "Jean Dupond\n";
// Ecrit le contenu dans le fichier, en utilisant le drapeau
// FILE_APPEND pour rajouter à la suite du fichier et
// LOCK_EX pour empêcher quiconque d'autre d'écrire dans le fichier
// en même temps
file_put_contents($file, $person, FILE_APPEND | LOCK_EX);
?>
]]>
    </programlisting>
   </example>
   </para>
  </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &tip.fopen-wrapper;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
