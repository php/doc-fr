<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 34e2e3541c52edc9f60a1ad9735b1f769254eb1e Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.fgetcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>Obtient une ligne depuis un pointeur de fichier et l'analyse pour des champs CSV</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Similaire à <function>fgets</function> mais <function>fgetcsv</function>
   analyse la ligne qu'il lit et recherche les champs <acronym>CSV</acronym>,
   qu'il va retourner dans un tableau les contenant.
  </para>
  <note>
   <para>
    La définition des locales entre en jeu avec cette fonction. Si
    <literal>LC_CTYPE</literal> vaut, par exemple <literal>en_US.UTF-8</literal>,
    les fichiers encodés avec un encodage d'un octet peuvent être mal lus par cette fonction.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Un pointeur valide sur un fichier ouvert avec <function>fopen</function>,
       <function>popen</function> ou <function>fsockopen</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Doit être plus grand que la plus grande ligne (en terme de caractères) 
       à lire dans le fichier (y compris le caractère de fin de ligne).
       Dans le cas contraire la ligne sera scindée en tranches de <parameter>length</parameter> caractères,
       sauf si la scission se produit à l'intérieur d'un encadrement.
      </para>
      <para>
       Omettre ce paramètre (ou le définir à 0, ou &null; en PHP 8.0.0 ou
       ultérieur) fait que la longueur maximale de la ligne n'est pas limitée,
       ce qui est légèrement plus lent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       Le paramètre optionnel <parameter>separator</parameter> définit le séparateur de champ (un caractère d'un seul octet).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       Le paramètre optionnel <parameter>enclosure</parameter> définit le caractère d'encadrement de texte (un caractère d'un seul octet).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       Le paramètre optionnel <parameter>escape</parameter> définit le caractère d'échappement (au plus un caractère d'un seul octet).
       Une &string; vide (<literal>""</literal>) désactive le mécanisme d'échappement propriétaire.
      </para>
      <note>
       <simpara>
        En général un caractère d'encadrement <parameter>enclosure</parameter> est
        échappé à l'intérieur d'un champ en le dédoublant ;
        Cependant, le caractère d'échappement <parameter>escape</parameter> peut être utilisé comme une alternative.
        Donc pour la valeur par défaut <literal>""</literal> et <literal>\"</literal>
        ont la même signification. Outre échapper le caractère d'encadrement <parameter>enclosure</parameter>
        le caractère d'échappement <parameter>escape</parameter> n'a pas de
        signification spéciale ; même pas de s'échapper lui-même.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau indexé contenant les champs lus en cas de succès, &return.falseforfailure;.
  </para>
  <note>
   <para>
    Une ligne vide dans un fichier CSV sera retournée sous la 
    forme d'un tableau contenant la valeur &null; et ne sera pas traitée 
    comme une erreur.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> est désormais nullable.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Le paramètre <parameter>escape</parameter> accepte désormais une chaîne de
        caractère vide afin de désactiver le mécanisme d'échappement propriétaire.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Lit et affiche le contenu d'un fichier CSV</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num champs à la ligne $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_getcsv</function></member>
    <member><function>explode</function></member>
    <member><function>file</function></member>
    <member><function>pack</function></member>
    <member><function>fputcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
