<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 946fbe44b60bd5fdc1d7b7a5f016be670425f5b4 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.fnmatch" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fnmatch</refname>
  <refpurpose>Teste un nom de fichier au moyen d'un masque de recherche</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>fnmatch</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>fnmatch</function> vérifie si la chaîne <parameter>filename</parameter>
   va passer le masque Shell <parameter>pattern</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Le <parameter>pattern</parameter> à comparer. Habituellement, le <parameter>pattern</parameter> contiendra
       des caractères génériques tels que <literal>'?'</literal> et <literal>'*'</literal>.
      <table>
       <title>
        Caractères génériques à utiliser dans le paramètre <parameter>pattern</parameter>
       </title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Caractère générique</entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>
           <literal>?</literal>
          </entry>
          <entry>
           Le point d'interrogation correspondra à n'importe quel caractère unique.
           Par exemple, le motif <literal>"file?.txt"</literal> correspondra à <literal>"file1.txt"</literal> et
           <literal>"fileA.txt"</literal>, mais ne correspondra pas à <literal>"file10.txt"</literal>.
          </entry>
         </row>
         <row>
          <entry>
           <literal>*</literal>
          </entry>
          <entry>
           L'astérisque correspondra à zéro ou plusieurs caractères.
           Par exemple, le motif <literal>"foo*.xml"</literal> correspondra à <literal>"foo.xml"</literal> et
           <literal>"foobar.xml"</literal>.
          </entry>
         </row>
         <row>
          <entry>
           <literal>[ ]</literal>
          </entry>
          <entry>
           Les crochets sont utilisés pour créer des plages de points de code ASCII ou des ensembles de caractères.
           Par exemple, le motif <literal>"index.php[45]"</literal> correspondra à <literal>"index.php4"</literal> et
           <literal>"index.php5"</literal>, mais ne correspondra pas à <literal>"index.phpt"</literal>.
           Des plages bien connues sont <literal>[0-9]</literal>, <literal>[a-z]</literal> et <literal>[A-Z]</literal>.
           Plusieurs ensembles et plages peuvent être utilisés simultanément, par exemple <literal>[0-9a-zABC]</literal>.
          </entry>
         </row>
         <row>
          <entry>
           <literal>!</literal>
          </entry>
          <entry>
           Le point d'exclamation est utilisé pour nier les caractères dans les crochets.
           Par exemple, <literal>"[!A-Z]*.html"</literal> correspondra à <literal>"demo.html"</literal>, mais ne correspondra pas à
           <literal>"Demo.html"</literal>.
          </entry>
         </row>
         <row>
          <entry>
           <literal>\</literal>
          </entry>
          <entry>
           Le backslash est utilisé pour échapper les caractères spéciaux.
           Par exemple, <literal>"Name\?"</literal> correspondra à <literal>"Name?"</literal>, mais ne correspondra pas à
           <literal>"Names"</literal>.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>filename</parameter></term>
    <listitem>
     <para>
      La chaîne testée. Cette fonction est particulièrement utile pour les
      noms de fichier, mais peut également être utilisée sur des chaînes
      régulières.
     </para>
     <para>
      L'utilisateur moyen de Shell peut être familier avec les masques Shell,
      ou tout au moins, leurs expressions les plus simples, comme <literal>'?'</literal> et
      <literal>'*'</literal>. De cette façon, utiliser 
      <function>fnmatch</function> au lieu de
      <function>preg_match</function> pour des recherches peut être plus
      pratique pour les non-initiés.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      La valeur de <parameter>flags</parameter> peut être une combinaison
      des drapeaux suivants, joins avec l'
      <link linkend="language.operators.bitwise">opérateur binaire OR (|)</link>.
      <table>
       <title>
        Liste des drapeaux possibles pour <function>fnmatch</function>
       </title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry><parameter>Flag</parameter></entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>FNM_NOESCAPE</constant></entry>
          <entry>
           Désactive l'échappement des antislashes.
          </entry>
         </row>
         <row>
          <entry><constant>FNM_PATHNAME</constant></entry>
          <entry>
           Un slash dans une chaîne correspond uniquement à un slash
            dans le masque fourni.
           </entry>
          </row>
          <row>
           <entry><constant>FNM_PERIOD</constant></entry>
           <entry>
            Un point en début de chaîne doit correspondre exactement à
            un point dans le masque fourni.
           </entry>
          </row>
          <row>
           <entry><constant>FNM_CASEFOLD</constant></entry>
           <entry>
            Les correspondances ne tiennent pas compte de la casse. Fait parti
            de l'extension GNU.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; s'il y a des résultats, &false; sinon.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Vérifier le nom d'une couleur avec un masque Shell</title>
    <programlisting role="php">
<![CDATA[
<?php
if (fnmatch("*gr[ae]y", $color)) {
  echo "des formes de gris ...";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Actuellement, cette fonction n'est pas disponible pour
    les systèmes non-POSIX, à l'exception de Windows.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>glob</function></member>
    <member><function>preg_match</function></member>
    <member><function>sscanf</function></member>
    <member><function>printf</function></member>
    <member><function>sprintf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
