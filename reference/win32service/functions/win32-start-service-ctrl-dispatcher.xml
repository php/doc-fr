<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d72f13eaf9e06715ae68eac72aa3fd6ae83eb78 Maintainer: jbnahan Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.win32-start-service-ctrl-dispatcher" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>win32_start_service_ctrl_dispatcher</refname>
  <refpurpose>Enregistre un script avec SCM, alors il peut être interprété en tant que service avec le nom donné</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>win32_start_service_ctrl_dispatcher</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>gracefulMode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Lorsque exécuté via le Gestionnaire de Contrôle de Service, un processus de
   service est requis pour "archiver" avec lui pour établir un service de
   surveillance et de communication ergonomique. Cette fonction effectue un
   archivage en démarrant un thread pour gérer les communications de bas
   niveau avec le gestionnaire de contrôle de service.
  </para>
  <para>
   Une fois démarré, le processus du service doit faire 2 choses. La première
   est d'indiquer au Service Control Manager que le service est en cours
   d'exécution. La seconde est d'appeler la fonction
   <function>win32_set_service_status</function> avec la constante
   <constant>WIN32_SERVICE_RUNNING</constant>. Si vous avez besoin de
   lancer des processus longs avant que le service ne soit lancé, alors
   vous pouvez utiliser la constante <constant>WIN32_SERVICE_START_PENDING</constant>.
   La seconde est de continuer à vérifier en utilisant le Service Control Manager
   sachant qu'il peut déterminer si le service se termine ou non. Ceci consiste
   à appeler, périodiquement, la fonction <function>win32_get_last_control_message</function>
   et à traiter le code retourné.
  </para>
  
  <caution>
   <para>
    Depuis la version 0.2.0, cette fonction fonctionne uniquement en ligne de 
    commande. Elle est désactivé dans les autres cas.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Le court nom du service, comme enregistré par
       <function>win32_create_service</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>gracefulMode</parameter></term>
     <listitem>
      <para>
       &true; pour la sortie gracieuse. &false; pour la sortie avec erreur. Voir 
       <function>win32_set_service_exit_mode</function> pour plus de détails.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
  <para>
    Avant la version 1.0.0, &win32service.noerror.false.error;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Avant la version 1.0.0, si cette fonction est utilisé en dehors du SAPI <literal>"cli"</literal>, une 
   erreur <constant>E_ERROR</constant> sera émise.
  </para>
  <para>
   À partir de la version 1.0.0, lancera une 
   <classname>Win32ServiceException</classname> si le SAPI n'est pas 
   <literal>"cli"</literal>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lance une <classname>ValueError</classname> si un paramètre est invalide,
        avant &false; était retourné.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lance une <classname>Win32ServiceException</classname> en cas d'erreur,
        avant un
        <link xmlns="http://docbook.org/ns/docbook" linkend="win32service.constants.errors">Code d'erreur Win32</link>
        était retourné.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Le type de retour est maintenant <type>void</type>, avant il était <type>mixed</type>.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.4.0</entry>
       <entry>
        Le paramètre <parameter>gracefulMode</parameter> a été ajouté.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.2.0</entry>
       <entry>
        Cette fonction fonctionne uniquement en ligne de
        commande.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>win32_start_service_ctrl_dispatcher</function></title>
    <para>
     Vérifie si le service fonctionne sous SCM.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (!win32_start_service_ctrl_dispatcher('dummyphp')) {
  die("Je ne fonctionne probablement pas sous le gestionnaire de contrôle de service");
}

win32_set_service_status(WIN32_SERVICE_START_PENDING);

// Quelques processus longs à récupérer pendant que le service fonctionne.

win32_set_service_status(WIN32_SERVICE_RUNNING);


while (WIN32_SERVICE_CONTROL_STOP != win32_get_last_control_message()) {
  # effectuer votre travail ici.
  # essayez de ne pas prendre plus de 30 secondes avant de retourner au
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>win32_set_service_status</function></member>
    <member><function>win32_get_last_control_message</function></member>
    <member><function>win32_set_service_exit_mode</function></member>
    <member><function>win32_set_service_exit_code</function></member>
    <member>Les <link linkend="win32service.constants.errors">codes erreur Win32</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
