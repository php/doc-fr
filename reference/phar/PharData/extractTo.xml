<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phardata.extractto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>PharData::extractTo</refname>
  <refpurpose>Extrait le contenu d'une archive tar/zip vers un répertoire</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PharData">
   <modifier>public</modifier> <type>bool</type><methodname>PharData::extractTo</methodname>
   <methodparam><type>string</type><parameter>directory</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>files</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>overwrite</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Extrait tous les fichiers d'une archive tar/zip vers le disque.
   Les fichiers et les répertoires extraits conservent les permissions
   telles qu'au sein de l'archive. Les paramètres optionnels permettent un
   éventuel contrôle sur quels fichiers seront extraits et si les fichiers
   déjà présents sur le disque peuvent être écrasés. Le second paramètre
   <literal>files</literal> peut être le nom d'un fichier ou d'un répertoire
   à extraire, ou tableau de nom de fichiers et de répertoires à extraire.
   Par défaut, cette méthode n'écrasera aucun fichier déjà existant, à moins
   que le troisième paramètre soit à &true;. Cette méthode est identique à
   <function>ZipArchive::extractTo</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>directory</parameter></term>
     <listitem>
      <para>
       Chemin où les fichiers seront extraits.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>files</parameter></term>
     <listitem>
      <para>
       Le nom d'un fichier ou d'un répertoire à extraire, ou un tableau
       de fichiers/répertoires à extraire
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>overwrite</parameter></term>
     <listitem>
      <para>
       Le passer à &true; pour activer l'écrasement des fichiers déjà
       existants
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, mais il est préférable de vérifier les
   exception soulevées et de considérer le succès si aucune ne l'est.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Soulève une exception <classname>PharException</classname> si des erreurs
   sont rencontrés lors de l'écriture des changements sur le disque.
  </para>
 </refsect1> 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>PharData::extractTo</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $phar = new PharData('monphar.tar');
    $phar->extractTo('/chemin/complet'); // extrait tous les fichiers
    $phar->extractTo('/un/autre/chemin', 'fichier.txt'); // extrait seulement fichier.txt
    $phar->extractTo('/ce/chemin',
        array('fichier1.txt', 'fichier2.txt')); // extrait seulement 2 fichiers
    $phar->extractTo('/troisieme/chemin', null, true); // extrait tous les fichiers, en écrasant
} catch (Exception $e) {
    // on traite les erreurs
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.extractto-windows;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::extractTo</function></member>
   </simplelist>
  </para>
 </refsect1> 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
