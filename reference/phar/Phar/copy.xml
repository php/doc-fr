<?xml version='1.0' encoding='utf-8'?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.copy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::copy</refname>
  <refpurpose>Copie un fichier appartenant à une archive vers un autre fichier de la même archive</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>bool</type><methodname>Phar::copy</methodname>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Copie un fichier appartenant à une archive vers un nouveau
   fichier de la même archive. C'est une alternative orientée
   objet à l'utilisation de <function>copy</function> avec un
   flux phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, mais il est plus sûr d'encadrer l'appel à cette méthode
   dans un bloc try/catch et de considérer son succès si aucune exception n'est levée.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lève une exception <classname>UnexpectedValueException</classname> 
   si le fichier source n'existe pas, si le fichier destination existe 
   déjà, si l'accès en écriture est désactivé, si ouvrir l'un ou l'autre
   des fichiers échoue, si la lecture du fichier source échoue, ou lève 
   une exception <classname>PharException</classname>
   si l'écriture des changement dans le phar échoue.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>Phar::copy</function></title>
    <para>
     Cet exemple montre comment utiliser <function>Phar::copy</function> et la comparaison en terme
     de performance avec l'équivalent utilisant le flux phar. La différence principale entre
     les deux méthodes concerne la gestion des erreurs. Toutes les méthodes Phar lèvent des
     exceptions, là où les fonctions de flux utilisent <function>trigger_error</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $phar = new Phar('monphar.phar');
    $phar['a'] = 'salut';
    $phar->copy('a', 'b');
    echo $phar['b']; // affiche "salut"
} catch (Exception $e) {
    // traite les erreurs
}

// l'équivalent en terme de flux du code ci-dessus
// des E_WARNING sont retournés plutôt que des exceptions
copy('phar://monphar.phar/a', 'phar//monphar.phar/c');
echo file_get_contents('phar://monphar.phar/c'); // affiche "salut"
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
