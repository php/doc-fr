<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.offsetunset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Phar::offsetUnset</refname>
  <refpurpose>Efface un fichier d'un phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>void</type><methodname>Phar::offsetUnset</methodname>
   <methodparam><type>string</type><parameter>localName</parameter></methodparam>
  </methodsynopsis>
  &phar.write;


  <para>
   C'est une implémentation de l'interface <interfacename>ArrayAccess</interfacename> qui permet
   la manipulation directe du contenu d'une archive Phar en utilisant les crochets d'accès au tableau.
   offsetUnset est utilisé pour supprimer un fichier existant et est appelé par la fonction <function>unset</function>.
  </para>

 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>localName</parameter></term>
     <listitem>
      <para>
       Le nom de fichier (en chemin relatif) à chercher dans le Phar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si <link linkend="ini.phar.readonly">phar.readonly</link> est à <literal>1</literal>,
   une exception <classname>BadMethodCallException</classname> est levée, car modifier un Phar n'est
   permis que quand phar.readonly est à <literal>0</literal>.Une exception
   <classname>PharException</classname> est levée s'il y a eu un problème lors de l'écriture des
   changements de l'archive Phar sur le disque.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>Phar::offsetUnset</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/chemin/vers/mon.phar', 0, 'mon.phar');
try {
    // efface fichier.txt de mon.phar en appelant offsetUnset
    unset($p['fichier.txt']);
} catch (Exception $e) {
    echo 'Ne peut pas effacer fichier.txt: ', $e;
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::offsetExists</function></member>
    <member><function>Phar::offsetGet</function></member>
    <member><function>Phar::offsetSet</function></member>
    <member><function>Phar::unlinkArchive</function></member>
    <member><function>Phar::delete</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
