<?xml version='1.0' encoding='utf-8'?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: gui Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="phar.interceptfilefuncs" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::interceptFileFuncs</refname>
  <refpurpose>Informe phar qu'il doit intercepter les fonctions de fichiers</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>Phar::interceptFileFuncs</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Informe phar d'intercepter <function>fopen</function>, <function>readfile</function>,
   <function>file_get_contents</function>, <function>opendir</function> et toutes les fonctions
   relatives à stat. Si n'importe laquelle de ces fonctions est appelée depuis l'archive phar
   avec un chemin relatif, l'appel est modifié pour accéder à un fichier au sein de l'archive.
   Les chemins absolus sont supposés être des tentatives de chargement de fichiers externes à 
   partir du système de fichiers.
  </para>
  <para>
   Cette fonction rend possible l'exécution d'applications PHP conçues
   pour être lancées en dehors d'un disque dur, en tant qu'application phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Aucun paramètre.
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  </para>
 </refsect1>

  <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>Phar::interceptFileFuncs</function></title>
    <programlisting role="php">
<![CDATA[
<?php
Phar::interceptFileFuncs();
include 'phar://' . __FILE__ . '/fichier.php';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   En supposant que ce phar est nommé <literal>/chemin/vers/monphar.phar</literal> est qu'il 
   contient <literal>fichier.php</literal> et
   <literal>fichier2.txt</literal>, si <literal>fichier.php</literal> contient ce code :
  </para>
  <para>
   <example>
    <title>Un exemple avec <function>Phar::interceptFileFuncs</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo file_get_contents('fichier2.txt');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Normalement, PHP chercherait dans le répertoire courant le fichier nommé <literal>file2.txt</literal>,
   c'est à dire dans le répertoire de fichier.php ou le répertoire courant de l'utilisateur de la ligne
   de commande. <function>Phar::interceptFileFuncs</function> dit à
   PHP de considérer <literal>phar:///chemin/vers/monphar.phar/</literal> comme répertoire courant
   et ainsi ouvre dans l'exemple ci-dessus le fichier <literal>phar:///chemin/vers/monphar.phar/fichier2.txt</literal>.
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
