<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 15b93836d93f01ea6d90a68cacf04ce0d9fb8eff Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.bcround" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>bcround</refname>
  <refpurpose>Arrondit un nombre de précision arbitraire</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>bcround</methodname>
   <methodparam><type>string</type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>precision</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>RoundingMode</type><parameter>mode</parameter><initializer>RoundingMode::HalfAwayFromZero</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Renvoie la valeur arrondie de <parameter>num</parameter> à
   la précision spécifiée <parameter>precision</parameter>
   (nombre de chiffres après la virgule).
   <parameter>precision</parameter> peut également être négatif ou nul (par défaut).
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.round')/db:refsect1[@role='parameters']/descendant::db:varlistentry[1])" />
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.round')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
   <xi:include xpointer="bcmath-number.round..parameters.mode" />
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Renvoie une chaîne numérique représentant <parameter>num</parameter> arrondi à la précision donnée.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Cette fonction lance une <exceptionname>ValueError</exceptionname> dans les cas suivants :
   <simplelist>
    <member><parameter>num</parameter> n'est pas une chaîne numérique BCMath bien formée.</member>
    <member>Un <parameter>mode</parameter> invalide est spécifié.</member>
   </simplelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
   <example>
   <title>Exemples de <function>bcround</function></title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(bcround('3.4'));
var_dump(bcround('3.5'));
var_dump(bcround('3.6'));
var_dump(bcround('3.6', 0));
var_dump(bcround('5.045', 2));
var_dump(bcround('5.055', 2));
var_dump(bcround('345', -2));
var_dump(bcround('345', -3));
var_dump(bcround('678', -2));
var_dump(bcround('678', -3));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
string(1) "3"
string(1) "4"
string(1) "4"
string(1) "4"
string(4) "5.05"
string(4) "5.06"
string(3) "300"
string(1) "0"
string(3) "700"
string(4) "1000"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemple de l'utilisation de <function>bcround</function> avec différentes valeurs de <parameter>precision</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
$number = '123.45';

var_dump(bcround($number, 3));
var_dump(bcround($number, 2));
var_dump(bcround($number, 1));
var_dump(bcround($number, 0));
var_dump(bcround($number, -1));
var_dump(bcround($number, -2));
var_dump(bcround($number, -3));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
string(7) "123.450"
string(6) "123.45"
string(5) "123.5"
string(3) "123"
string(3) "120"
string(3) "100"
string(1) "0"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemple de l'utilisation de <function>bcround</function> avec différentes valeurs de <parameter>mode</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
echo 'Modes d'arrondissements avec 9.5' . PHP_EOL;
var_dump(bcround('9.5', 0, RoundingMode::HalfAwayFromZero));
var_dump(bcround('9.5', 0, RoundingMode::HalfTowardsZero));
var_dump(bcround('9.5', 0, RoundingMode::HalfEven));
var_dump(bcround('9.5', 0, RoundingMode::HalfOdd));
var_dump(bcround('9.5', 0, RoundingMode::TowardsZero));
var_dump(bcround('9.5', 0, RoundingMode::AwayFromZero));
var_dump(bcround('9.5', 0, RoundingMode::NegativeInfinity));
var_dump(bcround('9.5', 0, RoundingMode::PositiveInfinity));

echo PHP_EOL;
echo 'Modes d'arrondissements avec 8.5' . PHP_EOL;
var_dump(bcround('8.5', 0, RoundingMode::HalfAwayFromZero));
var_dump(bcround('8.5', 0, RoundingMode::HalfTowardsZero));
var_dump(bcround('8.5', 0, RoundingMode::HalfEven));
var_dump(bcround('8.5', 0, RoundingMode::HalfOdd));
var_dump(bcround('8.5', 0, RoundingMode::TowardsZero));
var_dump(bcround('8.5', 0, RoundingMode::AwayFromZero));
var_dump(bcround('8.5', 0, RoundingMode::NegativeInfinity));
var_dump(bcround('8.5', 0, RoundingMode::PositiveInfinity));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
Modes d'arrondissements avec 9.5
string(2) "10"
string(1) "9"
string(2) "10"
string(1) "9"
string(1) "9"
string(2) "10"
string(1) "9"
string(2) "10"

Modes d'arrondissements avec 8.5
string(1) "9"
string(1) "8"
string(1) "8"
string(1) "9"
string(1) "8"
string(1) "9"
string(1) "8"
string(1) "9"
]]>
   </screen>
  </example>
  <example>
   <title>
    Exemple de l'utilisation de <function>bcround</function> avec différentes valeurs de <parameter>mode</parameter>
    lors de la spécification de <parameter>precision</parameter>
   </title>
   <programlisting role="php">
<![CDATA[
<?php
echo 'Utilisation de RoundingMode::HalfAwayFromZero avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfAwayFromZero));
var_dump(bcround(-1.55, 1, RoundingMode::HalfAwayFromZero));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::HalfTowardsZero avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfTowardsZero));
var_dump(bcround(-1.55, 1, RoundingMode::HalfTowardsZero));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::HalfEven avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfEven));
var_dump(bcround(-1.55, 1, RoundingMode::HalfEven));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::HalfOdd avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::HalfOdd));
var_dump(bcround(-1.55, 1, RoundingMode::HalfOdd));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::TowardsZero avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::TowardsZero));
var_dump(bcround(-1.55, 1, RoundingMode::TowardsZero));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::AwayFromZero avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::AwayFromZero));
var_dump(bcround(-1.55, 1, RoundingMode::AwayFromZero));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::NegativeInfinity avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::NegativeInfinity));
var_dump(bcround(-1.55, 1, RoundingMode::NegativeInfinity));

echo PHP_EOL;
echo 'Utilisation de RoundingMode::PositiveInfinity avec une précision décimal de 1' . PHP_EOL;
var_dump(bcround( 1.55, 1, RoundingMode::PositiveInfinity));
var_dump(bcround(-1.55, 1, RoundingMode::PositiveInfinity));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen role="php">
<![CDATA[
Utilisation de RoundingMode::HalfAwayFromZero avec une précision décimal de 1
string(3) "1.6"
string(4) "-1.6"

Utilisation de RoundingMode::HalfTowardsZero avec une précision décimal de 1
string(3) "1.5"
string(4) "-1.5"

Utilisation de RoundingMode::HalfEven avec une précision décimal de 1
string(3) "1.6"
string(4) "-1.6"

Utilisation de RoundingMode::HalfOdd avec une précision décimal de 1
string(3) "1.5"
string(4) "-1.5"

Utilisation de RoundingMode::TowardsZero avec une précision décimal de 1
string(3) "1.5"
string(4) "-1.5"

Utilisation de RoundingMode::AwayFromZero avec une précision décimal de 1
string(3) "1.6"
string(4) "-1.6"

Utilisation de RoundingMode::NegativeInfinity avec une précision décimal de 1
string(3) "1.5"
string(4) "-1.6"

Utilisation de RoundingMode::PositiveInfinity avec une précision décimal de 1
string(3) "1.6"
string(4) "-1.5"
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcceil</function></member>
   <member><function>bcfloor</function></member>
   <member><methodname>BcMath\Number::round</methodname></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
