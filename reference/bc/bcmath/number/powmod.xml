<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c7e83fbbbcde9f54affc09424d032c38492a3ff4 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="bcmath-number.powmod" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>BcMath\Number::powmod</refname>
  <refpurpose>Elève une nombre de précision arbitraire, réduit par un modulo spécifié</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="BcMath\\Number">
   <modifier>public</modifier> <type>BcMath\Number</type><methodname>BcMath\Number::powmod</methodname>
   <methodparam><type class="union"><type>BcMath\Number</type><type>string</type><type>int</type></type><parameter>exponent</parameter></methodparam>
   <methodparam><type class="union"><type>BcMath\Number</type><type>string</type><type>int</type></type><parameter>modulus</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>scale</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Utilise la méthode rapide d'exponentiation pour élever <varname>$this</varname> à la puissance
   <parameter>exponent</parameter> par rapport au modulo <parameter>modulus</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>exponent</parameter></term>
    <listitem>
     <simpara>
       L'exposant, en tant que non négatif et intégral (c'est-à-dire que l'échelle doit être zéro).
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>modulus</parameter></term>
    <listitem>
     <simpara>
       Le modulo, en tant qu'intégral (c'est-à-dire que l'échelle doit être zéro).
     </simpara>
    </listitem>
   </varlistentry>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('bcmath-number.add')/db:refsect1[@role='parameters']/descendant::db:varlistentry[2])" />
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Renvoie le résultat sous forme d'un nouvel objet <classname>BcMath\Number</classname>.
  </simpara>
  <simpara>
   Lorsque le <property>BcMath\Number::scale</property> du résultat est défini automatiquement,
   le plus grand <property>BcMath\Number::scale</property> des trois nombres utilisés pour l'opération de modulo est utilisé.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Cette méthode lève une <exceptionname>ValueError</exceptionname> dans les cas suivants:
   <simplelist>
    <member><parameter>exponent</parameter> ou <parameter>modulus</parameter> est un <type>string</type> et n'est pas
    une chaîne numérique BCMath bien formée</member>
    <member><varname>$this</varname>, <parameter>exponent</parameter> ou <parameter>modulus</parameter> a une partie fractionnel</member>
    <member><parameter>exponent</parameter> est une valeur négative</member>
    <member><parameter>scale</parameter> est en dehors de la plage valide</member>
   </simplelist>
  </para>
  <simpara>
   Cette méthode lève une exception <exceptionname>DivisionByZeroError</exceptionname> si <parameter>modulus</parameter>
   est <literal>0</literal>.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple de <methodname>BcMath\Number::powmod</methodname> lorsque <parameter>scale</parameter> n'est pas spécifié</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(
    new BcMath\Number('8')->powmod(new BcMath\Number('3'), 5),
    new BcMath\Number('-8')->powmod(new BcMath\Number('3'), 5),
    new BcMath\Number('8')->powmod('2', -3),
    new BcMath\Number('-8')->powmod(5, 7),
);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(1) "2"
  ["scale"]=>
  int(0)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(2) "-2"
  ["scale"]=>
  int(0)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(1) "1"
  ["scale"]=>
  int(0)
}
object(BcMath\Number)#5 (2) {
  ["value"]=>
  string(2) "-1"
  ["scale"]=>
  int(0)
}
]]>
   </screen>
  </example>

  <example>
   <title>Exemple de <methodname>BcMath\Number::powmod</methodname> en spécifiant <parameter>scale</parameter> explicitement</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(
    new BcMath\Number('8')->powmod(new BcMath\Number('3'), 5, 1),
    new BcMath\Number('-8')->powmod(new BcMath\Number('3'), 5, 2),
    new BcMath\Number('8')->powmod('2', -3, 3),
    new BcMath\Number('-8')->powmod(5, 7, 4),
);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
object(BcMath\Number)#3 (2) {
  ["value"]=>
  string(3) "2.0"
  ["scale"]=>
  int(1)
}
object(BcMath\Number)#4 (2) {
  ["value"]=>
  string(5) "-2.00"
  ["scale"]=>
  int(2)
}
object(BcMath\Number)#2 (2) {
  ["value"]=>
  string(5) "1.000"
  ["scale"]=>
  int(3)
}
object(BcMath\Number)#5 (2) {
  ["value"]=>
  string(7) "-1.0000"
  ["scale"]=>
  int(4)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>bcpowmod</function></member>
   <member><methodname>BcMath\Number::pow</methodname></member>
   <member><methodname>BcMath\Number::mod</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
