<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 63b99082ef83eade08151f8cb528246fded81db9 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="mysqli.real-connect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::real_connect</refname>
  <refname>mysqli_real_connect</refname>
  <refpurpose>Ouvre une connexion à un serveur MySQL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli::real_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_real_connect</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mysqli_real_connect</function> établit une connexion avec un serveur MySQL.
  </para>
  <para>
   Cette fonction diffère de <function>mysqli_connect</function> :
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <function>mysqli_real_connect</function> a besoin d'un objet créé
     avec <function>mysqli_init</function>.
    </para>
   </listitem>
   <listitem>
    <para>
     Avec la fonction <function>mysqli_options</function>, vous pouvez
     configurer différentes options de connexion.
    </para>
   </listitem>
   <listitem>
    <para>
     Il y a un paramètre supplémentaire <parameter>flags</parameter>.
    </para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Peut-être un nom d'hôte ou une adresse IP. En utilisant la valeur
       &null; ou la chaîne "localhost", l'hôte local est utilisé. Lorsque
       c'est possible, les pipes seront utilisés à la place de la pile TCP/IP.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Le nom d'utilisateur MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>passwd</parameter></term>
     <listitem>
      <para>
       Si non fourni ou &null;, le serveur MySQL tentera de réaliser l'identification
       avec les utilisateurs sans mot de passe. Cela permet à un nom 
       d'utilisateur d'être utilisé avec différentes droits, suivant
       que le mot de passe est fourni ou pas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dbname</parameter></term>
     <listitem>
      <para>
       Si fourni, ce paramètre indique le nom de la base de données
       de travail par défaut.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Spécifie le numéro de port à utiliser pour se connecter au serveur MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Spécifie le socket ou le pipe nommé qui doit être utilisé pour 
       établir la connexion.
      </para>
      <note>
       <para>
        Spécifier explicitement le paramètre <parameter>socket</parameter> 
        ne détermine pas le type de méthode utilisée lors de la connexion
        à MySQL. La méthode est déterminée par le paramètre 
        <parameter>host</parameter>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Avec le paramètre <parameter>flags</parameter>, vous pouvez configurer
       différentes directives de connexion : 
      </para>
      <table xml:id="mysqli.real-connect.flags">
       <title>Options supportées</title>
       <tgroup cols="2">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><constant>MYSQLI_CLIENT_COMPRESS</constant></entry>
         <entry>Utilise le protocole compressé</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_FOUND_ROWS</constant></entry>
         <entry>Retourne le nombre de ligne trouvées, pas le nombre de lignes affectées.</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_IGNORE_SPACE</constant></entry>
         <entry>Autorise les espaces entre les noms de fonctions et les arguments. Cela force les noms de fonctions à être des mots réservés.</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_INTERACTIVE</constant></entry>
         <entry>
          Autorise <literal>interactive_timeout</literal> secondes (au lieu de
          <literal>wait_timeout</literal> secondes) d'inactivité avant de fermer
          la connexion.
         </entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_SSL</constant></entry>
         <entry>Utilise le chiffrement SSL</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT</constant></entry>
         <entry>
          Identique à <constant>MYSQLI_CLIENT_SSL</constant>, mais désactive la validation
          des certificats SSL fournis. Cette constante n'est prévue que pour les installations
          utilisant le driver MySQL natif et MySQL 5.6 ou supérieur.
         </entry>
        </row>
        </tbody>
       </tgroup>
      </table>
      <note>
       <para>
        Pour des raisons de sécurité, l'option <constant>MULTI_STATEMENT</constant> n'est
        pas supportée en PHP. Si vous voulez exécuter plusieurs commandes, utilisez
        la fonction <function>mysqli_multi_query</function>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <methodname>mysqli::real_connect</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

$mysqli = mysqli_init();
if (!$mysqli) {
    die('mysqli_init failed');
}

if (!$mysqli->options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
    die('Setting MYSQLI_INIT_COMMAND failed');
}

if (!$mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
    die('Setting MYSQLI_OPT_CONNECT_TIMEOUT failed');
}

if (!$mysqli->real_connect('localhost', 'my_user', 'my_password', 'my_db')) {
    die('Connect Error (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Succès... ' . $mysqli->host_info . "\n";

$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.oop;, avec extension de la classe mysqli</para>
   <programlisting role="php">
<![CDATA[
<?php

class foo_mysqli extends mysqli {
    public function __construct($host, $user, $pass, $db) {
        parent::init();

        if (!parent::options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
            die('Setting MYSQLI_INIT_COMMAND failed');
        }

        if (!parent::options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
            die('Setting MYSQLI_OPT_CONNECT_TIMEOUT failed');
        }

        if (!parent::real_connect($host, $user, $pass, $db)) {
            die('Connect Error (' . mysqli_connect_errno() . ') '
                    . mysqli_connect_error());
        }
    }
}

$db = new foo_mysqli('localhost', 'my_user', 'my_password', 'my_db');

echo 'Succès... ' . $db->host_info . "\n";

$db->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

$link = mysqli_init();
if (!$link) {
    die('mysqli_init failed');
}

if (!mysqli_options($link, MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
    die('Setting MYSQLI_INIT_COMMAND failed');
}

if (!mysqli_options($link, MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
    die('Setting MYSQLI_OPT_CONNECT_TIMEOUT failed');
}

if (!mysqli_real_connect($link, 'localhost', 'my_user', 'my_password', 'my_db')) {
    die('Connect Error (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Succès... ' . mysqli_get_host_info($link) . "\n";

mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Succès... MySQL host info: localhost via TCP/IP
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &mysqli.charset.note;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_connect</function></member>
    <member><function>mysqli_init</function></member>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_ssl_set</function></member>
    <member><function>mysqli_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
