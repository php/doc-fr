<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 63b99082ef83eade08151f8cb528246fded81db9 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::__construct</refname>
  <refname>mysqli::connect</refname>
  <refname>mysqli_connect</refname>
  <refpurpose>Ouvre une connexion à un serveur MySQL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <constructorsynopsis role="mysqli">
   <modifier>public</modifier> <methodname>mysqli::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>hostname</parameter><initializer>ini_get("mysqli.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysqli.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>ini_get("mysqli.default_pw")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>database</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>ini_get("mysqli.default_port")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter><initializer>ini_get("mysqli.default_socket")</initializer></methodparam>
  </constructorsynopsis>
  <methodsynopsis role="mysqli">
   <type>void</type><methodname>mysqli::connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>hostname</parameter><initializer>ini_get("mysqli.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysqli.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>ini_get("mysqli.default_pw")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>database</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>ini_get("mysqli.default_port")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter><initializer>ini_get("mysqli.default_socket")</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>mysqli</type><type>false</type></type><methodname>mysqli_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>hostname</parameter><initializer>ini_get("mysqli.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysqli.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>ini_get("mysqli.default_pw")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>database</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>ini_get("mysqli.default_port")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter><initializer>ini_get("mysqli.default_socket")</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ouvre une connexion au serveur MySQL.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Peut être un nom d'hôte ou une adresse IP.
       L'hôte local est présumé si la valeur &null; ou la chaîne "localhost"
       est passée à ce paramètre.
       Si possible, les pipes seront utilisé à la place du protocole TCP/IP.
       Le protocol TCP/IP est utilisé si un nom d'hôte et numéro de port sont
       fournis ensemble, par exemple <literal>localhost:3308</literal>.
      </para>
      <para>
       Préfixer l'hôte par <literal>p:</literal> ouvre une connexion persistante
       <function>mysqli_change_user</function> est automatiquement appelé
       sur les connexions qui sont utilisées dans le pool de connexions.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Le nom d'utilisateur MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Si le mot de passe n'est pas indiqué (la valeur &null; est passée),
       le serveur MySQL essaiera d'identifier l'utilisateur en étudiant que les
       enregistrements où les utilisateurs n'ont pas de mot de passe. Cela permet
       à un utilisateur de jouir de plusieurs permissions (selon qu'un mot de passe
       est fournit ou non).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>database</parameter></term>
     <listitem>
      <para>
       Si fourni, spécifiera la base de données par défaut à utiliser lors
       de l'exécution de requêtes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Spécifie le numéro du port pour la connexion au serveur MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Spécifie le socket ou le nom du tunnel à utiliser.
      </para>
      <note>
       <para>
        Spécifier le paramètre <parameter>socket</parameter> ne
        déterminera pas explicitement le type de connexion qui sera
        utilisé lors de la connexion au serveur MySQL. Cela est
        déterminé par le paramètre <parameter>hostname</parameter>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <methodname>mysqli::__construct</methodname> retourne toujours un objet qui représente la connexion au serveur MySQL,
   peu importe que celle-ci ait réussi ou non.
  </para>
  <para>
   <function>mysqli_connect</function> retourne un objet qui représente la connexion au serveur MySQL,
   &return.falseforfailure;.
  </para>
  <para>
   <methodname>mysqli::connect</methodname> retourne &null; en cas de succès&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple <methodname>mysqli::__construct</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
/* Vous devriez toujours activer le rapport d'erreur pour mysqli avant une tentative de connexion */
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'my_db');
/* Définir le jeu de caractère désiré après avoir établie une connexion */
$mysqli->set_charset('utf8mb4');
printf("Success... %s\n", $mysqli->host_info);
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
/* Vous devriez toujours activer le rapport d'erreur pour mysqli avant une tentative de connexion */
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = mysqli_connect('localhost', 'my_user', 'my_password', 'my_db');
/* Définir le jeu de caractère désiré après avoir établie une connexion */
mysqli_set_charset($mysqli, 'utf8mb4');
printf("Success... %s\n", mysqli_get_host_info($mysqli));
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Success... localhost via TCP/IP
]]>
   </screen>
  </example>
  <example>
   <title>Étendre la classe mysqli</title>
   <programlisting role="php">
<![CDATA[
<?php
class FooMysqli extends mysqli {
    public function __construct($host, $user, $pass, $db, $port, $socket, $charset) {
        mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
        parent::__construct($host, $user, $pass, $db, $port, $socket);
        $this->set_charset($charset);
    }
}
$db = new FooMysqli('localhost', 'my_user', 'my_password', 'my_db', 3306, null, 'utf8mb4');
]]>
   </programlisting>
  </example>
  <example>
   <title>Gestion d'erreur manuelle</title>
   <para>Si le rapport d'erreur est désactivé, le développeur est responsable pour vérifier et gérer les échecs</para>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
error_reporting(0);
mysqli_report(MYSQLI_REPORT_OFF);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'my_db');
if ($mysqli->connect_errno) {
    throw new RuntimeException('mysqli connection error: ' . $mysqli->connect_error);
}
/* Définir le jeu de caractère désiré après avoir établie une connexion */
$mysqli->set_charset('utf8mb4');
if ($mysqli->errno) {
    throw new RuntimeException('mysqli error: ' . $mysqli->error);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
error_reporting(0);
mysqli_report(MYSQLI_REPORT_OFF);
$mysqli = mysqli_connect('localhost', 'my_user', 'my_password', 'my_db');
if (mysqli_connect_errno()) {
    throw new RuntimeException('mysqli connection error: ' . mysqli_connect_error());
}
/* Définir le jeu de caractère désiré après avoir établie une connexion */
mysqli_set_charset($mysqli, 'utf8mb4');
if (mysqli_errno($mysqli)) {
    throw new RuntimeException('mysqli error: ' . mysqli_error($mysqli));
}
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &mysqli.charset.note;
  <note>
   <para>
    &style.oop; uniquement : si la connexion a échoué, un objet est quand même retourné.
    Pour vérifier si la connexion a échoué, utilisez soit la fonction 
    <function>mysqli_connect_error</function> ou la propriété 
    <link linkend="mysqli.connect-error">mysqli-&gt;connect_error</link>
    comme dans l'exemple ci-dessus.
   </para>
  </note>
  <note>
   <para>
    S'il est nécessaire de configurer des options, telles que le délai
    de connexion, <function>mysqli_real_connect</function> doit être utilisé.
   </para>
  </note>
  <note>
   <para>
    Appeler le constructeur sans paramètre a le même effet qu'appeler
    <function>mysqli_init</function>.
   </para>
  </note>
  <note>
   <para>
    L'erreur <literal>"Can't create TCP/IP socket (10106)"</literal> signifie à
    généralement que la directive de configuration 
    <link linkend="ini.variables-order">variables_order</link> ne contient pas le
    caractère <literal>E</literal>. Sous Windows, si l'environnement n'est pas copié,
    la variable d'environnement <literal>SYSTEMROOT</literal> ne sera pas disponible
    et PHP aura des soucis pour charger Winsock.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_connect</function></member>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_connect_errno</function></member>
    <member><function>mysqli_connect_error</function></member>
    <member><function>mysqli_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
