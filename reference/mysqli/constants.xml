<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d73dfcdcebcffe220074597f82c2478ed5dea572 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<appendix xml:id="mysqli.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.mysqli-read-default-group">
   <term>
    <constant>MYSQLI_READ_DEFAULT_GROUP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Lit les options dans le groupe <filename>my.cnf</filename>
     ou dans le fichier spécifié par <constant>MYSQLI_READ_DEFAULT_FILE</constant>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-read-default-file">
   <term>
    <constant>MYSQLI_READ_DEFAULT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Lit les options dans le fichier spécifié, plutôt que dans <filename>my.cnf</filename>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-opt-can-handle_expired_passwords">
    <term>
     <constant>MYSQLI_OPT_CAN_HANDLE_EXPIRED_PASSWORDS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Indique au serveur que le client peut gérer le mode sandbox
      pour les mots de passe expirés.
      Peut être utilisé avec <function>mysqli_options</function>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-load-data_local_dir">
    <term>
     <constant>MYSQLI_OPT_LOAD_DATA_LOCAL_DIR</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Si activée, cette option spécifie le répertoire
      à partir duquel le chargement de données <literal>LOCAL</literal> côté client est autorisé
      dans les instructions <literal>LOAD DATA LOCAL</literal>.
     </simpara>
    </listitem>
   </varlistentry>
  <varlistentry xml:id="constant.mysqli-opt-connect-timeout">
   <term>
    <constant>MYSQLI_OPT_CONNECT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Durée d'expiration de la connexion, en secondes
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-read-timeout">
    <term>
     <constant>MYSQLI_OPT_READ_TIMEOUT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Résultat d'exécution durée d'expiration d'une commande en secondes.
      Disponible à partir de PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
  <varlistentry xml:id="constant.mysqli-opt-local-infile">
   <term>
    <constant>MYSQLI_OPT_LOCAL_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active la commande <literal>LOAD LOCAL INFILE</literal>
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-int-and-float-native">
    <term>
     <constant>MYSQLI_OPT_INT_AND_FLOAT_NATIVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Convertie les colonnes de type entier et nombre à virgule flottante en
      nombres PHP. Seulement valide pour mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-net-cmd-buffer-size">
    <term>
     <constant>MYSQLI_OPT_NET_CMD_BUFFER_SIZE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      La taille du buffer interne command/network. Seulement valide pour mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-net-read-buffer-size">
    <term>
     <constant>MYSQLI_OPT_NET_READ_BUFFER_SIZE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Taille en octets de la portion maximale à lire, lors de la lecture
      du corps d'un packet de commande MySQL. Seulement valide pour mysqlnd.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-opt-ssl-verify-server-cert">
    <term>
     <constant>MYSQLI_OPT_SSL_VERIFY_SERVER_CERT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Requiert MySQL 5.1.10 ou ultérieur.
     </para>
    </listitem>
   </varlistentry>
  <varlistentry xml:id="constant.mysqli-init-command">
   <term>
    <constant>MYSQLI_INIT_COMMAND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Commande à exécuter lors de la connexion au serveur MySQL.
     Cette commande sera exécutée automatiquement lors de la reconnexion
     au serveur.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-can-handle_expired_passwords">
    <term>
     <constant>MYSQLI_CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Indique au serveur que le client peut gérer le mode sandbox
      pour les mots de passe expirés.
      Peut être utilisé avec <function>mysqli_real_connect</function>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-found-rows">
    <term>
     <constant>MYSQLI_CLIENT_FOUND_ROWS</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Retourne le nombre de lignes correspondantes, pas le nombre de lignes affectées.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ssl-verify_server_cert">
    <term>
     <constant>MYSQLI_CLIENT_SSL_VERIFY_SERVER_CERT</constant>
    (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Vérifie le certificat du serveur.
     </simpara>
    </listitem>
   </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-ssl">
   <term>
    <constant>MYSQLI_CLIENT_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Utilise le protocole SSL (chiffrement). Cette option ne doit pas
     être activée par un programme : elle doit être activée en interne,
     par la bibliothèque MySQL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-compress">
   <term>
    <constant>MYSQLI_CLIENT_COMPRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Utilise le protocole compressé
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-interactive">
   <term>
    <constant>MYSQLI_CLIENT_INTERACTIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permet <literal>interactive_timeout</literal> secondes (au lieu de
     <literal>wait_timeout</literal> secondes) d'inactivité avant de
     fermer la connexion. La valeur de la variable
     <literal>wait_timeout</literal> du client prendra la valeur de
     <literal>interactive_timeout</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-ignore-space">
   <term>
    <constant>MYSQLI_CLIENT_IGNORE_SPACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permet les espaces après un nom de fonction. Cela fait de tous les noms
     de fonctions, des mots réservés.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-no-schema">
   <term>
    <constant>MYSQLI_CLIENT_NO_SCHEMA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Interdit la syntaxe <literal>db_name.tbl_name.col_name</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-client-multi-queries">
   <term><constant>MYSQLI_CLIENT_MULTI_QUERIES</constant></term>
   <listitem>
    <para>
     Permet plusieurs requêtes séparées par un point-virgule
     dans un seul appel à la fonction <function>mysqli_query</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-store-result">
   <term>
    <constant>MYSQLI_STORE_RESULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pour les résultats mis en tampon. Elle a une valeur de <literal>0</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-store-result-copy_data">
    <term>
     <constant>MYSQLI_STORE_RESULT_COPY_DATA</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Depuis PHP 8.1, cette constante n'a plus aucun effet.
      Avant PHP 8.1, cette constante était utilisée pour copier les résultats
      du tampon interne <literal>mysqlnd</literal>
      dans les variables PHP récupérées.
      Par défaut, <literal>mysqlnd</literal> utilisera une logique de référence
      pour éviter de copier et dupliquer les résultats tenus en mémoire.
      Pour certains ensembles de résultats, par exemple, des ensembles de résultats avec de nombreuses petites lignes,
      l'approche de copie peut réduire l'utilisation globale de la mémoire
      car les variables PHP contenant les résultats peuvent être libérées plus tôt.
      Disponible uniquement avec <literal>mysqlnd</literal>.
     </simpara>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-use-result">
   <term>
    <constant>MYSQLI_USE_RESULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pour les résultats non-mis en tampon. Elle a une valeur de <literal>1</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-assoc">
   <term>
    <constant>MYSQLI_ASSOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les colonnes sont retournées dans le tableau, avec leurs
     noms comme index.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-num">
   <term>
    <constant>MYSQLI_NUM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les colonnes sont retournées dans le tableau, avec leurs
     numéros comme index.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-both">
   <term>
    <constant>MYSQLI_BOTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les colonnes sont retournées dans le tableau, avec leurs
     noms et leurs numéros comme index.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-not-null-flag">
   <term>
    <constant>MYSQLI_NOT_NULL_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Indique qu'un champ est défini comme <literal>NOT NULL</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-pri-key-flag">
   <term>
    <constant>MYSQLI_PRI_KEY_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est une clé primaire
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-unique-key-flag">
   <term>
    <constant>MYSQLI_UNIQUE_KEY_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est un index unique
    </para>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.mysqli-multiple-key-flag">
   <term>
    <constant>MYSQLI_MULTIPLE_KEY_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ fait partie d'un index
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-blob-flag">
   <term>
    <constant>MYSQLI_BLOB_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>BLOB</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-unsigned-flag">
   <term>
    <constant>MYSQLI_UNSIGNED_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>UNSIGNED</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-zerofill-flag">
   <term>
    <constant>MYSQLI_ZEROFILL_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>ZEROFILL</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-auto-increment-flag">
   <term>
    <constant>MYSQLI_AUTO_INCREMENT_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>AUTO_INCREMENT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-timestamp-flag">
   <term>
    <constant>MYSQLI_TIMESTAMP_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TIMESTAMP</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-set-flag">
   <term>
    <constant>MYSQLI_SET_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>SET</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-num-flag">
   <term>
    <constant>MYSQLI_NUM_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>NUMERIC</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-part-key-flag">
   <term>
    <constant>MYSQLI_PART_KEY_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ fait partie d'un index multiple
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-group-flag">
   <term>
    <constant>MYSQLI_GROUP_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ fait partie de la clause <literal>GROUP BY</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-no-default-value_flag">
    <term>
     <constant>MYSQLI_NO_DEFAULT_VALUE_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Une colonne n'a pas de clause <literal>DEFAULT</literal> dans sa définition.
      Cela ne s'applique pas aux colonnes <literal>NULL</literal>
      ou <literal>AUTO_INCREMENT</literal>
      car ces colonnes ont respectivement une valeur par défaut de <literal>NULL</literal>
      et une valeur par défaut implicite.
     </simpara>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-decimal">
   <term>
    <constant>MYSQLI_TYPE_DECIMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DECIMAL</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-newdecimal">
   <term>
    <constant>MYSQLI_TYPE_NEWDECIMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DECIMAL</literal> ou
     <literal>NUMERIC</literal> (MySQL 5.0.3 et supérieur)
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-bit">
   <term>
    <constant>MYSQLI_TYPE_BIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>BIT</literal> (MySQL 5.0.3 et supérieur)
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-tiny">
   <term>
    <constant>MYSQLI_TYPE_TINY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TINYINT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-short">
   <term>
    <constant>MYSQLI_TYPE_SHORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>SMALLINT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-long">
   <term>
    <constant>MYSQLI_TYPE_LONG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>INT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-float">
   <term>
    <constant>MYSQLI_TYPE_FLOAT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>FLOAT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-double">
   <term>
    <constant>MYSQLI_TYPE_DOUBLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DOUBLE</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-null">
   <term>
    <constant>MYSQLI_TYPE_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DEFAULT NULL</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-timestamp">
   <term>
    <constant>MYSQLI_TYPE_TIMESTAMP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TIMESTAMP</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-longlong">
   <term>
    <constant>MYSQLI_TYPE_LONGLONG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>BIGINT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-int24">
   <term>
    <constant>MYSQLI_TYPE_INT24</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>MEDIUMINT</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-date">
   <term>
    <constant>MYSQLI_TYPE_DATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DATE</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-time">
   <term>
    <constant>MYSQLI_TYPE_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TIME</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-datetime">
   <term>
    <constant>MYSQLI_TYPE_DATETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DATETIME</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-year">
   <term>
    <constant>MYSQLI_TYPE_YEAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>YEAR</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-newdate">
   <term>
    <constant>MYSQLI_TYPE_NEWDATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>DATE</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-interval">
   <term>
    <constant>MYSQLI_TYPE_INTERVAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>INTERVAL</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-enum">
   <term>
    <constant>MYSQLI_TYPE_ENUM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>ENUM</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-set">
   <term>
    <constant>MYSQLI_TYPE_SET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>SET</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-tiny-blob">
   <term>
    <constant>MYSQLI_TYPE_TINY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TINYBLOB</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-medium-blob">
   <term>
    <constant>MYSQLI_TYPE_MEDIUM_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>MEDIUMBLOB</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-long-blob">
   <term>
    <constant>MYSQLI_TYPE_LONG_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>LONGBLOB</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-blob">
   <term>
    <constant>MYSQLI_TYPE_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>BLOB</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-var-string">
   <term>
    <constant>MYSQLI_TYPE_VAR_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>VARCHAR</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-string">
   <term>
    <constant>MYSQLI_TYPE_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>STRING</literal> ou <literal>BINARY</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-char">
   <term>
    <constant>MYSQLI_TYPE_CHAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>TINYINT</literal>.
     Pour <literal>CHAR</literal>, voir <literal>MYSQLI_TYPE_STRING</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-geometry">
   <term>
    <constant>MYSQLI_TYPE_GEOMETRY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>GEOMETRY</literal>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-type-json">
   <term>
    <constant>MYSQLI_TYPE_JSON</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est de type <literal>JSON</literal>.
     Uniquement valide pour mysqlnd et MySQL 5.7.8 et ultérieur.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-need-data">
   <term><constant>MYSQLI_NEED_DATA</constant></term>
   <listitem>
    <para>
     Il reste des variables à relier
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-enum-flag">
   <term>
    <constant>MYSQLI_ENUM_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est défini comme <literal>ENUM</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-binary-flag">
   <term>
    <constant>MYSQLI_BINARY_FLAG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le champ est défini comme <literal>BINARY</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-cursor-type-for-update">
   <term>
    <constant>MYSQLI_CURSOR_TYPE_FOR_UPDATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-cursor-type-no-cursor">
   <term>
    <constant>MYSQLI_CURSOR_TYPE_NO_CURSOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-cursor-type-read-only">
   <term>
    <constant>MYSQLI_CURSOR_TYPE_READ_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-cursor-type-scrollable">
   <term>
    <constant>MYSQLI_CURSOR_TYPE_SCROLLABLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-stmt-attr-cursor-type">
   <term>
    <constant>MYSQLI_STMT_ATTR_CURSOR_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-stmt-attr-prefetch-rows">
   <term>
    <constant>MYSQLI_STMT_ATTR_PREFETCH_ROWS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-stmt-attr-update-max-length">
   <term>
    <constant>MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-set-charset-name">
   <term>
    <constant>MYSQLI_SET_CHARSET_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-report-index">
   <term>
    <constant>MYSQLI_REPORT_INDEX</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Rapporte si un mauvais index ou aucun index n'est utilisé
     dans une requête.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-report-error">
   <term>
    <constant>MYSQLI_REPORT_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Rapporte les erreurs depuis des appels aux fonctions mysqli.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-report-strict">
   <term>
    <constant>MYSQLI_REPORT_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Lance une exception <literal>mysqli_sql_exception</literal>
     pour les erreurs au lieu d'alertes.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-report-all">
   <term>
    <constant>MYSQLI_REPORT_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active toutes les options.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-report-off">
   <term>
    <constant>MYSQLI_REPORT_OFF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Désactive toutes les options.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-debug-trace-enabled">
   <term>
    <constant>MYSQLI_DEBUG_TRACE_ENABLED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit à 1 si la fonctionnalité <function>mysqli_debug</function>
     est désactivée.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="constant.mysqli-server-public-key">
    <term>
     <constant>MYSQLI_SERVER_PUBLIC_KEY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-grant">
   <term>
    <constant>MYSQLI_REFRESH_GRANT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Rafraîchie les tables GRANT.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-log">
   <term>
    <constant>MYSQLI_REFRESH_LOG</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vide les logs, identique à exécuter la requête
     <acronym>SQL</acronym> <literal>FLUSH LOGS</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-tables">
   <term>
    <constant>MYSQLI_REFRESH_TABLES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vide le cache des tables, identique à exécuter la requête
     <acronym>SQL</acronym> <literal>FLUSH TABLES</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-hosts">
   <term>
    <constant>MYSQLI_REFRESH_HOSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vide le cache des hôtes, identique à exécuter la
     requête <acronym>SQL</acronym> <literal>FLUSH HOSTS</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-replica">
   <term>
    <constant>MYSQLI_REFRESH_REPLICA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Alias de la constante <constant>MYSQLI_REFRESH_SLAVE</constant>.
     Disponible à partir de PHP 8.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-status">
   <term>
    <constant>MYSQLI_REFRESH_STATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Réinitialise le statut des variables, identique
     à exécuter la requête <acronym>SQL</acronym> <literal>FLUSH STATUS</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-threads">
   <term>
    <constant>MYSQLI_REFRESH_THREADS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vide le cache des threads.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-slave">
   <term>
    <constant>MYSQLI_REFRESH_SLAVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sur un serveur esclave de réplication : réinitialise les informations
     du serveur maître, et redémarre l'esclave. Identique à exécuter
     la requête <acronym>SQL</acronym> <literal>RESET SLAVE</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-master">
   <term>
    <constant>MYSQLI_REFRESH_MASTER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sur un serveur maître de réplication : supprime les fichiers binaires
     de logs listés dans l'index binaire des logs, et tronque le fichier
     index. Identique à exécuter la requête <acronym>SQL</acronym>
     <literal>RESET MASTER</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mysqli-refresh-backup-log">
    <term>
     <constant>MYSQLI_REFRESH_BACKUP_LOG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Ferme et rouvre les fichiers de journal de sauvegarde.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-and-chain">
    <term>
     <constant>MYSQLI_TRANS_COR_AND_CHAIN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Ajout de "AND CHAIN" à <function>mysqli_commit</function> ou
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-and-no-chain">
    <term>
     <constant>MYSQLI_TRANS_COR_AND_NO_CHAIN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Ajout de "AND NO CHAIN" à <function>mysqli_commit</function> ou
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-release">
    <term>
     <constant>MYSQLI_TRANS_COR_RELEASE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Ajout de "RELEASE" à <function>mysqli_commit</function> ou
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-cor-no-release">
    <term>
     <constant>MYSQLI_TRANS_COR_NO_RELEASE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Ajout de "NO RELEASE" à <function>mysqli_commit</function> ou
      <function>mysqli_rollback</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-read-only">
    <term>
     <constant>MYSQLI_TRANS_START_READ_ONLY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Débute la transaction en tant que "START TRANSACTION READ ONLY".
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-read-write">
    <term>
     <constant>MYSQLI_TRANS_START_READ_WRITE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Débute la transaction en tant que "START TRANSACTION READ WRITE" avec
      <function>mysqli_begin_transaction</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-trans-start-consistent-snapshot">
    <term><constant>MYSQLI_TRANS_START_CONSISTENT_SNAPSHOT</constant></term>
    <listitem>
     <para>
      Débute la transaction en tant que "START TRANSACTION WITH CONSISTENT SNAPSHOT" 
      avec <function>mysqli_begin_transaction</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-client-ssl-dont-verify-server-cert">
    <term>
     <constant>MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Requiert MySQL 5.6.5 ou ultérieur.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-is-mariadb">
    <term>
     <constant>MYSQLI_IS_MARIADB</constant>
     (<type>bool</type>)
    </term>
    <listitem>
     <para>
      Si l'extension mysqli a été construite contre une bibliothèque client MariaDB.
      Disponible à partir de PHP 8.1.2.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-async">
    <term>
     <constant>MYSQLI_ASYNC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      La requête est exécutée de manière asynchrone et aucun ensemble de résultats n'est immédiatement retourné.
      Disponible uniquement avec <literal>mysqlnd</literal>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqli-on-update-now_flag">
    <term>
     <constant>MYSQLI_ON_UPDATE_NOW_FLAG</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Si un champ est mis à jour, il recevra la valeur temporelle actuelle.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
