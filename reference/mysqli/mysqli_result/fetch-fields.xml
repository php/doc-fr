<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 52779f983f5fc2130c741fde46d84db77d6bbf5b Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-result.fetch-fields" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_fields</refname>
  <refname>mysqli_fetch_fields</refname>
  <refpurpose>Retourne un tableau d'objets représentant les champs dans le résultat</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>array</type><methodname>mysqli_result::fetch_fields</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type>array</type><methodname>mysqli_fetch_fields</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
  </methodsynopsis>

  <para>
   Cette fonction fonctionne comme <function>mysqli_fetch_field</function>
   à la différence que, au lieu de retourner un objet à la fois
   pour chaque champ, les colonnes sont retournées en tant
   que tableau d'objets.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie un tableau d'objets contenant des informations sur la définition des champs.
  </para>
  <para>
   <table xml:id="mysqli-result.fetch-fields.returnvalues">
   <title>Propriétés de l'objet</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Propriété</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>name</entry>
      <entry>Le nom de la colonne</entry>
     </row>
     <row>
      <entry>orgname</entry>
      <entry>Le nom original de la colonne si un alias a été spécifié</entry>
     </row>
     <row>
      <entry>table</entry>
      <entry>Le nom de la table à laquelle ce champ appartient (s'il n'a pas été calculé)</entry>
     </row>
     <row>
      <entry>orgtable</entry>
      <entry>Le nom original de la table si un alias a été spécifié</entry>
     </row>
     <row>
      <entry>max_length</entry>
      <entry>La longueur maximale du champ pour le jeu de résultats</entry>
     </row>
     <row>
      <entry>length</entry>
      <entry>
       La largeur du champ, en octets, telle que spécifiée dans la définition de la table.
       Notez que ce nombre (octets) peut différer de la valeur de votre définition de
       table (caractères), en fonction du jeu de caractères que vous utilisez.  
       Par exemple, le jeu de caractères utf8 contient 3 octets par caractère, donc
       varchar(10) renverra une longueur de 30 pour utf8 (10*3), mais 10 pour latin1 (10*1).
      </entry>
     </row>
     <row>
      <entry>charsetnr</entry>
      <entry>Le numéro (id) du jeu de caractères pour ce champs</entry>
     </row>
     <row>
      <entry>flags</entry>
      <entry>Un entier représentant le bit-flags pour ce champs</entry>
     </row>
     <row>
      <entry>type</entry>
      <entry>Le type de données utilisées pour ce champs</entry>
     </row>
     <row>
      <entry>decimals</entry>
      <entry>Le nombre de décimales utilisées (pour les champs de type entier)</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("127.0.0.1", "root", "foofoo", "sakila");

/* vérification de la connexion */
if ($mysqli->connect_errno) {
    printf("Échec de la connexion : %s\n", $mysqli->connect_error);
    exit();
}

foreach (array('latin1', 'utf8') as $charset) {

    // Définir le jeu de caractère, pour montrer son impact sur certaines valeurs (par exemple, longueurs en octets)
    $mysqli->set_charset($charset);

    $query = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "============================\n";
    echo "Jeu de caractères : $charset\n";
    echo "============================\n";
    
    if ($result = $mysqli->query($query)) {

        /* Récupère les informations des champs pour toutes les colonnes */
        $finfo = $result->fetch_fields();

        foreach ($finfo as $val) {
            printf("Name:      %s\n",   $val->name);
            printf("Table:     %s\n",   $val->table);
            printf("Max. Len:  %d\n",   $val->max_length);
            printf("Length:    %d\n",   $val->length);
            printf("charsetnr: %d\n",   $val->charsetnr);
            printf("Flags:     %d\n",   $val->flags);
            printf("Type:      %d\n\n", $val->type);
        }
        $result->free();
    }
}
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("127.0.0.1", "my_user", "my_password", "sakila");

/* vérification de la connexion */
if (mysqli_connect_errno()) {
    printf("Échec de la connexion : %s\n", mysqli_connect_error());
    exit();
}

foreach (array('latin1', 'utf8') as $charset) {

    // Définir le jeu de caractère, pour montrer son impact sur certaines valeurs (par exemple, longueurs en octets)
    mysqli_set_charset($link, $charset);

    $query = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "============================\n";
    echo "Jeu de caractères : $charset\n";
    echo "============================\n";

    if ($result = mysqli_query($link, $query)) {

        /* Récupère les informations des champs pour toutes les colonnes */
        $finfo = mysqli_fetch_fields($result);

        foreach ($finfo as $val) {
            printf("Name:      %s\n",   $val->name);
            printf("Table:     %s\n",   $val->table);
            printf("Max. Len:  %d\n",   $val->max_length);
            printf("Length:    %d\n",   $val->length);
            printf("charsetnr: %d\n",   $val->charsetnr);
            printf("Flags:     %d\n",   $val->flags);
            printf("Type:      %d\n\n", $val->type);
        }
        mysqli_free_result($result);
    }
}

mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
============================
Jeu de caractères : latin1
============================
Name:      actor_id
Table:     actor
Max. Len:  3
Length:    5
charsetnr: 63
Flags:     49699
Type:      2

Name:      last_name
Table:     actor
Max. Len:  12
Length:    45
charsetnr: 8
Flags:     20489
Type:      253

============================
Jeu de caractères : utf8
============================
Name:      actor_id
Table:     actor
Max. Len:  3
Length:    5
charsetnr: 63
Flags:     49699
Type:      2

Name:      last_name
Table:     actor
Max. Len:  12
Length:    135
charsetnr: 33
Flags:     20489
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_num_fields</function></member>
    <member><function>mysqli_fetch_field_direct</function></member>
    <member><function>mysqli_fetch_field</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
