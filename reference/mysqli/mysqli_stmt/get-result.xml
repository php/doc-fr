<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cbf72e31455a596699accc04a38c8129687979ee Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-stmt.get-result" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_stmt::get_result</refname>
  <refname>mysqli_stmt_get_result</refname>
  <refpurpose>Récupère un jeu de résultats depuis une requête préparée en tant qu'objet <classname>mysqli_result</classname></refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_stmt::get_result</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_stmt_get_result</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>
  <para>
   Récupère un jeu de résultats d'une déclaration préparée sous la forme
   d'un objet <classname>mysqli_result</classname>.
   Les données seront récupérées depuis le serveur MySQL vers PHP.
   Cette méthode ne doit être appelée que pour les requêtes qui produisent un ensemble de résultats.
  </para>
  <note>
   <para>
    &mysqli.available.mysqlnd;
   </para>
  </note>
  <note>
   <para>
    Cette fonction ne peut pas être utilisée conjointement avec
    la <function>mysqli_stmt_store_result</function>.
    Ces deux fonctions récupèrent le jeu de résultats complet du serveur MySQL.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un jeu de résultats pour les requêtes SELECT réussies, ou &false; pour
   d'autres requêtes DML ou en cas d'échec. La fonction <function>mysqli_errno</function>
   peut être utilisé pour distinguer entre ces deux types d'erreurs.
   Retourne &false; en cas d'échec. Pour des requêtes réussites qui produisent
   un jeu de résultat tel que <literal>SELECT, SHOW, DESCRIBE</literal> ou
   <literal>EXPLAIN</literal>, <function>mysqli_stmt_get_result</function>
   retournera un objet <classname>mysqli_result</classname>. Pour les autres types de
   requêtes ayant réussi, <function>mysqli_stmt_get_result</function> retournera &false;.
   La fonction <function>mysqli_stmt_errno</function> peut être utilisé pour
   distinguer entre les deux raisons pour &false; ; à cause d'un bogue,
   antérieur à PHP 7.4.13, <function>mysqli_errno</function> devait être
   utilisé pour déterminer ceci.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, Population, Continent FROM Country WHERE Continent=? ORDER BY Name LIMIT 1";

$stmt = $mysqli->prepare($query);
$stmt->bind_param("s", $continent);

$continentList = array('Europe', 'Africa', 'Asia', 'North America');

foreach ($continentList as $continent) {
    $stmt->execute();
    $result = $stmt->get_result();
    while ($row = $result->fetch_array(MYSQLI_NUM)) {
        foreach ($row as $r) {
            print "$r ";
        }
        print "\n";
    }
}
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php 

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, Population, Continent FROM Country WHERE Continent=? ORDER BY Name LIMIT 1";

$stmt = mysqli_prepare($link, $query);
mysqli_stmt_bind_param($stmt, "s", $continent);

$continentList= array('Europe', 'Africa', 'Asia', 'North America');

foreach ($continentList as $continent) {
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    while ($row = mysqli_fetch_array($result, MYSQLI_NUM)) {
        foreach ($row as $r) {
            print "$r ";
        }
        print "\n";
    }
}
?>
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Albania 3401200 Europe 
Algeria 31471000 Africa 
Afghanistan 22720000 Asia 
Anguilla 8000 North America 
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_result_metadata</function></member>
    <member><function>mysqli_stmt_fetch</function></member>
    <member><function>mysqli_fetch_array</function></member>
    <member><function>mysqli_stmt_store_result</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
