<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e64ea89bbe0bd2cc28d48adfb3723f9ed5720fd1 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: yannick -->
<refentry xml:id="soapclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::__construct</refname>
  <refpurpose>Constructeur SoapClient</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SoapClient">
   <modifier>public</modifier> <methodname>SoapClient::__construct</methodname>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Crée un objet <classname>SoapClient</classname> pour se connecter à un service SOAP.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       URI du fichier <literal>WSDL</literal> ou &null; s'il travaille en mode
       <literal>non-WSDL</literal>.
      </para>
      <note>
       <para>
        Par défaut, le fichier WSDL sera mis en cache pour des raisons de performance. Pour désactiver
        ou configurer cette mise en cache, consultez la section
        <link linkend="soap.configuration.list">SOAP &ConfigureOptions;</link>
        et l'option <link linkend="soapclient.construct.options.cache-wsdl">
        <literal>cache_wsdl</literal></link>
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Un tableau associatif spécifiant des options supplémentaires pour le client SOAP.
       Si le paramètre <parameter>wsdl</parameter> est fourni, ceci est facultatif; sinon,
       au moins les paramètres <literal>location</literal> et <literal>url</literal> doivent être
       fournis.
       <variablelist>
        <varlistentry xml:id="soapclient.construct.options.location">
         <term>
          <parameter>location</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           L'URL du serveur SOAP auquel envoyer la requête.
          </para>
          <para>
           Requis si le paramètre <parameter>wsdl</parameter> n'est pas fourni.
           Si à la fois un paramètre <parameter>wsdl</parameter> et
           l'option <literal>location</literal> sont fournis, l'option
           <literal>location</literal> remplacera toute location spécifiée dans le fichier WSDL.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.uri">
         <term>
          <parameter>uri</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           L'espace de noms cible du service SOAP.
          </para>
          <para>
           Requis si le paramètre <parameter>wsdl</parameter> n'est pas fourni;
           sinon ignoré.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.style">
         <term>
          <parameter>style</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Spécifie le style de liaison à utiliser pour ce client, en utilisant les constantes
           <constant>SOAP_RPC</constant> et <constant>SOAP_DOCUMENT</constant>.
           <constant>SOAP_RPC</constant> indique une liaison de style RPC, où le
           corps de la requête SOAP contient un encodage standard d'un appel de fonction.
           <constant>SOAP_DOCUMENT</constant> indique une liaison de style document,
           où le corps de la requête SOAP contient un document XML avec
           une signification définie par le service.
          </para>
          <para>
           Si le paramètre <parameter>wsdl</parameter> est fourni, cette
           option est ignorée et le style est lu à partir du fichier WSDL.
          </para>
          <para>
           Si ni cette option ni le paramètre <parameter>wsdl</parameter>
           ne sont fournis, le style RPC est utilisé.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.use">
         <term>
          <parameter>use</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Spécifie le style d'encodage à utiliser pour ce client, en utilisant les
           constantes <constant>SOAP_ENCODED</constant> ou <constant>SOAP_LITERAL</constant>.
           <constant>SOAP_ENCODED</constant> indique un encodage utilisant les types
           définis dans la spécification SOAP.
           <constant>SOAP_LITERAL</constant> indique un encodage utilisant un schéma
           défini.
          </para>
          <para>
           Si le paramètre <parameter>wsdl</parameter> est fourni, cette
           option est ignorée et l'encodage est lu à partir du fichier WSDL.
          </para>
          <para>
           Si cette option et le paramètre <parameter>wsdl</parameter> ne sont pas fournis,
           le style "encoded" est utilisé.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.soap-version">
         <term>
          <parameter>soap_version</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Spécifie la version du protocole SOAP à utiliser :
           <constant>SOAP_1_1</constant> pour SOAP 1.1,
           ou <constant>SOAP_1_2</constant> pour SOAP 1.2.
          </para>
          <para>
           Si omis, SOAP 1.1 est utilisé.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.authentication">
         <term>
          <parameter>authentication</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Spécifie la méthode d'authentification lors de l'utilisation de l'authentification
           HTTP dans les requêtes. La valeur peut être soit
           <constant>SOAP_AUTHENTICATION_BASIC</constant>
           ou <constant>SOAP_AUTHENTICATION_DIGEST</constant>.
          </para>
          <para>
           Si omis et que l'option <literal>login</literal> est fournie,
           l'authentification de base est utilisée.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.login">
         <term>
          <parameter>login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nom d'utilisateur à utiliser avec l'authentification de base ou l'authentification par hachage.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.password">
         <term>
          <parameter>password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Mot de passe à utiliser avec l'authentification de base ou l'authentification par hachage.
          </para>
          <para>
           À ne pas confondre avec <literal>passphrase</literal>,
           qui est utilisé avec l'authentification par certificat client HTTPS.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.local-cert">
         <term>
          <parameter>local_cert</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Chemin vers un certificat client à utiliser avec l'authentification HTTPS.
           Il doit s'agir d'un fichier encodé en PEM contenant votre certificat
           et votre clé privée.
          </para>
          <para>
           Le fichier peut également inclure une chaîne d'émetteurs, qui doit venir
           après le certificat client.
          </para>
          <para>
           Peut également être défini via
           <link linkend="soapclient.construct.options.stream-context">
           <parameter>stream_context</parameter></link>,
           qui permet également de spécifier un fichier de clé privée distinct.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.passphrase">
         <term>
          <parameter>passphrase</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Passphrase pour le certificat client spécifié dans l'option
           <literal>local_cert</literal>.
          </para>
          <para>
           À ne pas confondre avec <literal>password</literal>,
           qui est utilisé pour l'authentification de base ou l'authentification digest.
          </para>
          <para>
           Peut également être défini via
           <link linkend="soapclient.construct.options.stream-context">
           <parameter>stream_context</parameter></link>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-host">
         <term>
          <parameter>proxy_host</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nom d'hôte à utiliser comme serveur mandataire pour les requêtes HTTP.
          </para>
          <para>
           L'option <literal>proxy_port</literal> doit également être spécifiée.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-port">
         <term>
          <parameter>proxy_port</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Port TCP à utiliser lors de la connexion au serveur mandataire
           spécifié dans <literal>proxy_host</literal>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-login">
         <term>
          <parameter>proxy_login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nom d'utilisateur facultatif pour s'authentifier auprès du serveur mandataire
           spécifié dans <literal>proxy_host</literal>, en utilisant l'authentification
           de base HTTP.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-password">
         <term>
          <parameter>proxy_password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Mot de passe facultatif pour s'authentifier auprès du serveur mandataire
           spécifié dans <literal>proxy_host</literal>, en utilisant l'authentification
           de base HTTP.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.compression">
         <term>
          <parameter>compression</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Active la compression des requêtes et des réponses SOAP HTTP.
          </para>
          <para>
           La valeur doit être le résultat de l'opération OR binaire de trois parties :
           un <constant>SOAP_COMPRESSION_ACCEPT</constant> optionnel,
           pour envoyer l'en-tête "Accept-Encoding" ; soit
           <constant>SOAP_COMPRESSION_GZIP</constant>
           ou <constant>SOAP_COMPRESSION_DEFLATE</constant> pour indiquer
           l'algorithme de compression à utiliser ; et un nombre entre 1 et 9
           pour indiquer le niveau de compression à utiliser dans la requête.
           Par exemple, pour activer la compression gzip bidirectionnelle avec le niveau
           de compression maximal, utilisez
           <literal>SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | 9</literal>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.encoding">
         <term>
          <parameter>encoding</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Définit l'encodage de caractères interne. Les requêtes sont toujours envoyées
           en UTF-8 et converties depuis et vers cet encodage.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.trace">
         <term>
          <parameter>trace</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Capture les informations de requête et de réponse, qui peuvent ensuite être
           consultées à l'aide des méthodes
           <methodname>SoapClient::__getLastRequest</methodname>,
           <methodname>SoapClient::__getLastRequestHeaders</methodname>,
           <methodname>SoapClient::__getLastResponse</methodname>,
           et <methodname>SoapClient::__getLastResponseHeaders</methodname>.
          </para>
          <para>
           Si omis, la valeur par défaut est &false;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.classmap">
         <term>
          <parameter>classmap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Utilisé pour associer les types définis dans le WSDL aux classes PHP.
           Il doit être spécifié sous la forme d'un tableau associatif avec
           les noms de types du WSDL en tant que clés et les noms de classes PHP en tant que valeurs.
           Notez que les noms de types d'un élément ne correspondent pas nécessairement au nom
           de l'élément (balise).
          </para>
          <para>
           Les noms de classe fournis doivent toujours être entièrement qualifiés avec
           tous les <link linkend="language.namespaces">espaces de noms</link>, et ne jamais
           commencer par un <literal>\</literal>. La forme correcte peut être
           générée en utilisant
           <link linkend="language.oop5.basic.class.class">::class</link>.
          </para>
          <para>
           Notez que lors de la création d'une classe, le constructeur ne sera pas appelé,
           mais les méthodes magiques <link linkend="object.set">__set()</link> et
           <link linkend="object.get">__get()</link> pour les propriétés individuelles le seront.
          </para>
         </listitem>
         </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.typemap">
         <term>
          <parameter>typemap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Utilisé pour définir des correspondances de types à l'aide de fonctions de rappel
           définies par l'utilisateur.
           Chaque correspondance de type doit être un tableau avec les clés
           <literal>type_name</literal> (une <type>chaîne de caractères</type> spécifiant le
           type d'élément XML),
           <literal>type_ns</literal> (une <type>chaîne de caractères</type> contenant
           l'URI de l'espace de noms),
           <literal>from_xml</literal> (un <type>appelable</type> acceptant un paramètre
           de type chaîne de caractères et renvoyant un objet) et
           <literal>to_xml</literal> (un <type>appelable</type> acceptant un paramètre
           de type objet et renvoyant une chaîne de caractères).
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.exceptions">
         <term>
          <parameter>exceptions</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Définit si les erreurs génèrent des exceptions de type
           <classname>SoapFault</classname>.
          </para>
          <para>
           Par défaut, c'est &true;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.connection-timeout">
         <term>
          <parameter>connection_timeout</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Définit un délai d'attente en secondes pour la connexion au service SOAP.
           Cette option ne définit pas un délai d'attente pour les services ayant une
           réponse lente.
           Pour limiter le temps d'attente des appels, l'option de configuration
           <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
           est disponible.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.cache-wsdl">
         <term>
          <parameter>cache_wsdl</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Si le paramètre <parameter>wsdl</parameter> est spécifié et que l'option de
           configuration
           <link linkend="ini.soap.wsdl-cache-enabled">soap.wsdl_cache_enabled</link>
           est activée, cette option détermine le type de mise en cache.
           L'une des constantes <constant>WSDL_CACHE_NONE</constant>,
           <constant>WSDL_CACHE_DISK</constant>,
           <constant>WSDL_CACHE_MEMORY</constant> ou
           <constant>WSDL_CACHE_BOTH</constant>.
          </para>
          <para>
           Deux types de cache sont disponibles : le cache en mémoire, qui met en cache le WSDL
           dans la mémoire du processus en cours, et le cache sur disque, qui met en cache le
           WSDL dans un fichier sur le disque partagé entre tous les processus.
           Le répertoire à utiliser pour le cache sur disque est déterminé par l'option de configuration
           <link linkend="ini.soap.wsdl-cache-dir">soap.wsdl_cache_dir</link>.
           Les deux caches ont la même durée de vie, déterminée par l'option de configuration
           <link linkend="ini.soap.wsdl-cache-ttl">soap.wsdl_cache_ttl</link>.
           Le cache en mémoire a également un nombre maximum d'entrées déterminé par l'option de configuration
           <link linkend="ini.soap.wsdl-cache-limit">soap.wsdl_cache_limit</link>.
          </para>
          <para>
           Si non spécifié, l'option de configuration <link linkend="ini.soap.wsdl-cache">
            soap.wsdl_cache</link> sera utilisée.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="soapclient.construct.options.user-agent">
          <term>
           <parameter>user_agent</parameter>
           <type>string</type>
          </term>
          <listitem>
           <para>
            La valeur à utiliser dans l'en-tête HTTP <literal>User-Agent</literal>
            lors des requêtes.
           </para>
           <para>
            Peut également être définie via <link linkend="soapclient.construct.options.stream-context">
             <parameter>stream_context</parameter></link>.
            </para>
            <para>
             Si non spécifié, l'agent utilisateur sera <literal>"PHP-SOAP/"</literal>
             suivi de la valeur de <constant>PHP_VERSION</constant>.
            </para>
           </listitem>
          </varlistentry>
          <varlistentry xml:id="soapclient.construct.options.stream-context">
           <term>
            <parameter>stream_context</parameter>
            <type>resource</type>
           </term>
           <listitem>
            <para>
             Un <link linkend="context">contexte de flux</link> créé par
             <function>stream_context_create</function>, qui permet de définir des options supplémentaires.
            </para>
            <para>
             Le contexte peut inclure des options de contexte <link linkend="context.socket">socket</link>,
             des options de contexte <link linkend="context.ssl">SSL</link>,
             ainsi que certaines options de contexte <link linkend="context.http">HTTP</link> sélectionnées :
             <literal>content_type</literal>, <literal>header</literal>,
             <literal>max_redirects</literal>, <literal>protocol_version</literal>,
             et <literal>user_agent</literal>.
            </para>
            <para>
             Notez que les en-têtes HTTP suivants sont générés automatiquement ou à partir d'autres
             options, et seront ignorés s'ils sont spécifiés dans l'option de contexte <literal>'header'</literal> :
             <literal>host</literal>, <literal>connection</literal>,
             <literal>user-agent</literal>, <literal>content-length</literal>,
             <literal>content-type</literal>, <literal>cookie</literal>,
             <literal>authorization</literal> et <literal>proxy-authorization</literal>.
            </para>
           </listitem>
          </varlistentry>
          <varlistentry xml:id="soapclient.construct.options.features">
           <term>
            <parameter>features</parameter>
            <type>int</type>
           </term>
           <listitem>
            <para>
             Un masque de bits pour activer une ou plusieurs des fonctionnalités suivantes :
             <variablelist>
              <varlistentry>
               <term>
                <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>
               </term>
               <listitem>
                <para>
                 Lors du décodage d'une réponse en tableau, le comportement par défaut consiste à détecter si
                 un nom d'élément apparaît une seule fois ou plusieurs fois dans un élément parent particulier.
                 Pour les éléments qui n'apparaissent qu'une fois, une propriété d'objet permet un accès direct au
                 contenu ; pour les éléments qui apparaissent plus d'une fois, la propriété contient un
                 tableau avec le contenu de chaque élément correspondant.
                </para>
                <para>
                 Si la fonctionnalité <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant> est activée,
                 les éléments qui n'apparaissent qu'une fois sont placés dans un tableau à un seul élément, de sorte que
                 l'accès soit cohérent pour tous les éléments. Cela n'a d'effet que lors de l'utilisation d'un WSDL
                 contenant un schéma pour la réponse. Consultez la section des examples pour une illustration.
                </para>
               </listitem>
              </varlistentry>
              <varlistentry>
               <term>
                <constant>SOAP_USE_XSI_ARRAY_TYPE</constant>
               </term>
               <listitem>
                <para>
                 Lorsque l'option <link linkend="soapclient.construct.options.use"><literal>use</literal>
                  option</link> ou la propriété WSDL est définie sur <literal>encoded</literal>,
                  force les tableaux à utiliser un type <literal>SOAP-ENC:Array</literal>, plutôt qu'un
                  type spécifique au schéma.
                 </para>
                </listitem>
               </varlistentry>
               <varlistentry>
                <term>
                 <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>
                </term>
                <listitem>
                 <para>
                  Attendre une réponse même si le WSDL indique une requête à sens unique.
                 </para>
                </listitem>
               </varlistentry>
              </variablelist>
             </para>
            </listitem>
           </varlistentry>
           <varlistentry xml:id="soapclient.construct.options.keep-alive">
            <term>
             <parameter>keep_alive</parameter>
             <type>bool</type>
            </term>
            <listitem>
             <para>
              une valeur booléenne définissant si
              envoyer l'en-tête <literal>Connection: Keep-Alive</literal> ou
              <literal>Connection: close</literal>.
             </para>
             <para>
              Par défaut, c'est &true;
             </para>
            </listitem>
           </varlistentry>
           <varlistentry xml:id="soapclient.construct.options.ssl-method">
            <term>
             <parameter>ssl_method</parameter>
             <type>string</type>
            </term>
            <listitem>
             <para>
              Spécifie la version du protocole SSL ou TLS à utiliser avec les connexions HTTP sécurisées, au lieu de la négociation par défaut.
              Spécifier <constant>SOAP_SSL_METHOD_SSLv2</constant> ou <constant>SOAP_SSL_METHOD_SSLv3</constant> forcera l'utilisation de SSL 2 ou SSL 3, respectivement.
              Spécifier <constant>SOAP_SSL_METHOD_SSLv23</constant> n'a aucun effet ; cette constante n'existe que pour des raisons de compatibilité ascendante.
              À partir de PHP 7.2, spécifier <constant>SOAP_SSL_METHOD_TLS</constant> n'a également aucun effet ; dans les versions antérieures, cela forçait l'utilisation de TLS 1.0.
             </para>
             <para>
              Il est à noter que les versions SSL 2 et 3 sont considérées comme non sécurisées et peuvent ne pas être prises en charge par la bibliothèque OpenSSL installée.
             </para>
             <para>
              Cette option est <emphasis>obsolète</emphasis> à partir de PHP 8.1.0.
              Une alternative plus flexible, qui permet de spécifier des versions individuelles de TLS, consiste à utiliser l'option <link linkend="soapclient.construct.options.stream-context"><parameter>contexte_de_flux</parameter></link> avec le paramètre de contexte 'crypto_method'.
              <example>
               <title>Spécifier l'utilisation de TLS 1.3 uniquement</title>
               <programlisting role="php">
<![CDATA[
<?php
$context = stream_context_create([
    'ssl' => [
    'crypto_method' => STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT
    ]
]);
$client = new SoapClient("some.wsdl", ['context' => $contexte]);
]]>
               </programlisting>
              </example>
             </para>
            </listitem>
           </varlistentry>
          </variablelist>
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </refsect1>

    <refsect1 role="errors">
     &reftitle.errors;
     <para>
      <methodname>SoapClient::__construct</methodname> génèrera une erreur de type
      <constant>E_ERROR</constant> si les options <literal>location</literal> et
      <literal>uri</literal> ne sont pas fournies en mode non-WSDL.
     </para>
     <para>
      Une exception de type <classname>SoapFault</classname> sera lancée si l'URI
      <parameter>wsdl</parameter> ne peut être chargée.
     </para>
    </refsect1>

    <refsect1 role="examples">
     &reftitle.examples;
     <para>
      <example>
       <title>
        Example <methodname>SoapClient::__construct</methodname>
       </title>
       <programlisting role="php">
        <![CDATA[
        <?php

        $client = new SoapClient("some.wsdl");

        $client = new SoapClient("some.wsdl", array('soap_version'   => SOAP_1_2));

        $client = new SoapClient("some.wsdl", array('login'          => "some_name",
        'password'       => "some_password"));

        $client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
        'proxy_port'     => 8080));

        $client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
        'proxy_port'     => 8080,
        'proxy_login'    => "some_name",
        'proxy_password' => "some_password"));

        $client = new SoapClient("some.wsdl", array('local_cert'     => "cert_key.pem"));

        $client = new SoapClient(null, array('location' => "http://localhost/soap.php",
        'uri'      => "http://test-uri/"));

        $client = new SoapClient(null, array('location' => "http://localhost/soap.php",
        'uri'      => "http://test-uri/",
        'style'    => SOAP_DOCUMENT,
        'use'      => SOAP_LITERAL));

$client = new SoapClient("some.wsdl",
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | 9));

$client = new SoapClient("some.wsdl", array('encoding'=>'ISO-8859-1'));

class MyBook {
    public $title;
    public $author;
}

$client = new SoapClient("books.wsdl", array('classmap' => array('book' => "MyBook")));

$typemap = array(
    array("type_ns"  => "http://schemas.example.com",
         "type_name" => "book",
         "from_xml"  => "unserialize_book",
         "to_xml"    => "serialize_book")
);
$client = new SoapClient("books.wsdl", array('typemap' => $typemap));

?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Utilisant la fonctionalité  <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant></title>
    <programlisting role="php">
<![CDATA[
/* Assuming a response like this, and an appropriate WSDL:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:example">
    <SOAP-ENV:Body>
        <response>
            <collection>
                <item>Single</item>
            </collection>
            <collection>
                <item>First</item>
                <item>Second</item>
            </collection>
        </response>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
*/

echo "Default:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl');
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );

echo "\nWith SOAP_SINGLE_ELEMENT_ARRAYS:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl', ['features' => SOAP_SINGLE_ELEMENT_ARRAYS]);
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );
]]>
    </programlisting>

    &example.outputs;

    <screen>
<![CDATA[
Default:
string(6) "Single"
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}

With SOAP_SINGLE_ELEMENT_ARRAYS:
array(1) {
  [0] =>
  string(6) "Single"
}
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
