<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 6585fbfcd7e4bcc2d2b24cfd78388b091803bac3 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="com.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.clsctx-inproc-server">
   <term>
    <constant>CLSCTX_INPROC_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Le code qui crée et gère les objets de cette classe est une DLL qui
     s'exécute dans le même processus que l'appelant de la fonction spécifiant
     le contexte de classe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-inproc-handler">
   <term>
    <constant>CLSCTX_INPROC_HANDLER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Le code qui gère les objets de cette classe est un gestionnaire
     en processus. Il s'agit d'une DLL qui s'exécute dans le processus client
     et implémente les structures côté client de cette classe lorsque
     les instances de la classe sont accessibles à distance.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-local-server">
   <term>
    <constant>CLSCTX_LOCAL_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Le code EXE qui crée et gère les objets de cette classe s'exécute
     sur la même machine mais est chargé dans un espace de processus distinct.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-remote-server">
   <term>
    <constant>CLSCTX_REMOTE_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Contexte distant. Le code qui crée et gère les objets de cette classe
     s'exécute sur un ordinateur différent.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-server">
   <term>
    <constant>CLSCTX_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique un code serveur, qu'il soit en processus, local ou distant. Cette
     définition fait un OU logique entre <constant>CLSCTX_INPROC_SERVER</constant>,
     <constant>CLSCTX_LOCAL_SERVER</constant>, et
     <constant>CLSCTX_REMOTE_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-all">
   <term>
    <constant>CLSCTX_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique tous les contextes de classe. Cette définition fait un OU logique
     entre <constant>CLSCTX_INPROC_HANDLER</constant> et
     <constant>CLSCTX_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-null">
   <term>
    <constant>VT_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Référence de pointeur NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-empty">
   <term>
    <constant>VT_EMPTY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une propriété avec un indicateur de type <constant>VT_EMPTY</constant> n'a
     aucune donnée associée ; autrement dit, la taille de la valeur est zéro.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-int">
   <term>
    <constant>VT_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur entière signée de 4 octets (équivalent à
     <constant>VT_I4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i1">
   <term>
    <constant>VT_I1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier signé de 1 octet.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i2">
   <term>
    <constant>VT_I2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Deux octets représentant une valeur entière signée de 2 octets.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i4">
   <term>
    <constant>VT_I4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur entière signée de 4 octets.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i8">
   <term>
    <constant>VT_I8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur entière signée de 8 octets.
    </simpara>
    <simpara>
     Uniquement sur x64.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-uint">
   <term>
    <constant>VT_UINT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier non signé de 4 octets (équivalent à
     <constant>VT_UI4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui1">
   <term>
    <constant>VT_UI1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier non signé de 1 octet.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui2">
   <term>
    <constant>VT_UI2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier non signé de 2 octets.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui4">
   <term>
    <constant>VT_UI4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier non signé de 4 octets.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui8">
   <term>
    <constant>VT_UI8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier non signé de 8 octets.
    </simpara>
    <simpara>
     Uniquement sur x64
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r4">
   <term>
    <constant>VT_R4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur en virgule flottante IEEE 32 bits.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r8">
   <term>
    <constant>VT_R8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur en virgule flottante IEEE 64 bits.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bool">
   <term>
    <constant>VT_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valeur booléenne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-error">
   <term>
    <constant>VT_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Code d'erreur ; contient le code d'état associé à
     l'erreur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-cy">
   <term>
    <constant>VT_CY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entier en complément à deux de 8 octets (échelonné par 10 000).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-date">
   <term>
    <constant>VT_DATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un nombre en virgule flottante de 64 bits représentant le nombre de jours
     (non de secondes) écoulés depuis le <literal>31 décembre 1899</literal>.
     Par exemple, <literal>1er janvier 1900</literal> est <literal>2,0</literal>,
     <literal>2 janvier 1900</literal> est <literal>3,0</literal>, etc.
     Cette valeur est stockée dans la même représentation que <constant>VT_R8</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bstr">
   <term>
    <constant>VT_BSTR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Pointeur vers une chaîne Unicode terminée par un caractère nul.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-decimal">
   <term>
    <constant>VT_DECIMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une structure décimale.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-unknown">
   <term>
    <constant>VT_UNKNOWN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un pointeur vers un objet qui implémente l'interface IUnknown.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-dispatch">
   <term>
    <constant>VT_DISPATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un pointeur vers un pointeur vers un objet spécifié.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-variant">
   <term>
    <constant>VT_VARIANT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un indicateur de type suivi de la valeur correspondante.
     <constant>VT_VARIANT</constant> peut être utilisé uniquement avec
     <constant>VT_BYREF</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-array">
   <term>
    <constant>VT_ARRAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si l'indicateur de type est combiné avec <constant>VT_ARRAY</constant>
     par un opérateur OU, la valeur est un pointeur vers un
     <literal>SAFEARRAY</literal>. <constant>VT_ARRAY</constant>
     peut être combiné par OU avec les types de données suivants : <constant>VT_I1</constant>,
     <constant>VT_UI1</constant>, <constant>VT_I2</constant>, <constant>VT_UI2</constant>,
     <constant>VT_I4</constant>, <constant>VT_UI4</constant>, <constant>VT_INT</constant>,
     <constant>VT_UINT</constant>, <constant>VT_R4</constant>, <constant>VT_R8</constant>,
     <constant>VT_BOOL</constant>, <constant>VT_DECIMAL</constant>, <constant>VT_ERROR</constant>,
     <constant>VT_CY</constant>, <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>,
     <constant>VT_DISPATCH</constant>, <constant>VT_UNKNOWN</constant> et
     <constant>VT_VARIANT</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-byref">
   <term>
    <constant>VT_BYREF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si l'indicateur de type est combiné avec <constant>VT_BYREF</constant>
     par un opérateur OU, la valeur est une référence. Les types de référence
     sont interprétés comme une référence vers des données, similaire au type
     référence en C++.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-acp">
   <term>
    <constant>CP_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Page de code ANSI par défaut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-maccp">
   <term>
    <constant>CP_MACCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Page de code Macintosh.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-oemcp">
   <term>
    <constant>CP_OEMCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Page de code OEM par défaut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf7">
   <term>
    <constant>CP_UTF7</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-7).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf8">
   <term>
    <constant>CP_UTF8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-8).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-symbol">
   <term>
    <constant>CP_SYMBOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Traductions <literal>SYMBOL</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-thread-acp">
   <term>
    <constant>CP_THREAD_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Page de code ANSI du thread actuel.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-lt">
   <term>
    <constant>VARCMP_LT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Le <literal>bstr</literal> de gauche est inférieur au 
     <literal>bstr</literal> de droite.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-eq">
   <term>
    <constant>VARCMP_EQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Les deux paramètres sont égaux.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-gt">
   <term>
    <constant>VARCMP_GT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Le <literal>bstr</literal> de gauche est supérieur au 
     <literal>bstr</literal> de droite.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-null">
   <term>
    <constant>VARCMP_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     L'une des expressions est NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorecase">
   <term>
    <constant>NORM_IGNORECASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer la sensibilité à la casse.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorenonspace">
   <term>
    <constant>NORM_IGNORENONSPACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer les caractères sans chasse.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignoresymbols">
   <term>
    <constant>NORM_IGNORESYMBOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer les symboles.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorewidth">
   <term>
    <constant>NORM_IGNOREWIDTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer la largeur de chaîne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekanatype">
   <term>
    <constant>NORM_IGNOREKANATYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer le type Kana.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekashida">
   <term>
    <constant>NORM_IGNOREKASHIDA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorer les caractères kashida en arabe.
    </simpara>
    <simpara>
     La disponibilité dépend de la bibliothèque sous-jacente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-divbyzero">
   <term>
    <constant>DISP_E_DIVBYZERO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une erreur de retour qui indique une division par zéro.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-overflow">
   <term>
    <constant>DISP_E_OVERFLOW</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une erreur indiquant qu'une valeur n'a pas pu être convertie
     dans sa représentation attendue.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-badindex">
   <term>
    <constant>DISP_E_BADINDEX</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une erreur indiquant qu'un indice de tableau n'existe pas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-paramnotfound">
   <term>
    <constant>DISP_E_PARAMNOTFOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Une valeur de retour indiquant qu'un des ID de paramètre
     ne correspond pas à un paramètre de la méthode.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mk-e-unavailable">
   <term>
    <constant>MK_E_UNAVAILABLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Code de statut iMoniker COM, retourné lors d'erreurs où l'appel
     de fonction a échoué en raison d'une indisponibilité.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-neutral">
   <term>
    <constant>LOCALE_NEUTRAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     La locale neutre. Cette constante est généralement inutilisée
     lors des appels aux API NLS. Utiliser plutôt LOCALE_SYSTEM_DEFAULT.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-system-default">
   <term>
    <constant>LOCALE_SYSTEM_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     La locale par défaut du système d'exploitation.
    </simpara>
   </listitem>
  </varlistentry>
</variablelist>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
