<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 49ff12041acd30489ef8cb7b1e08ec1ddf4dc6bc Maintainer: girgias Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="com.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com::__construct</refname>
  <refpurpose>Constructeur de la classe com</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="com">
   <modifier>public</modifier> <methodname>com::__construct</methodname>
   <methodparam><type>string</type><parameter>module_name</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>server_name</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>codepage</parameter><initializer><constant>CP_ACP</constant></initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>typelib</parameter><initializer>""</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Construit un nouvel objet com.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>module_name</parameter></term>
    <listitem>
     <simpara>
      Peut être un ProgID, Class ID ou Moniker qui nomme le composant à charger.
     </simpara>
     <simpara>
      Un ProgID est typiquement le nom de l'application ou du DDL, suivit d'un
      point, suivit du nom de l'objet. Par exemple : <literal>Word.Application</literal>.
     </simpara>
     <simpara>
      Un Class ID est l'UUID qui identifie uniquement une classe donnée.
     </simpara>
     <simpara>
      Un Moniker est une forme spécial de nommage, similaire en concept à un
      schéma URL, qui identifie une ressource et spécifie comment il devrait
      être chargé? Pour un exemple, vous pouvez démarrer Word et récupérer un
      objet représentant un document word en spécifiant le chemin complet du
      document word en tant que nom de module, ou vous pouvez utiliser
      <literal>LDAP:</literal> en tant que Moniker pour utiliser l'interface
      ADSI à LDAP.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>server_name</parameter></term>
    <listitem>
     <simpara>
      Le nom du server DCOM sur lequel le composant devrait être chargé et
      exécuté. Si &null;, l'objet est exécuté en utilisant le défaut pour
      l'application. La valeur par défaut est typiquement d'exécuter sur la
      machine locale, cependant l'administrateur peut avoir configuré
      l'application d'être lancé sur une machine différente.
     </simpara>
     <simpara>
      Si une valeur non-&null; est spécifiée pour le serveur, PHP refusera
      de charger l'objet à moins que l'option <link linkend="ini.com.allow-dcom">com.allow_dcom</link>
      &php.ini; option soit définie à &true;.
     </simpara>
     <para>
      Si <parameter>server_name</parameter> est un &array;, il devrait contenir
      les éléments suivant (sensible à la case!). À noter qu'ils sont tous
      optionnel (cependant vous devez définir l'Utilisateur et le Mot de Passe
      ensemble) ; si vous ommetez le paramètre Server, le serveur par défaut
      sera utilisé (comme dit ci-dessus), et l'instantiation de l'objet ne sera
      pas affecté par la &php.ini; directive <link linkend="ini.com.allow-dcom">com.allow_dcom</link>.
      <table>
       <title>Nom de serveur DCOM</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Clé</entry>
          <entry>Type</entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>Server</entry>
          <entry>&string;</entry>
          <entry>Le nom du serveur</entry>
         </row>
         <row>
          <entry>Username</entry>
          <entry>&string;</entry>
          <entry>Le nom d'utilisateur pour se connecter en tant que.</entry>
         </row>
         <row>
          <entry>Password</entry>
          <entry>&string;</entry>
          <entry>Le mot de passe pour <literal>Username</literal>.</entry>
         </row>
         <row>
          <entry>Domain</entry>
          <entry>&string;</entry>
          <entry>Le domaine du <literal>serveur</literal>.</entry>
         </row>
         <row>
          <entry>Drapeaux</entry>
          <entry>&integer;</entry>
          <entry>
           Une ou plusieur des constantes suivantes, assemblé ensemble grâce au OU logique :
           <constant>CLSCTX_INPROC_SERVER</constant>,
           <constant>CLSCTX_INPROC_HANDLER</constant>,
           <constant>CLSCTX_LOCAL_SERVER</constant>,
           <constant>CLSCTX_REMOTE_SERVER</constant>,
           <constant>CLSCTX_SERVER</constant> et
           <constant>CLSCTX_ALL</constant>.
           La valeur par défaut si non définie ici est
           <constant>CLSCTX_SERVER</constant> si vous ommetez aussi
           <literal>Server</literal>, ou <constant>CLSCTX_REMOTE_SERVER</constant>
           si vous définissez un serveur. Vous devriez consultez la documentation
           de Microsoft pour CoCreateInstance pour plus d'information sur la
           signification de ces constantes ; vous devrez typiquement jamais
           les utiliser.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>codepage</parameter></term>
    <listitem>
     <simpara>
      Défini la codepage qui est utilisé pour convertir les &string; en
      &string; unicode et vice versa. La conversion est appliqué quand une
      &string; PHP est passé en tant que paramètre ou retourné depuis une
      méthode de cet objet COM. La code page est "collante", ce qui signifie
      que ça sera propagé aux objets et variants retourné depuis l'objet.
     </simpara>
     <simpara>
      Les valeurs possibles sont :
      <constant>CP_ACP</constant> (utilise la code page ANSI système par défaut
      - par défaut si ce paramètre est omit),
      <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant> (utilise codepage/locale définie pour
      le thread en cours d'exécution ), <constant>CP_UTF7</constant>
      et <constant>CP_UTF8</constant>. Vous pouvez aussi utiliser le numéro pour
      une codepage donnée ; consultez la documentation de Microsoft pour plus de
      détails sur les codepages et leurs valeurs numériques.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
