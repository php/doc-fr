<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 20216b916ed583938672cd09c2c2f430351430d1 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.com-get-active-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com_get_active_object</refname>
  <refpurpose>Retourne un objet représentant l'instance actuelle d'un objet COM</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>variant</type><methodname>com_get_active_object</methodname>
   <methodparam><type>string</type><parameter>prog_id</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>codepage</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>com_get_active_object</function> est similaire à la création d'une
   nouvelle instance <xref linkend="class.com"/>d'un objet COM, excepté qu'elle ne
   retournera un objet à votre script uniquement si l'objet est actuellement instancié.
   Les applications OLE utilisent quelque chose de connu en tant que
   "<literal>Running Object Table</literal>" qui permet aux applications connues
   d'être exécutées juste une fois ; cette fonction expose la fonction
   GetActiveObject() de la bibliothèque COM pour récupérer un objet d'une instance en cours
   d'utilisation.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prog_id</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>prog_id</parameter> doit être soit le ProgID, soit le
       CLSID de l'objet dont vous voulez avoir l'accès (par exemple,
       <literal>Word.Application</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>codepage</parameter></term>
     <listitem>
      <para>
       utilise les mêmes règles que dans la <xref linkend="class.com"/> classe.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si l'objet demandé est en cours d'exécution, la fonction retournera
   à votre script ce que toute autre objet COM retournerait.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Il y a beaucoup de raisons pour lesquelles cette fonction peut échouer. Dans
   cette situation, le code erreur de l'exception devrait être
   <constant>MK_E_UNAVAILABLE</constant> ; vous pouvez utiliser la méthode
   <literal>getCode</literal> de l'objet exception pour vérifier le code de l'exception.
  </para>
 </refsect1>


 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>codepage</parameter> est désormais nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Utiliser la fonction <function>com_get_active_object</function> sur un serveur
    web n'est pas toujours la meilleure idée. La plupart des applications COM/OLE ne sont
    pas faites pour gérer plus d'un client en concurrence, comme
    (et surtout !!) Microsoft Office. Vous devriez lire les <link
    xlink:href="&url.msoffice.serverside;">considérations pour les
    automatismes coté serveur pour Office</link>
    pour plus d'informations sur les comportements généraux.
   </para>
  </warning>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
