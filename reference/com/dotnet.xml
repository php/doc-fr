<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 766f190db356d7013c802389a8a0ef929f1f1db8 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class.dotnet">
 <titleabbrev>dotnet</titleabbrev>
 <title>La classe dotnet</title>
 <partintro>

<!-- {{{ DOTNET intro -->
  <section xml:id="dotnet.intro">
   &reftitle.intro;
   <para>
    La classe dotnet vous autorise à instancier une classe depuis un ensemble
    .NET et d'appeler et accéder à ses propriétés, si la classe et les méthodes
    et les propriétés sont
    <link xlink:href="&url.com.visible;">visible pour COM</link>.
   </para>
   <para>
    Ni l'instantiation de classes static ni l'appel de méthodes statique est
    supporté.
    L'instanciation de classes génériques telles que
    <literal>System.Collections.Generic.List</literal> n'est pas non plus prise en charge.
   </para>
   <para>
    Quelque classes .Net n'implémente pas IDispatch, donc bien qu'elles
    peuvent être instancié, appeller des méthodes ou accéder aux propriétés
    sur ces classes n'est pas supporté.
   </para>
   <note>
    <para>
     Vous devez installer le moteur d'exécution .Net sur votre serveur web pour
     tirer avantage de cette fonctionnalité.
    </para>
   </note>
   <note>
    <para>
     Antérieur à PHP 8.0.0, le framework .Net 4.0 et ultérieurs ne sont pas supporté par la classe
     <classname>dotnet</classname>. Si des assemblages ont été régistré avec
     <command>regasm.exe</command>, les classes peuvent être instanciées en
     tant qu'objets <classname>com</classname>, cependant.
     À partir de PHP 8.0.0, le framework .Net 4.0 et les versions ultérieures sont supportés
     via la directive &php.ini; <link linkend="ini.com.dotnet-version">com.dotnet_version</link>.
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="dotnet.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>dotnet</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>dotnet</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>variant</classname>
     </ooclass>
    </classsynopsisinfo>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.dotnet')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="class.dotnet.overloadedmethods">
   <title>Méthodes surchargées</title>
   <para>
    L'objet retourné est un objet surchargé, ceci signifie que PHP ne voit pas
    les méthodes fixé comme il le fait avec les classes normales ; à la place
    tout accès de propriété ou méthode sont passés à travers COM et à partir de
    là à DOTNET. Dans d'autres mots, l'objet .Net est mappé via la couche
    d'interopérabilité COM fournie par le moteur d'exécution .Net.
   </para>
   <para>
    Une fois que vous avez crée un objet dotnet, PHP le traite de façon identique
    à n'importe quel autre objet COM ; les mêmes règles s'appliquent.
   </para>
  </section>

  <section xml:id="class.dotnet.examples">
   <title>Exemples dotnet</title>
   <para>
    <example xml:id="example.dotnet">
     <title>Exemple dotnet</title>
     <programlisting role="php">
<![CDATA[
<?php
$stack = new dotnet("mscorlib", "System.Collections.Stack");
$stack->Push(".Net");
$stack->Push("Hello ");
echo $stack->Pop() . $stack->Pop();
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>

 </partintro>

 &reference.com.entities.dotnet;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
