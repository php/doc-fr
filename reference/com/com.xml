<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14767af0f05dffa6fdb9b49e1a1f4e9ca7022a60 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.com" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <titleabbrev>com</titleabbrev>
 <title>La classe com</title>
 <partintro>


<!-- {{{ com intro -->
  <section xml:id="com.intro">
   &reftitle.intro;
   <para>
    La classe m vous permet d'instancier un objet COM compatible OLE et
    d'appeler ses méthodes et d'accéder à ses propriétés.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="com.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <classname>com</classname>
    </ooclass>

    <ooclass>
     <modifier>extends</modifier>
     <classname>variant</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.com')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='com'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="class.com.overloadedmethods">
   <title>Méthodes surchargées</title>
   <para>
    L'objet retourné est un objet surchargé, ce qui signifie que PHP ne voit
    aucune méthode fixe comme il le fait avec les classes habituelles ;
    au lieu de cela, chaque accès à une propriété ou une méthode est effectué
    à travers COM.
   </para>
   <para>
    PHP will automatically detect methods that accept
    parameters by reference, and will automatically convert regular PHP
    variables to a form that can be passed by reference.  This means that you
    can call the method very naturally; you needn't go to any extra effort in
    your code.
    PHP détectera automatiquement les méthodes qui acceptent
    les paramètres par référence, et convertira automatiquement les variables
    PHP classiques en une forme pouvant être passée par référence.
    Cela signifie que vous pouvez appeler les méthodes de façon naturelle ;
    vous n'avez pas d'efforts supplémentaires à faire dans votre code.
   </para>
  </section>

  <section xml:id="class.com.examples">
   <title>Exemples com</title>
   <para>
    <example xml:id="example.com1">
     <title>Exemple com (1)</title>
     <programlisting role="php">
<![CDATA[
<?php
// démarrer Word
$word = new com("word.application") or die("Unable to instantiate Word");
echo "Loaded Word, version {$word->Version}\n";

// l'ammener devant
$word->Visible = 1;

// ouvrir un document vide
$word->Documents->Add();

// faire des choses
$word->Selection->TypeText("This is a test...");
$word->Documents[1]->SaveAs("Useless test.doc");

// fermer Word
$word->Quit();

// libérer l'objet
$word = null;
?>
]]>
    </programlisting>
    </example>
   </para>
   <para>
    <example xml:id="example.com2">
     <title>Exemple com (2)</title>
     <programlisting role="php">
<![CDATA[
<?php

$conn = new com("ADODB.Connection") or die("Cannot start ADO");
$conn->Open("Provider=SQLOLEDB; Data Source=localhost;
Initial Catalog=database; User ID=user; Password=password");

$rs = $conn->Execute("SELECT * FROM sometable");    // Recordset

$num_columns = $rs->Fields->Count();
echo $num_columns . "\n";

for ($i=0; $i < $num_columns; $i++) {
    $fld[$i] = $rs->Fields($i);
}

$rowcount = 0;
while (!$rs->EOF) {
    for ($i=0; $i < $num_columns; $i++) {
        echo $fld[$i]->value . "\t";
    }
    echo "\n";
    $rowcount++;            // incrémente rowcount
    $rs->MoveNext();
}

$rs->Close();
$conn->Close();

$rs = null;
$conn = null;

?>
]]>
     </programlisting>
    </example>
   </para>
  </section>

 </partintro>

 &reference.com.entities.com;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
