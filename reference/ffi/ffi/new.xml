<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e0804888ae46a50f28d98514a8d5e70a34e069c Maintainer: pierrick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="ffi.new" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>FFI::new</refname>
  <refpurpose>Crée une structure de données C</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="FFI">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>FFI\CData</type><type>null</type></type><methodname>FFI::new</methodname>
   <methodparam><type class="union"><type>FFI\CType</type><type>string</type></type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>owned</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>persistent</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis role="FFI">
   <modifier>public</modifier> <type class="union"><type>FFI\CData</type><type>null</type></type><methodname>FFI::new</methodname>
   <methodparam><type class="union"><type>FFI\CType</type><type>string</type></type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>owned</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>persistent</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crée une structure de données native du type C donné.
   Si cette méthode est appelée de manière statique, elle ne doit utiliser que des noms de types C prédéfinis (par ex.
   <literal>int</literal>, <literal>char</literal>, etc.) ; si la méthode est appelée en tant que méthode d'instance,
   tout type déclaré pour l'instance est autorisé.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      <parameter>type</parameter> est une déclaration C valide comme <type>string</type>, ou une
      instance de <classname>FFI\CType</classname> qui a déjà été créée.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>owned</parameter></term>
    <listitem>
     <para>
      Création de données gérées ou non gérées. Les données gérées vivent avec
      l'objet <classname>FFI\CData</classname> retourné, et sont libérées lorsque la dernière référence à cet objet
      est libérée par le comptage de références ordinaire de PHP ou le ramasse-miette.
      Les données non gérées doivent être libérées en appelant <methodname>FFI::free</methodname>,
      lorsqu'elles ne sont plus nécessaires.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>persistent</parameter></term>
    <listitem>
     <para>
      Allouer la structure de données C de manière permanente sur le tas du système (en utilisant 
      <function>malloc</function>), ou sur le tas des requêtes PHP (en utilisant <function>emalloc</function>).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne l'objet <classname>FFI\CData</classname> fraîchement créé,
   ou &null; en cas d'échec.
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
