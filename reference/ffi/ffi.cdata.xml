<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14767af0f05dffa6fdb9b49e1a1f4e9ca7022a60 Maintainer: pierrick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.ffi-cdata" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Gestionnaire de données C</title>
 <titleabbrev>FFI\CData</titleabbrev>

 <partintro>

  <!-- {{{ FFI\CData intro -->
  <section xml:id="ffi-cdata.intro">
   &reftitle.intro;
   <para>
    Les objets <classname>FFI\CData</classname> peuvent être utilisés de différentes manières, comme des

    données PHP normale :
    <itemizedlist>
     <listitem>
      <simpara>
       Les données C de type scalaire peuvent être lues et assignées via la propriété <property>$cdata</property>, par exemple.
       <code>$x = FFI::new('int'); $x-&gt;cdata = 42;</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les champs de type struct et union peuvent être accédés comme des propriétés d'objets PHP ordinaires, par exemple
       <code>$cdata-&gt;field</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les éléments d'un tableau C sont accessibles comme les éléments d'un tableau PHP, par exemple.
       <code>$cdata[$offset]</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les tableaux C peuvent être itérés en utilisant des instructions &foreach;.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les tableaux C peuvent être utilisés comme arguments de <function>count</function>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les pointeurs C peuvent être déréférencés comme des tableaux, par exemple <code>$cdata[0]</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les pointeurs C peuvent être comparés à l'aide d'opérateurs de comparaison ordinaires (<code>&lt;</code>,
       <code>&lt;=</code>, <code>==</code>, <code>!=</code>, <code>&gt;=</code>, <code>&gt;</code>).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les pointeurs C peuvent être incrémentés et décrémentés à l'aide des opérations ordinaires ( <code>+</code>/<code>-</code>/ / ).
       <code>++</code>/<code>–-</code>, par exemple <code>$cdata += 5</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les pointeurs C peuvent être soustraits d'un autre à l'aide d'opérations ordinaires <code>-</code>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les pointeurs C vers des fonctions peuvent être appelés comme une fermeture PHP classique, par exemple <code>$cdata()</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Toute donnée C peut être dupliquée en utilisant l'opérateur <link linkend="language.oop5.cloning">clone</link>,
       par exemple <code>$cdata2 = clone $cdata;</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Toutes les données C peuvent être visualisées à l'aide de <function>var_dump</function>, <function>print_r</function>, etc.
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <simpara>
      Les limitations notables sont que les instances de <classname>FFI\CData</classname> ne supportent pas les fonctions
      <function>isset</function>, <function>empty</function> et <function>unset</function>,
      et que les structs et unions C enveloppés n'implémentent pas <interfacename>Traversable</interfacename>.
     </simpara>
    </note>
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="ffi-cdata.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>FFI\CData</classname>
    </ooclass>
   </classsynopsis>
   <!-- }}} -->

  </section>

 </partintro>

 <!-- &reference.ffi.entities.ffi-cdata; -->

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
