<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 187032b3ea20fa28f1c9f29ba38d06820428f849 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongodb-driver-bulkwritecommand.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\Driver\BulkWriteCommand::__construct</refname>
  <refpurpose>Créer une nouvelle BulkWriteCommand</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>MongoDB\Driver\BulkWriteCommand::__construct</methodname>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Construit une nouvelle <classname>MongoDB\Driver\BulkWriteCommand</classname>,
   qui peut être utilisée pour effectuer de nombreuses opération d'insertions, mises à jour et suppression
   sur plusieurs collections dans une seule requête à l'aide de la commande
   <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>
   introduite dans MongoDB 8.0. Cela diffère de
   <classname>MongoDB\Driver\BulkWrite</classname>, qui est supporté par toutes
   les versions du serveur mais limité à une seule collection.
  </para>
  <para>
   Après toutes les opérations d'écriture ont été ajoutées, cet objet peut être exécuté avec
   <methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>options</parameter> (<type>array</type>)</term>
    <listitem>
     <para>
      <table>
       <title>options</title>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>Option</entry>
          <entry>Type</entry>
          <entry>Description</entry>
          <entry>Défaut</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>bypassDocumentValidation</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Si &true;, permet aux opérations d'insertion et de mise à jour de contourner
            la validation au niveau du document.
           </para>
          </entry>
          <entry>&false;</entry>
         </row>
         <row>
          <entry>comment</entry>
          <entry><type>mixed</type></entry>
          <entry>
           <para>
            Un commentaire arbitraire pour aider à tracer l'opération à travers le
            profileur de base de données, la sortie currentOp et les journaux.
           </para>
          </entry>
         </row>
         &mongodb.option.let;
         <row>
          <entry>ordered</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Si les opérations dans cette écriture groupée doivent être exécutées dans
            l'ordre dans lequel elles ont été spécifiées. Si &false;, les écritures
            continueront à être exécutées si une écriture individuelle échoue. Si &true;,
            les écritures s'arrêteront si une écriture individuelle échoue.
           </para>
          </entry>
          <entry>&true;</entry>
         </row>
         <row>
          <entry>verboseResults</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Si les détails des résultats de chaque opération réussie doivent être
            inclus dans le résultat dans la 
            <classname>MongoDB\Driver\BulkWriteCommandResult</classname> retournée.
           </para>
          </entry>
          <entry>&false;</entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   &mongodb.throws.argumentparsing;
  </simplelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple de <function>MongoDB\Driver\BulkWriteCommand::__construct</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager;

$bulk = new MongoDB\Driver\BulkWriteCommand;

// Supprime les documents de deux collections
$bulk->deleteMany('db.coll_one', []);
$bulk->deleteMany('db.coll_two', []);

// Ajoute les documents de deux collections
$bulk->insertOne('db.coll_one', ['_id' => 1]);
$bulk->insertOne('db.coll_two', ['_id' => 2]);
$bulk->insertOne('db.coll_two', ['_id' => 3]);

// Modifie un document dans "coll_one"
$bulk->updateOne('db.coll_one', ['_id' => 1], ['$set' => ['x' => 1]]);

$result = $manager->executeBulkWriteCommand($bulk);

printf("%d document(s) ont été inséré(s)\n", $result->getInsertedCount());
printf("%d document(s) ont été mise à jour(s)\n", $result->getModifiedCount());

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
3 document(s) ont été inséré(s)
1 document(s) ont été mise à jour(s)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname></member>
   <member><classname>MongoDB\Driver\BulkWriteCommandResult</classname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
