<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f12b4010435efc7a015e65fbd274740710368487 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="syncreaderwriter.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SyncReaderWriter::__construct</refname>
  <refpurpose>Construit un nouvel objet SyncReaderWriter</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>SyncReaderWriter::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>autounlock</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Construit un objet de lecture/écriture nommé ou non.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
      Le nom de l'objet s'il est nommé.
     </para>
     <note>
      <para>
       Si le nom existe déjà, l'objet doit pouvoir être ouvert avec l'utilisateur
       courant qui exécute le processus, ou une exception sera émise contenant
       le message d'erreur.
      </para>
     </note>
     <note>
      <simpara>
       Sous Windows, <parameter>name</parameter> ne doit pas contenir de barres obliques inverses.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>autounlock</parameter></term>
    <listitem>
     <para>
      Spécifie si l'on doit déverrouiller automatiquement l'objet à la fin du
      script PHP.
     </para>
     <warning>
      <para>
       Si l'objet est un objet de lecture/écriture avec l'autounlock à &false;,
       l'objet est verrouillé en lecture ou en écriture, et le script PHP
       va se terminer avant le déverouillage de l'objet, et donc, l'objet
       sous-jacent se terminera dans un statut non consistent.
      </para>
     </warning>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Le nouvel objet <classname>SyncReaderWriter</classname>.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Une exception est émise si l'objet de
   lecture/écriture ne peut être créé ou ouvert.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>SyncReaderWriter::__construct</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$readwrite = new SyncReaderWriter("FileCacheLock");
$readwrite->readlock();
/* ... */
$readwrite->readunlock();

$readwrite->writelock();
/* ... */
$readwrite->writeunlock();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SyncReaderWriter::readlock</methodname></member>
   <member><methodname>SyncReaderWriter::readunlock</methodname></member>
   <member><methodname>SyncReaderWriter::writelock</methodname></member>
   <member><methodname>SyncReaderWriter::writeunlock</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
