<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: abc0c909d5a642fbc9008c5ed1a4c3ead5ecb9a2 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.password-verify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>password_verify</refname>
  <refpurpose>Vérifie qu'un mot de passe correspond à un hachage</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>password_verify</methodname>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>hash</parameter></methodparam>
  </methodsynopsis>
  <para>
   Vérifie que le hachage fourni correspond bien au mot de passe fourni.
   La fonction <function>password_verify</function> est compatible avec la fonction
   <function>crypt</function>. Ainsi, un mot de passe haché par la fonction
   <function>crypt</function> peut être utilisé avec la fonction
   <function>password_verify</function>.
  </para>
  <para>
   Notez que la fonction <function>password_hash</function> retourne l'algorithme,
   le "cost", et le salt comme parties du hachage retourné. Toutefois, toutes les
   informations nécessaires pour vérifier le hachage y sont incluses. Ceci permet
   à la fonction de vérifier le hachage sans avoir besoin d'un stockage séparé
   pour les informations concernant l'algorithme et le salt.
  </para>
  <para>
   Cette fonction est sans danger contre les attaques sur le temps.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>password</parameter></term>
    <listitem>
     <para>
      &password.parameter.password;
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>hash</parameter></term>
    <listitem>
     <para>
      &password.parameter.hash;
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si le mot de passe et le hachage correspondent,
   ou &false; sinon.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>password_verify</function></title>
    <para>
     Ceci est un exemple simplifié ; il est recommandé de ré-hacher un mot de passe correct
     si nécessaire ; voir la fonction <function>password_needs_rehash</function> pour un exemple.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Voir l'exemple fourni sur la page de la fonction password_hash()
// pour savoir d'où cela provient.
$hash = '$2y$07$BCryptRequires22Chrcte/VlQH0piJtjXl.0t1XkA8pw9dMXTpOq';

if (password_verify('rasmuslerdorf', $hash)) {
    echo 'Le mot de passe est valide !';
} else {
    echo 'Le mot de passe est invalide.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Le mot de passe est valide !
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>password_needs_rehash</function></member>
    <member><function>password_hash</function></member>
    <member><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="&url.password.compat;">l'implémentation en espace utilisateur</link></member>
    <member><function>sodium_crypto_pwhash_str_verify</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
