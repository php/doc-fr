<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6be77ad626e7cd60fc61fbb90e70b2f3c9653de2 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="password.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <para>
  <variablelist>
   <varlistentry xml:id="constant.password-bcrypt">
    <term>
     <constant>PASSWORD_BCRYPT</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      La constante <constant>PASSWORD_BCRYPT</constant> est utilisée pour
      créer une nouvelle table de hachage de mot de passe en utilisant
      l'algorithme <constant>CRYPT_BLOWFISH</constant>.
     </para>
     <para>
      Elle a toujours retourné le résultat de hachage en utilisant le format
      crypt "$2y$", qui sera toujours une chaîne de caractères de 60 caractères
      de long.
     </para>
     <para>
      Options supportées :
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>salt</literal> (<type>string</type>) - permet de fournir manuellement un salt à utiliser
        pour le hachage du mot de passe. Notez que ceci va écraser tout salt généré
        automatiquement.
       </para>
       <para>
        Si omis, un salt aléatoire sera généré par la fonction 
        <function>password_hash</function> pour chaque mot de passe haché.
        C'est bien le but de l'opération et à partir de PHP 7.0.0 l'option salt a été désapprouvée.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>cost</literal> (<type>int</type>) - le coût algorithmique à utiliser.
        Des exemples de ces valeurs peuvent être trouvés sur la page
        de la documentation de la fonction <function>crypt</function>.
       </para>
       <para>
        Si omis, une valeur par défaut de <literal>10</literal> sera utilisée.
        C'est une bonne base mais vous pourriez vouloir l'augmenter suivant
        votre architecture matérielle.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2i">
    <term>
     <constant>PASSWORD_ARGON2I</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      <constant>PASSWORD_ARGON2I</constant> est utilisé pour créer de nouveaux 
      hashs de mot de passe à l'aide de l'algorithme Argon2i.
     </para>
     <para>
      Options prises en charge :
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>memory_cost</literal> (<type>int</type>) - Mémoire maximale 
        (en kibioctets) pouvant être utilisée pour calculer le hachage Argon2. Par
        défaut à  <constant>PASSWORD_ARGON2_DEFAULT_MEMORY_COST</constant>.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>time_cost</literal> (<type>int</type>) - Durée maximale de 
        temps qu'il peut prendre pour calculer le hachage Argon2. Par 
        défaut à  <constant>PASSWORD_ARGON2_DEFAULT_TIME_COST</constant>.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>threads</literal> (<type>int</type>) - Nombre de threads à 
        utiliser pour calculer le hachage Argon2. Par défaut à 
        <constant>PASSWORD_ARGON2_DEFAULT_THREADS</constant>.
        Uniquement disponible avec libargon2, et non avec l'implémentation
        libsodium.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      &php.version.added; 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2id">
    <term>
     <constant>PASSWORD_ARGON2ID</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      <constant>PASSWORD_ARGON2ID</constant> est utilisé pour créer de nouveaux 
      hashs de mot de passe à l'aide de l'algorithme Argon2id. Supporte les mêmes options que
      <link linkend="constant.password-argon2i"><constant>PASSWORD_ARGON2I</constant></link>.
     </para>
     <para>
      &php.version.added; 7.3.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-memory-cost">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_MEMORY_COST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Quantité de mémoire par défaut (en octets) qui sera utilisé en
      essayant de calculer un hachage.
     </para>
     <para>
      &php.version.added; 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-time-cost">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_TIME_COST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Durée de temps par défaut que sera passer pour essayer de calculer
      un hachage.
     </para>
     <para>
      &php.version.added; 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-threads">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_THREADS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Nombre par défaut de threads que Argon2lib va utiliser.
      Pas disponible avec avec l'implémentation libsodium.
     </para>
     <para>
      &php.version.added; 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="constant.password-default">
    <term>
     <constant>PASSWORD_DEFAULT</constant>
     (<type>mixed</type>)
    </term>
    <listitem>
     <para>
      L'algorithme par défaut à utiliser pour le hachage si aucun
      algorithme n'est fourni. Cette valeur peut changer dans les futures
      versions de PHP où il est probable que de meilleurs algorithmes
      de hachage soient supportés.
     </para>
     <para>
      Cette valeur peut (et va certainement) changer dans le temps. Toutefois,
      vous devez être prudent sur le fait que la longueur du résultat peut
      changer aussi. Aussi, si vous utilisez la constante
      <constant>PASSWORD_DEFAULT</constant>, vous devriez stocker le hache résultant
      dans un champ supportant au moins 60 caractères (taille de 255 caractères recommandé).
     </para>
     <para>
      Valeur pour cette constante :
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        PHP 5.5.0 - <constant>PASSWORD_BCRYPT</constant>
       </simpara>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>

 <formalpara>
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Les valeurs pour les constantes <constant>PASSWORD_BCRYPT</constant>,
        <constant>PASSWORD_ARGON2I</constant>, <constant>PASSWORD_ARGON2ID</constant>
        et <constant>PASSWORD_DEFAULT</constant> sont désormais des &string;s.
        Auparavant, elles étaient des &integer;s.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </formalpara>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

