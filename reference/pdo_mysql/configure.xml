<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9ed2d17d581d2c72282dee0b9be3b5a49dabf108 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<section xml:id="ref.pdo-mysql.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  Les distributions Linux incluent des versions binaires de PHP qui peuvent
  être installées. Même si ces binaires sont construits avec les extensions
  MySQL, les bibliothèques clientes doivent souvent être installées au
  moyen d'un paquet additionnel. Voyez si c'est le cas pour votre distribution.
 </para>

 <para>
  Par exemple, sur Ubuntu le package <literal>php5-mysql</literal> installe les
  extensions PHP ext/mysql, ext/mysqli, et pdo_mysql. Sur CentOS, le package 
  <literal>php-mysql</literal> installe aussi ces trois extensions PHP.
 </para>

 <para>
  Alternativement, vous pouvez compiler cette extension vous-même. Construire
  PHP depuis les sources permet de préciser les extensions MySQL à embarquer,
  mais aussi les bibliothèques clientes de chaque extension.
 </para>

 <para>
  Lors de la compilation utilisez <option role="configure">--with-pdo-mysql[=DIR]</option>
  pour installer l'extension PDO MySQL, où <literal>[=DIR]</literal> est le chemin
  de la bibliothèque de base de MySQL.
  <link linkend="book.mysqlnd">Mysqlnd</link> et la bibliothèque par défaut.
  Pour plus de détails à propos du choix de la bibliothèque, voir
  <link linkend="mysqlinfo.library.choosing">Choisir une bibliothèque MySQL</link>.
 </para>
 <para>
  Optionnellement, l'option <option role="configure">--with-mysql-sock[=DIR]</option>
  définit le chemin vers le socket Unix MySQL pour toutes les extensions
  MySQL, y compris PDO_MYSQL. Si non spécifié, les chemins par défaut seront utilisés.
 </para>
 <para>
  Optionnellement, l'option <option role="configure">--with-zlib-dir[=DIR]</option>
  sera utilisée pour définir le préfixe d'installation zlib.
 </para>
 <para>
  <screen>
<![CDATA[
$ ./configure --with-pdo-mysql --with-mysql-sock=/var/mysql/mysql.sock
]]>
  </screen>
 </para>
 <para>
  Le support SSL est activé en utilisant les <link linkend="pdo-mysql.constants">constantes PDO_MySQL</link>
  appropriées, ce qui revient à appeler la fonction
  <link xlink:href="&url.mysql.docs.ssl.set;">mysql_ssl_set() de l'API C MySQL</link>.
  De plus, SSL ne peut être activé avec <classname>PDO::setAttribute</classname> car la connexion
  existe déjà. Reportez-vous à la documentation MySQL sur
  <link xlink:href="&url.mysql.docs.ssl.using;">la connexion sur MySQL en utilisant SSL</link>.
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
