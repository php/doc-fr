<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d4d537e6a2a9e11b24d5a42e8be7b2d4763c3f0e Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<section xml:id="pdo-mysql.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &pdo.driver-constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.mysql-attr-use-buffered-query">
   <term>
    <constant>PDO::MYSQL_ATTR_USE_BUFFERED_QUERY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si cet attribut est défini à TRUE sur un objet de classe
     <classname>PDOStatement</classname>, le pilote MySQL
     utilisera les versions bufferisées de l'API MySQL.
     Si vous écrivez du code portable, vous devriez utiliser à la place
     <function>PDOStatement::fetchAll</function>.
    </simpara>
    <para>
     <example><title>Forcer la bufferisation des requêtes avec mysql</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
    $stmt = $db->prepare('select * from foo',
         array(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true));
} else {
    die("mon application fonctionne seulement avec mysql; Je devrais utiliser \$stmt->fetchAll() à la place");
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-local-infile">
   <term>
    <constant>PDO::MYSQL_ATTR_LOCAL_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active <literal>LOAD LOCAL INFILE</literal>.
    </para>
    <para>
     Notez que cette option n'a d'effet que si utilisée dans le tableau d'options
     <parameter>driver_options</parameter> du constructeur.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-local-infile-directory">
   <term>
    <constant>PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <para>
     Permet de restreindre le chargement de LOCAL DATA aux fichiers localisé
     dans le dossier désigné. Disponible à partir de PHP 8.1.0.
    </para>
    <para>
     Note, cette constante peut seulement être utilisé dans le &array;
     <parameter>driver_options</parameter> lors de la construction d'un nouvel
     gestionnaire de base de donnée.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-init-command">
   <term>
    <constant>PDO::MYSQL_ATTR_INIT_COMMAND</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <para>
     Commande à exécuter lors de la connexion au serveur MySQL. Sera
     automatiquement ré-exécuté lors d'une reconnexion.
    </para>
    <para>
     Notez que cette option n'a d'effet que si utilisée dans le tableau d'options
     <parameter>driver_options</parameter> du constructeur.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-read-default-file">
   <term>
    <constant>PDO::MYSQL_ATTR_READ_DEFAULT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Lit les options depuis le fichier nommé optionnel, plutôt que depuis
     <filename>my.cnf</filename>. Cette option n'est pas disponible
     lors de l'utilisation de mysqlnd car ce dernier ne lit pas
     les fichiers de configuration de mysql.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-read-default-group">
   <term>
    <constant>PDO::MYSQL_ATTR_READ_DEFAULT_GROUP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Lit les options depuis le groupe nommé du fichier <filename>my.cnf</filename>
     ou depuis le fichier spécifié par <constant>MYSQL_READ_DEFAULT_FILE</constant>.
     Cette option n'est pas disponible lors de l'utilisation de
     mysqlnd car ce dernier ne lit pas les fichiers de configuration de mysql.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-max-buffer-size">
   <term>
    <constant>PDO::MYSQL_ATTR_MAX_BUFFER_SIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Taille maximale du tampon. Par défaut, vaut 1 MiB. Cette constante n'est
     pas supportée lorsque mysqlnd est utilisé.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-direct-query">
   <term>
    <constant>PDO::MYSQL_ATTR_DIRECT_QUERY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Effectue des requêtes directes, sans utiliser de requêtes préparées.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-found-rows">
   <term>
    <constant>PDO::MYSQL_ATTR_FOUND_ROWS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Retourne le nombre d'enregistrements trouvés, pas le nombre
     d'enregistrements changés.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-ignore-space">
   <term>
    <constant>PDO::MYSQL_ATTR_IGNORE_SPACE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Autorise les espaces après les noms de fonctions. Fait en sorte
     que les noms de fonctions soient des mots réservés.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-compress">
   <term>
    <constant>PDO::MYSQL_ATTR_COMPRESS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active la compression de la communication réseau.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-ca">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CA</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chemin vers l'autorité certificat SSL.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-capath">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CAPATH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chemin vers le dossier contenant les certificats SSL CA,
     stockés au format PEM.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-cert">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CERT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chemin vers le certificat SSL.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-cipher">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CIPHER</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Liste d'un ou plusieurs ciphers pour utiliser lors du cryptage SSL, dans un format
     reconnu par OpenSSL. Par exemple: <literal>DHE-RSA-AES256-SHA:AES128-SHA</literal>
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-key">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_KEY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Chemin vers la clé SSL.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-verify-server-cert">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fournit un moyen de désactiver la vérification du certificat SSL du serveur.
    </para>
    <para>
     &version.exists.asof; 7.0.18 et PHP 7.1.4.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-multi-statements">
   <term>
    <constant>PDO::MYSQL_ATTR_MULTI_STATEMENTS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <para>
     Désactive la requête d'exécution multiple à la fois dans <function>PDO::prepare</function>
     et <function>PDO::query</function> quand définie à &false;.
    </para>
    <para>
     Il est à noter que cette constante peut seulement être utilisée dans le &array; 
     <parameter>driver_options</parameter> lors de la construction d'un nouveau
     gestionnaire de base de données.
    </para>
   </listitem>
  </varlistentry>

 </variablelist>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
