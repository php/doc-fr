<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4754397753fd79f1c846868b66a2448babab1c54 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-new-glo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_new_glo</refname>
  <refpurpose>Crée une instance glo</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>cubrid_new_glo</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>  
   <methodparam><type>string</type><parameter>class_name</parameter></methodparam>  
   <methodparam><type>string</type><parameter>file_name</parameter></methodparam>  
  </methodsynopsis>
  <para>
   La fonction <function>cubrid_new_glo</function> est utilisée pour créer une
   instance glo dans la classe demandée (classe glo).
   Le glo créé est de type LO, et est stocké dans le fichier
   <parameter>file_name</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>conn_identifier</parameter></term>
     <listitem><para>Identifiant de connexion.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem><para>Nom de la classe dans laquelle vous voulez créer le glo.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>file_name</parameter></term>
     <listitem><para>Le nom du fichier dans lequel vous voulez sauvegarder le nouveau glo créé.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   OID de l'instance créée en cas de succès.
  </para>
  <para>
   &false; en cas d'échec.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_new_glo</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$oid = cubrid_new_glo ($con, "glo", "input.jpg");
if ($oid){
   // Le type de la colonne "image" est "object"
   $req = cubrid_execute ($con, "insert into person(image) values($oid)");
   if ($req) {
      echo "image insérée avec succès";
      cubrid_close_request ($req);
      cubrid_commit($con);
   }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    &info.deprecated.alias;
    <function>cubrid_new_glo</function>
   </para>
  </note>
  <note>
   <para>
    Cette fonction a été supprimée depuis CUBRID 3.1.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_save_to_glo</function></member>  
    <member><function>cubrid_load_from_glo</function></member>  
    <member><function>cubrid_send_glo</function></member>     
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
