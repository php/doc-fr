<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4754397753fd79f1c846868b66a2448babab1c54 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-field-flags" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_field_flags</refname>
  <refpurpose>Retourne une chaîne avec les drapeaux de la position du champ fourni</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>cubrid_field_flags</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam><type>int</type><parameter>field_offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction retourne une &string; avec les drapeaux de la position
   du champ fourni, séparés par un espace. Vous pouvez utiliser la fonction
   explode() pour récupérer chaque drapeau. Les drapeaux disponibles sont :
   <constant>not_null</constant>, <constant>primary_key</constant>,
   <constant>unique_key</constant>, <constant>foreign_key</constant>,
   <constant>auto_increment</constant>, <constant>shared</constant>,
   <constant>reverse_index</constant>, <constant>reverse_unique</constant> et
   <constant>timestamp</constant>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para>Le paramètre <parameter>result</parameter> provient de
      l'appel à la fonction <function>cubrid_execute</function></para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem><para>La position numérique du champ.
      <parameter>field_offset</parameter> commence à zéro (0). Si
      <parameter>field_offset</parameter> n'existe pas, une erreur de niveau
      <constant>E_WARNING</constant> sera également émise.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une &string; avec les drapeaux, en cas de succès.
  </para>
  <para>
   &false; si la valeur de field_offset est invalide.
  </para>
  <para>
   -1 si la requête SQL n'est pas de type SELECT.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_field_flags</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");
$result = cubrid_execute($conn, "SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'");

$col_num = cubrid_num_cols($result);

printf("%-30s %s\n", "Field Name", "Field Flags");
for($i = 0; $i < $col_num; $i++) {
    printf("%-30s %s\n", cubrid_field_name($result, $i), cubrid_field_flags($result, $i));
}

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Field Name                     Field Flags
host_year                      not_null primary_key unique_key
event_code                     not_null primary_key unique_key foreign_key
athlete_code                   not_null primary_key unique_key foreign_key
stadium_code                   not_null
nation_code                    
medal                          
game_date                      
]]>
   </screen>
  </example>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
