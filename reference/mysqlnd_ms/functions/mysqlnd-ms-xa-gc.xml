<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-ms-xa-gc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_ms_xa_gc</refname>
  <refpurpose>Collecte les données incorrectes issues des transactions XA non terminées en raison d'erreurs sévères</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type>
   <methodname>mysqlnd_ms_xa_gc</methodname>
   <methodparam><type>mixed</type><parameter>connection</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>gtrid</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>ignore_max_retries</parameter></methodparam>


  </methodsynopsis>
  <para>
   Collecte les données incorrectes issues de transactions XA non terminées.
  </para>
  <para>
   Le protocole XA est un protocole bloquant. Il existe des cas où les serveurs
   participants à une transaction globale ne peuvent réaliser les opérations,
   par exemple, lorsque le coordinateur de transaction s'interrompt de façon
   innatendu ou se déconnecte. Dans de tel cas, les serveurs MySQL restent en
   attente d'instruction pour finir la transaction XA en question. En raison du
   fait que les transactions occupent des ressources, elles doivent toujours
   être terminées proprement.
  </para>
  <para>
   Le collecteur de données incorrectes requiert le stockage d'un statut
   pour tracker les transactions globales. Lorsqu'un client PHP se termine
   de façon innatendue au milieu d'une transaction, et qu'un nouveau client
   PHP démarre, alors le collecteur de données incorrectes peut connaître
   la transaction globale interrompue et la terminer. Si vous ne configurez
   pas de stockage de statut, le collecteur de données incorrectes ne peut
   effectuer aucune tâche de nettoyage.
  </para>
  <para>
   Le stockage de statut doit être sécurisé contre les crash, avoir une haute
   disponibilité pour survivre à son propre crash. Actuellement, seul MySQL
   est supporté comme stockage de statut.
  </para>
  <para>
   Le collecteur de données incorrectes peut aussi être exécuté automatiquement
   en tâche de fond. Voir la directive de configuration du plugin
   <literal>garbage_collection</literal> pour plus de détails.
  </para>
  <note>
   <title>Expérimental</title>
   <para>
    Cette fonctionnalité est actuellement en cours de développement. Il peut y avoir
    des bogues et/ou des limitations dans les fonctionnalités. Ne pas utiliser
    en environnement de production.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       Un gestionnaire de connexion MySQL obtenu depuis une des fonctions
       de connexion des extensions <link linkend="ref.mysqli">mysqli</link>,
       <link linkend="ref.mysql">mysql</link> ou
       <link linkend="ref.pdo-mysql">PDO_MYSQL</link>.
      </para>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>gtrid</parameter></term>
    <listitem>
     <para>
      L'identifiant de transaction globale (gtrid). Si fourni, le collecteur
      de données incorrectes ne considérera que la transaction. Sinon, le
      stockage de statut sera analysé à la recherche d'une transaction non terminée.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>ignore_max_retries</parameter></term>
     <listitem>
      <para>
       Si l'on doit ignorer ou non la configuration <literal>max_retries</literal>
       du plugin. Si le collecteur de données incorrectes échoue, et que la
       limite <literal>max_retries</literal> est atteinte avant de terminer la
       transaction globale en échec, vous pouvez tenter des exécutions avant
       de chercher la cause et résoudre le problème manuellement en envoyer des
       requêtes SQL appropriées aux participants. Le fait de définir ce
       paramètre a le même effet que de définir temporairement la
       configuration <literal>max_retries = 0</literal>.
      </para>
     </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la transaction globale a été annulée avec succès, &false; sinon.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-ms.quickstart.xa_transactions">Démarrage rapide avec les
      transactions distribuées/XA</link>
    </member>
    <member>
     <link linkend="mysqlnd-ms.configuration">La configuration à l'exécution</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-ms-plugin-config-v2.xa">La configuration du stockage des statuts</link>
    </member>
    <member>
     <function>mysqlnd_ms_get_stats</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
