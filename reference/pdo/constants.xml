<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: eae19eb5fe0f5bebcbce382ea7a505cedeb5a883 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente le type de données booléen.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente le type de données NULL SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente le type de données INTEGER SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente les types de données CHAR, VARCHAR ou les autres types de données
     sous forme de chaîne de caractères SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicateur pour désigner une chaîne utilise le jeu de caractères national.
    </simpara>
    <simpara> 
     &php.version.added; 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicateur pour désigner une chaîne utilise le jeu de caractères normal.
    </simpara>
    <simpara> 
     &php.version.added; 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente le type de données "objet large" SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Représente un type de jeu de résultats. N'est actuellement pas pris en charge 
     par tous les pilotes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que le paramètre est un paramètre INOUT pour une
     procédure stockée. Vous devez utiliser l'opérateur OR avec
     un type de données explicite PDO::PARAM_*.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-default">
   <term>
    <constant>PDO::FETCH_DEFAULT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que le méthode de récupération par défaut doit être utilisé.
     Disponible à partir de PHP 8.0.7.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne
     en tant qu'objet PDORow avec les noms de variables correspondants aux noms des
     colonnes retournées dans le jeu de résultats. 
     <constant>PDO::FETCH_LAZY</constant> crée les noms
     des variables de l'objet uniquement lorsqu'ils sont utilisés.
     Non valide dans la méthode <methodname>PDOStatement::fetchAll</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par les noms des colonnes comme elles sont retournées
     dans le jeu de résultats correspondant. Si le jeu de résultats contient
     de multiples colonnes avec le même nom, 
     <constant>PDO::FETCH_ASSOC</constant> retourne une seule valeur
     par nom de colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par les noms des colonnes comme elles sont retournées
     dans le jeu de résultats correspondant. Si le jeu de résultats contient
     de multiples colonnes avec le même nom, 
     <constant>PDO::FETCH_NAMED</constant> retourne un
     tableau de valeurs par nom de colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par le numéro des colonnes comme elles sont
     retournées dans le jeu de résultats correspondant, en commençant à 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans 
     un tableau indexé par les noms des colonnes ainsi que leurs numéros,
     comme elles sont retournées dans le jeu de résultats correspondant, en 
     commençant à 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne
     dans un objet avec les noms de propriétés correspondant aux noms
     des colonnes comme elles sont retournées dans le jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner &true; et assigner
     les valeurs des colonnes du jeu de résultats aux variables PHP auxquelles
     elles sont liées avec la méthode 
     <methodname>PDOStatement::bindParam</methodname> ou la méthode
     <methodname>PDOStatement::bindColumn</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner uniquement une seule
     colonne demandée depuis la prochaine ligne du jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner une
     nouvelle instance de la classe demandée, liant les colonnes
     aux membres de la classe.
    </simpara>
    <note>
     <simpara>
      La méthode magique
      <link linkend="language.oop5.overloading.members"><methodname>__set</methodname></link>
      est appelée si le membre n'existe pas dans la classe utilisée.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit mettre à jour une instance existante
     de la classe demandée, liant les colonnes aux propriétés nommées dans la classe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Permet de personnaliser la façon dont sont traitées les données à la volée
     (uniquement valide dans la méthode <methodname>PDOStatement::fetchAll</methodname>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Groupe le résultat par les valeurs. Habituellement combiné avec
     <constant>PDO::FETCH_COLUMN</constant> ou
     <constant>PDO::FETCH_KEY_PAIR</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère uniquement les valeurs uniques.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère un résultat sur deux colonnes dans un tableau où la première colonne
     est la clé, et la seconde colonne est la valeur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Détermine le nom de la classe depuis la valeur de la première colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Identique à <constant>PDO::FETCH_INTO</constant>, 
     mais l'objet est fourni sous la forme d'une chaîne linéarisée.
     Le constructeur de la classe n'est jamais appelé si ce drapeau est défini.
     Obsolète à partir de PHP 8.1.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Appelle le constructeur avant de définir les propriétés.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO_ATTR_AUTOCOMMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si la valeur vaut &false;, PDO tente de désactiver l'autovalidation
     lorsque la connexion commence une transaction.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Définir la taille de la prérécupération vous permet d'accroître les performances
     de votre application. Toutes les combinaisons bases de données / pilotes ne
     prennent pas en charge cette fonctionnalité. Ceci accroît les performances au
     détriment de la consommation de mémoire vive.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Définit la valeur d'attente en secondes pour les communications
     avec la base de données.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Voir la section sur les <link linkend="pdo.error-handling">erreurs
      et la gestion des erreurs</link> pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne des informations sur la version de
     la base de données à laquelle PDO est connecté.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne des informations sur la version
     de la librairie cliente utilisée par PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne quelques méta-informations
     sur le serveur de base de données auquel PDO est connecté.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Force les noms des colonnes dans une casse spécifiée par les constantes
     <literal>PDO::CASE_*</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère ou définit le nom à utiliser pour un curseur. Très utile lors
     de l'utilisation de curseurs défilables et des mises à jour positionnées.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sélectionne le type de curseur. PDO supporte actuellement soit
     <constant>PDO::CURSOR_FWDONLY</constant>, soit
     <constant>PDO::CURSOR_SCROLL</constant>.  Conservez
     <constant>PDO::CURSOR_FWDONLY</constant> tant que vous savez que vous avez besoin
     d'un curseur défilable.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Retourne le nom du pilote.
    </simpara>
    <para>
     <example><title>Utilisation de <constant>PDO::ATTR_DRIVER_NAME</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
   echo "Utilisation de mysql ; fait quelque chose de spécifique à mysql ici\n";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Convertit les chaînes vides en valeurs NULL SQL dans les données récupérées.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
     (<type>mixed</type>)
   </term>
   <listitem>
    <simpara>
     Demande une connexion persistante, plutôt que de créer une nouvelle connexion.
     Voir les <link linkend="pdo.connections">connexions et le gestionnaire de connexion</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ajoute le contenu du catalogue de noms dans chaque nom de colonne retourné
     dans le jeu de résultat. Le catalogue de noms et les noms de colonnes
     sont séparés par un point (.). Le prise en charge de cet attribut n'est faite
     par tous les pilotes ; il peut ne pas être disponible pour votre pilote.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ajoute le contenu de la table de noms dans chaque nom de colonne retourné
     dans le jeu de résultats. La table de noms et les noms de colonnes sont
     séparés par un point (.). La prise en charge de cet attribut n'est pas faite
     par tous les pilotes ; il peut ne pas être disponible pour votre pilote.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Force toutes les valeurs lues pour être traitées comme des chaînes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Définit la longueur maximale du nom de colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Définit le type de paramètre de chaîne par défaut, cela peut être <constant>PDO::PARAM_STR_NATL</constant> 
     ou <constant>PDO::PARAM_STR_CHAR</constant>.
    </simpara>
    <simpara>
     &php.version.added; 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     N'envoie pas d'erreur ni d'exception si une erreur survient. Le développeur
     doit explicitement vérifier les erreurs. C'est le mode par défaut.
     Voir les <link linkend="pdo.error-handling">erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Envoie une erreur de niveau <constant>E_WARNING</constant> si une erreur survient.
     Voir les <link linkend="pdo.error-handling">erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Lance une exception <classname>PDOException</classname> si une erreur survient.
     Voir les <link linkend="pdo.error-handling">erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Laisse les noms de colonnes comme retournés par le pilote de base de données.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara> 
     Force les noms de colonnes en minuscules.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Force les noms des colonnes en majuscules.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la prochaine ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne précédente d'un jeu de résultats. Valide seulement pour les 
     curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la première ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la dernière ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne demandée par un numéro de ligne d'un jeu de résultats. 
     Valide seulement pour les curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne demandée par une position relative à la position courante
     du curseur d'un jeu de résultats. Valide seulement pour les curseurs défilables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Crée un objet <classname>PDOStatement</classname> avec un
     curseur uniquement de retour. C'est le choix par défaut pour
     le curseur, car il est rapide et l'accès aux données est commun
     pour les masques en PHP.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Crée un objet <classname>PDOStatement</classname> avec un
     curseur défilable. Passez la constante <literal>PDO::FETCH_ORI_*</literal>
     pour contrôler les lignes récupérées du jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara> 
     Correspond à SQLSTATE '00000', ce qui signifie que la requête SQL a réussi
     sans erreur, ni avertissement. Cette constante est utile lorsque vous utilisez
     <methodname>PDO::errorCode</methodname> ou
     <methodname>PDOStatement::errorCode</methodname> pour déterminer si une erreur
     est survenue. Cependant, vous devez déjà savoir si c'est le cas en examinant
     le code retourné par la méthode qui a lancé l'erreur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Alloue un événement
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Supprime un événement
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Toujours faire un déclencheur avant l'exécution d'une requête préparée.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un déclencheur de sous-séquence avant 
     l'exécution d'une requête préparée.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un déclencheur avant de récupérer un résultat
     d'un jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un déclencheur de sous-séquence avant de récupérer
     un résultat d'un jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un déclencheur lors de l'enregistrement des paramètres
     liés permettant au pilote de normaliser le nom des paramètres.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.sqlite_deterministic">
   <term>
    <constant>PDO::SQLITE_DETERMINISTIC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Spécifie qu'une fonction créée avec <methodname>PDO:: PDO::sqliteCreateFunction</methodname>
     est déterministe, c'est-à-dire qu'elle retourne toujours le même résultat 
     en raison des mêmes entrées dans une seule instruction SQL. (&php.version.added; 7.1.4.)
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
