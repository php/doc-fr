<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fb2b760cac71413ec55fe403086586fd1560a002 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
 <variablelist role="constant_list">
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active l'utilisation d'un socket Unix abstrait à la place
     d'établir une connexion TCP à un hôte et définit le chemin donné
     en <type>string</type>. Cette option partage les mêmes sémantiques
     que <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Ces deux options
     partagent le même stockage et donc une seule d'entre elles peut être
     définie par un gestionnaire.
     Disponible depuis PHP 7.3.0 et cURL 7.53.0.
    </para>
   </listitem>
  </varlistentry>
    <varlistentry xml:id="constant.curlopt-accept-encoding">
   <term>
    <constant>CURLOPT_ACCEPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec le contenu
     de l'en-tête <literal>Accept-Encoding:</literal> envoyé dans une requête HTTP.
     Définir à &null; pour désactiver l'envoi de l'en-tête <literal>Accept-Encoding:</literal>.
     Par défaut à &null;.
     Disponible depuis cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accepttimeout-ms">
   <term>
    <constant>CURLOPT_ACCEPTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de maximum de millisecondes à attendre pour qu'un serveur
     se reconnecte à cURL lorsqu'une connexion FTP active est utilisée.
     Par défaut à <literal>60000</literal> millisecondes.
     Disponible depuis cURL 7.24.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-address-scope">
   <term>
    <constant>CURLOPT_ADDRESS_SCOPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identifiant de portée à utiliser lors de la connexion à une adresse IPv6.
     Cette option accepte n'importe quelle valeur qui peut être convertie en un <type>int</type> valide.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>string</type> avec le nom de fichier pour que cURL utilise comme cache Alt-Svc pour lire le contenu du cache existant
     et éventuellement le réécrire après un transfert, à moins que <constant>CURLALTSVC_READONLYFILE</constant>
     ne soit défini via <constant>CURLOPT_ALTSVC_CTRL</constant>.
     Disponible depuis PHP 8.2.0 et cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Peuple le masque de bits avec le bon ensemble de fonctionnalités pour indiquer à cURL comment gérer Alt-Svc pour les
     transferts utilisant ce gestionnaire. cURL n'accepte que les en-têtes Alt-Svc sur HTTPS. Il ne complétera également
     une demande à une origine alternative que si cette origine est correctement hébergée sur HTTPS.
     Définir un bit activera le moteur alt-svc.
     Défini sur l'une des constantes
     <constant>CURLALTSVC_<replaceable>*</replaceable></constant>.
     Par défaut, la gestion Alt-Svc est désactivée.
     Disponible depuis PHP 8.2.0 et cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-append">
   <term>
    <constant>CURLOPT_APPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Mettre cette option à <literal>1</literal> fera que les téléchargements FTP
     ajoutant au fichier distant au lieu de l'écraser.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour définir automatiquement le champ <literal>Referer:</literal> dans
     les requêtes où il suit une redirection <literal>Location:</literal>.
     Par défaut, la valeur est <literal>0</literal>.

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Apporte une authentification de signature AWS V4 sur l'en-tête HTTP(S) en tant que <type>string</type>.
     Cette option remplace tout autre type d'authentification qui a été défini dans
     <constant>CURLOPT_HTTPAUTH</constant>. Cette méthode ne peut pas être combinée avec d'autres types d'authentification.
     Disponible depuis PHP 8.2.0 et cURL 7.75.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Cette constante n'est plus utilisée à partir de PHP 5.5.0.
     Obsolète à partir de PHP 8.4.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une taille de tampon à utiliser pour chaque lecture. Il n'y a aucune garantie
     que cette demande sera satisfaite, cependant.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Par défaut, la valeur est <constant>CURL_MAX_WRITE_SIZE</constant> (actuellement, 16kB).
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom d'un fichier contenant un ou plusieurs certificats pour vérifier le
     pair avec. Cela n'a de sens que lorsqu'il est utilisé en combinaison avec
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Peut nécessiter un chemin absolu.
     Disponible à partir de cURL 7.4.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom d'un fichier PEM contenant un ou plusieurs certificats pour vérifier le pair avec.
     Cette option remplace <constant>CURLOPT_CAINFO</constant>.
     Disponible à partir de PHP 8.2.0 et de cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec un répertoire qui contient plusieurs certificats CA. Utilisez cette option
     en combinaison avec <constant>CURLOPT_SSL_VERIFYPEER</constant>.
     Disponible à partir de cURL 7.9.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le temps maximum en secondes pendant lequel un magasin de certificats CA
     mis en cache en mémoire peut être conservé et réutilisé pour de nouvelles connexions.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Par défaut, la valeur est <literal>86400</literal> (24 heures).
     Disponible à partir de PHP 8.3.0 et cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour sortir des informations sur le certificat SSL sur <constant>STDERR</constant>
     sur les transferts sécurisés.
     Nécessite <constant>CURLOPT_VERBOSE</constant> pour avoir un effet.
     Par défaut, la valeur est &false;.
     Disponible à partir de cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes à attendre lors de la tentative de connexion. Utilisez 0 pour
     attendre indéfiniment.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Par défaut, la valeur est <literal>300</literal>.
     Disponible à partir de cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de millisecondes à attendre lors de la tentative de connexion.
     Utilisez <literal>0</literal> pour attendre indéfiniment.
     Si cURL est compilé pour utiliser le résolveur de noms système standard, cette
     partie de la connexion utilisera toujours une résolution à la seconde complète pour
     les délais d'attente avec un délai d'attente minimum autorisé d'une seconde.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Par défaut, la valeur est <literal>300000</literal>.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour indiquer à la librairie de ne pas effectuer d'authentification de proxy
     et de configuration de connexion requise, mais pas de transfert de données. Cette option est implémentée pour
     HTTP, SMTP et POP3.
     Par défaut, la valeur est &false;.
     Disponible depuis cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Connecte à un hôte et un port spécifiques au lieu de l'hôte et du port de l'URL.
     Accepte un <type>array</type> de <type>string</type>s au format
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Disponible depuis PHP 7.0.7 et cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le contenu de l'en-tête <literal>"Cookie: "</literal> à utiliser
     dans la requête HTTP.
     Il est à noter que plusieurs cookies sont séparés par un point-virgule suivi
     d'un espace (par exemple, <literal>fruit=apple; colour=red</literal>).
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom du fichier contenant les données des cookies.
     Le fichier de cookies peut être au format Netscape, ou simplement des en-têtes HTTP classiques
     vidés dans un fichier.
     Si le nom est une chaîne vide, aucun cookie n'est chargé, mais la gestion des cookies
     est toujours activée.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom du fichier pour sauvegarder tous les cookies internes lorsque
     le gestionnaire destructeur est appelé.
     Disponible à partir de cURL 7.9.0.
     <warning>
      <simpara>
       Depuis PHP 8.0.0, <function>curl_close</function> est une opération nulle
       et ne détruit <emphasis>pas</emphasis> le gestionnaire.
       Si les cookies doivent être écrits avant que le gestionnaire ne soit automatiquement
       détruite, appelez <function>unset</function> sur le gestionnaire.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> de cookies (c'est-à-dire une seule ligne dans le format Netscape/Mozilla, ou un en-tête
     Set-Cookie HTTP régulier) ajoute ce cookie unique au stockage interne des cookies.
     <simplelist type="inline">
      <member>
       <literal>ALL</literal>
       efface tous les cookies stockés en mémoire
      </member>
      <member>
       <literal>SESS</literal>
       efface tous les cookies de session stockés en mémoire
      </member>
      <member>
       <literal>FLUSH</literal>
       écrit tous les cookies connus dans le fichier spécifié par <constant>CURLOPT_COOKIEJAR</constant>
      </member>
      <member>
       <literal>RELOAD</literal>
       charge tous les cookies à partir des fichiers spécifiés par <constant>CURLOPT_COOKIEFILE</constant>
      </member>
     </simplelist>.
     Disponible à partir de cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour marquer ceci comme une nouvelle "session" de cookie. Cela forcera cURL
     à ignorer tous les cookies qu'il est sur le point de charger qui sont des "cookies de session"
     de la session précédente. Par défaut, cURL stocke et charge toujours
     tous les cookies, indépendamment du fait qu'ils soient des cookies de session ou non.
     Les cookies de session sont des cookies sans date d'expiration et ils sont censés être vivants
     et existants pour cette "session" uniquement.
     Disponible à partir de cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour convertir les fins de ligne Unix en fins de ligne CRLF
     sur les transferts.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlfile">
   <term>
    <constant>CURLOPT_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>string</type> nommant un fichier avec la concaténation du
     CRL (Certificate Revocation List) (au format PEM)
     à utiliser dans la validation du certificat qui se produit pendant l'échange SSL.
     Lorsque cUrl est compilé pour utiliser GnuTLS,
     il n'y a aucun moyen d'influencer l'utilisation de CRL passée
     pour aider dans le processus de vérification.
     Lorsque cUrl est compilé pour utiliser OpenSSL,
     <literal>X509_V_FLAG_CRL_CHECK</literal>
     et <literal>X509_V_FLAG_CRL_CHECK_ALL</literal> sont tous deux définis,
     exigeant la vérification de la CRL contre tous les éléments de la chaîne de certificats
     si un fichier CRL est passé.
     Il est également à noter que <constant>CURLOPT_CRLFILE</constant> implique
     <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>
     à partir de cURL 7.71.0 en raison d'un bogue OpenSSL.
     Disponible depuis cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une méthode de requête personnalisée à utiliser à la place de
     <literal>GET</literal> ou <literal>HEAD</literal> lors de la réalisation
     d'une requête HTTP. Ceci est utile pour effectuer
     des requêtes HTTP plus obscures comme <literal>DELETE</literal> ou autres.
     Les valeurs valides sont des choses comme <literal>GET</literal>,
     <literal>POST</literal>, <literal>CONNECT</literal> et ainsi de suite;
     c'est-à-dire ne pas entrer une ligne de requête HTTP entière ici. Par exemple,
     entrer <literal>GET /index.html HTTP/1.0\r\n\r\n</literal>
     serait incorrect.
     Cette option accepte une <type>string</type> ou &null;.
     Disponible à partir de cURL 7.1.0.
     <note>
      <para>
       Ne pas faire cela sans vous assurer que le serveur supporte la méthode de requête
       personnalisée en premier.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le protocole par défaut à utiliser si l'URL manque d'un nom de schéma.
     Disponible depuis PHP 7.0.7 et cURL 7.45.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dirlistonly">
   <term>
    <constant>CURLOPT_DIRLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit cette option à <literal>1</literal> pour avoir des effets différents
     basés sur le protocole avec lequel elle est utilisée.
     Les URLs basées sur FTP et SFTP listeront uniquement les noms de fichiers dans un répertoire.
     POP3 listera le message ou les messages de courrier électronique sur le serveur POP3.
     Pour FILE, cette option n'a pas d'effet
     car les répertoires sont toujours listés dans ce mode.
     Utiliser cette option avec <constant>CURLOPT_WILDCARDMATCH</constant>
     empêchera ce dernier d'avoir un quelconque effet.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ne pas autoriser les URL qui incluent un nom d'utilisateur.
     Les noms d'utilisateur sont autorisés par défaut.
     Disponible depuis PHP 7.3.0 et cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes à conserver les entrées DNS en mémoire. Cette
     option est définie par défaut à <literal>120</literal> (2 minutes).
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le nom de l'interface réseau que le résolveur DNS doit lier.
     Cela doit être un nom d'interface (pas une adresse).
     Cette option accepte une <type>string</type> ou &null;.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'adresse IPv4 locale à laquelle le résolveur doit se lier.
     L'argument doit contenir une seule adresse IPv4 numérique.
     Cette option accepte une <type>string</type> ou &null;.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'adresse IPv6 locale à laquelle le résolveur doit se lier.
     L'argument doit contenir une seule adresse IPv6 numérique.
     Cette option accepte une <type>string</type> ou &null;.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-servers">
   <term>
    <constant>CURLOPT_DNS_SERVERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>string</type> avec une liste séparée par des virgules de serveurs DNS à utiliser
     au lieu du système par défaut
     (par exemple : <literal>192.168.1.100,192.168.1.101:8080</literal>).
     Disponible depuis cURL 7.24.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour mélanger l'ordre de toutes les adresses retournées afin qu'elles soient utilisées
     dans un ordre aléatoire, lorsqu'un nom est résolu et que plus d'une adresse IP est retournée.
     Cela peut entraîner l'utilisation d'IPv4 avant IPv6 ou vice versa.
     Disponible depuis PHP 7.3.0 et cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour utiliser un cache DNS global. Cette option n'est pas thread-safe.
     Elle est activée par défaut si PHP est compilé pour une utilisation non threadée
     (CLI, FCGI, Apache2-Prefork, etc.).
     Disponible à partir de cURL 7.9.3 et obsolète à partir de cURL 7.11.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>2</literal> pour vérifier le champ de nom du certificat SSL du serveur DNS-over-HTTPS par rapport au nom d'hôte.
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>1</literal> pour activer et <literal>0</literal> pour désactiver
     la vérification de l'authenticité du certificat SSL du serveur DNS-over-HTTPS.
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>1</literal> pour activer et <literal>0</literal> pour désactiver
     la vérification de l'état du certificat du serveur DNS-over-HTTPS en utilisant
     l'extension TLS "Certificate Status Request" (OCSP stapling).
     Disponible depuis PHP 8.2.0 et cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Apporte l'URL DNS-over-HTTPS.
     Cette option accepte une <type>string</type> ou &null;.
     Disponible depuis PHP 8.1.0 et cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Comme <constant>CURLOPT_RANDOM_FILE</constant> excepté que vous passez une chaîne qui contient un nom
     de fichier vers le socket Entropy Gathering Daemon.
     Disponible à partir de cURL 7.7.0 et obsolète à partir de cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu des en-têtes <literal>Accept-Encoding: </literal> en tant que <type>string</type>.
     Cela permet de décoder la réponse.
     Les encodages supportés sont
     <simplelist type="inline">
      <member>identity</member>
      <member>deflate</member>
      <member>"gzip"</member>
     </simplelist>.
     Si une chaîne vide, <type>string</type>,
     est définie, un en-tête contenant tous les types d'encodage supportés est envoyé.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le délais d'attente pour les réponses <literal>Expect: 100-continue</literal> en millisecondes.
     Par défaut, <literal>1000</literal> millisecondes.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour échouer verbalement si le code HTTP retourné
     est supérieur ou égal à <literal>400</literal>. Le comportement par défaut est de retourner
     la page normalement, en ignorant le code.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un descripteur de fichier <type>resource</type>
     vers le fichier dans lequel le transfert doit être écrit.
     La valeur par défaut est <constant>STDOUT</constant> (la fenêtre du navigateur).
     Disponible à partir de cURL 7.1.0 et obsolète à partir de cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour tenter de récupérer la date de modification
     du document distant. Cette valeur peut être récupérée en utilisant l'option
     <constant>CURLINFO_FILETIME</constant> avec
     <function>curl_getinfo</function>.
     Disponible à partir de cURL 7.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fnmatch-function">
   <term>
    <constant>CURLOPT_FNMATCH_FUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>callable</type> qui sera utilisé pour la correspondance de caractères génériques.
     La signature de la fonction de rappel doit être :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pattern</parameter></term>
       <listitem>
        <simpara>
         La chaîne de caractères génériques.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>string</parameter></term>
       <listitem>
        <simpara>
         Le <type>string</type> sur lequel exécuter la correspondance de caractères génériques.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     La fonction de rappel doit renvoyer
     <constant>CURL_FNMATCHFUNC_MATCH</constant> si le modèle correspond à la <type>string</type>,
     <constant>CURL_FNMATCHFUNC_NOMATCH</constant> si ce n'est pas le cas
     ou <constant>CURL_FNMATCHFUNC_FAIL</constant> si une erreur s'est produite.
     Disponible depuis cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour suivre tous les en-têtes
     <literal>Location: </literal> envoyés par le serveur dans la réponse HTTP.
     Voir aussi <constant>CURLOPT_MAXREDIRS</constant>.
     Cette constante n'est pas disponible lorsque <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
     est activé.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour forcer à fermer explicitement la connexion
     lorsque le processus est terminé, elle ne sera donc pas mise en cache pour réutilisation.
     Disponible à partir de cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour forcer l'utilisation d'une nouvelle connexion
     au lieu d'une connexion mise en cache.
     Disponible à partir de cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour ajouter au fichier distant au lieu de
     l'écraser.
     Disponible à partir de cURL 7.1.0 et obsolète à partir de cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un alias de
     <constant>CURLOPT_TRANSFERTEXT</constant>. Utilisez plutôt cela.
     Disponible à partir de cURL 7.1, obsolète à partir de cURL 7.11.1
     et dernière fois disponible dans cURL 7.15.5.
     Supprimé à partir de PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour seulement lister les noms d'un
     répertoire FTP.
     Disponible à partir de cURL 7.1.0 et obsolète à partir de cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> qui sera utilisée pour obtenir l'adresse IP à utiliser pour l'instruction FTP <literal>PORT</literal>.
     L'instruction <literal>PORT</literal> indique au serveur distant de se connecter à notre adresse IP spécifiée.
     Le <type>string</type> peut être une adresse IP simple, un nom d'hôte, un nom d'interface réseau (sous Unix),
     ou juste un <literal>-</literal> pour utiliser l'adresse IP par défaut du système.
     Cette option accepte une <type>string</type> ou &null;.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir la méthode d'authentification FTP sur SSL (si activée) sur l'une des
     constantes <constant>CURLFTPAUTH_<replaceable>*</replaceable></constant>.
     La valeur par défaut est <constant>CURLFTPAUTH_DEFAULT</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-account">
   <term>
    <constant>CURLOPT_FTP_ACCOUNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>string</type> qui sera envoyé comme information de compte sur FTP
     (utiliser la commande <literal>ACCT</literal>) après que le nom d'utilisateur et le mot de passe aient été fournis
     au serveur.
     Définir à &null; pour désactiver l'envoi de l'information de compte.
     Par défaut à &null;.
     Disponible depuis cURL 7.13.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-alternative-to-user">
   <term>
    <constant>CURLOPT_FTP_ALTERNATIVE_TO_USER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer un <type>string</type> qui sera utilisé pour essayer de s'authentifier sur FTP
     si la négociation <literal>USER/PASS</literal> échoue.
     Disponible depuis cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour créer les répertoires manquants lorsqu'une opération FTP
     rencontre un chemin qui n'existe pas actuellement.
     Disponible à partir de cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Indique à curl quelle méthode utiliser pour atteindre un fichier sur un serveur FTP(S).
     Les valeurs possibles sont
     l'une des constantes <constant>CURLFTPMETHOD_<replaceable>*</replaceable></constant>.
     La valeur par défaut est <constant>CURLFTPMETHOD_MULTICWD</constant>.
     Disponible depuis cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-response-timeout">
   <term>
    <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le délai en secondes que cURL attendra pour une réponse d'un serveur FTP
     Cette option remplace <constant>CURLOPT_TIMEOUT</constant>.
     Cette option accepte n'importe quelle valeur qui peut être convertie en un <type>int</type> valide.
     Disponible depuis cURL 7.10.8 et dépréciée depuis cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-skip-pasv-ip">
   <term>
    <constant>CURLOPT_FTP_SKIP_PASV_IP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si cette option est définie à <literal>1</literal>,
     cURL n'utilisera pas l'adresse IP que le serveur suggère
     dans sa réponse 227 à la commande <literal>PASV</literal> de cURL
     mais utilisera l'adresse IP qu'il a utilisée pour la connexion.
     Le numéro de port reçu de la réponse 227 ne sera pas ignoré par cURL.
     Par défaut à <literal>1</literal> depuis cURL 7.74.0
     et <literal>0</literal> avant cela.
     Disponible depuis cURL 7.15.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponible à partir de cURL 7.11.0 et obsolète à partir de cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl-ccc">
   <term>
    <constant>CURLOPT_FTP_SSL_CCC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Cette option fait en sorte que cURL utilise CCC (Clear Command Channel)
     qui arrête la couche SSL/TLS après l'authentification
     rendant le reste de la communication du canal de contrôle non chiffrée.
     Utiliser une des constantes <constant>CURLFTPSSL_CCC_<replaceable>*</replaceable></constant>.
     Par défaut à <constant>CURLFTPSSL_CCC_NONE</constant>.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour utiliser <literal>EPRT</literal> (et <literal>LPRT</literal>) lors des téléchargements FTP actifs.
     Définir sur &false; pour désactiver <literal>EPRT</literal> et <literal>LPRT</literal> et utiliser uniquement <literal>PORT</literal>.
     Disponible à partir de cURL 7.10.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour essayer d'abord une commande <literal>EPSV</literal> pour les transferts FTP avant de revenir à <literal>PASV</literal>.
     Définir sur &false; pour désactiver <literal>EPSV</literal>.
     Disponible à partir de cURL 7.9.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-pret">
   <term>
    <constant>CURLOPT_FTP_USE_PRET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à <literal>1</literal> pour envoyer une commande <literal>PRET</literal> avant
     <literal>PASV</literal> (et <literal>EPSV</literal>).
     N'a aucun effet lors de l'utilisation du mode de transfert FTP actif.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-gssapi-delegation">
   <term>
    <constant>CURLOPT_GSSAPI_DELEGATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à <constant>CURLGSSAPI_DELEGATION_FLAG</constant>
     pour permettre la délégation inconditionnelle des informations d'identification GSSAPI.
     Définir à <constant>CURLGSSAPI_DELEGATION_POLICY_FLAG</constant>
     pour déléguer uniquement si le drapeau <literal>OK-AS-DELEGATE</literal> est défini
     dans le ticket de service.
     Par défaut à <constant>CURLGSSAPI_DELEGATION_NONE</constant>.
     Disponible depuis cURL 7.22.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une avance pour IPv6 pour l'algorithme Happy Eyeballs. Happy Eyeballs tente
     de se connecter à la fois aux adresses IPv4 et IPv6 pour les hôtes double-stack,
     en préférant IPv6 en premier pour les millisecondes de délai d'attente.
     Par défaut à <constant>CURL_HET_DEFAULT</constant>, qui est actuellement de 200 millisecondes.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible depuis PHP 7.3.0 et cURL 7.59.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour envoyer un en-tête de protocole HAProxy <literal>PROXY</literal> v1 au début de la connexion.
     L'action par défaut est de ne pas envoyer cet en-tête.
     Disponible depuis PHP 7.3.0 et cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour inclure les en-têtes dans la sortie envoyée au rappel
     défini par <constant>CURLOPT_WRITEFUNCTION</constant>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>headerData</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>headerData</parameter></term>
       <listitem>
        <simpara>
         Les données d'en-tête qui doivent être écrites par le rappel.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Le rappel doit renvoyer le nombre d'octets écrits.
     Disponible à partir de cURL 7.7.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Envoyer les en-têtes HTTP à la fois au proxy et à l'hôte ou séparément.
     Les valeurs possibles sont n'importe lequel des
     <constant>CURLHEADER_<replaceable>*</replaceable></constant> constants.
     Défaut à <constant>CURLHEADER_SEPARATE</constant> depuis cURL
     7.42.1, et <constant>CURLHEADER_UNIFIED</constant> avant cela.
     Disponible à partir de PHP 7.0.7 et cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <type>string</type> avec le nom de fichier de cache HSTS (HTTP Strict Transport Security)
     ou &null; pour permettre HSTS sans lire ni écrire dans un fichier
     et effacer la liste des fichiers pour lire les données HSTS.
     Disponible à partir de PHP 8.2.0 et cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un masque de bits des fonctionnalités HSTS (HTTP Strict Transport Security)
     définies par les <constant>CURLHSTS_<replaceable>*</replaceable></constant> constants.
     Disponible à partir de PHP 8.2.0 et cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si on autorise les réponses HTTP/0.9. Par défaut à &false; depuis cURL 7.66.0;
     avant, c'était &true;.
     Disponible depuis PHP 7.3.15 et 7.4.3, respectivement, et cURL 7.64.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>array</type> de réponses HTTP <literal>200</literal> qui seront considérées comme des réponses valides et non comme des erreurs.
     Disponible depuis cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits des méthodes d'authentification HTTP à utiliser. Les options sont :
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_DIGEST</constant></member>
      <member><constant>CURLAUTH_GSSNEGOTIATE</constant></member>
      <member><constant>CURLAUTH_NTLM</constant></member>
      <member><constant>CURLAUTH_AWS_SIGV4</constant></member>
      <member><constant>CURLAUTH_ANY</constant></member>
      <member><constant>CURLAUTH_ANYSAFE</constant></member>
     </simplelist>.
     Si plus d'une méthode est utilisée, cURL interrogera le serveur pour voir
     quelles méthodes il supporte et choisira la meilleure.
     <constant>CURLAUTH_ANY</constant> définit tous les bits. cURL sélectionnera automatiquement
     celle qu'il trouve la plus sécurisée.
     Disponible à partir de cURL 7.10.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour réinitialiser la méthode de requête HTTP à <literal>GET</literal>. Comme <literal>GET</literal> est la valeur par défaut, cela n'est nécessaire que si la requête
     de requête a été changée.
     Disponible à partir de cURL 7.8.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>array</type> de champs d'en-tête HTTP à définir. Ce tableau doit être au format
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour tunneliser à travers un proxy HTTP donné.
     Disponible à partir de cURL 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour désactiver le décodage automatique du contenu de réponse.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-transfer-decoding">
   <term>
    <constant>CURLOPT_HTTP_TRANSFER_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si définit à <literal>0</literal>, le décodage de transfert est désactivé.
     Si définit à <literal>1</literal>, le décodage de transfert est activé.
     cURL fait le décodage de transfert par morceaux par défaut
     sauf si cette option est définie à <literal>0</literal>.
     Par défaut à <literal>1</literal>.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur l'une des constantes <constant>CURL_HTTP_VERSION_<replaceable>*</replaceable></constant>
     pour que cURL utilise la version HTTP spécifiée.
     Disponible à partir de cURL 7.9.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ignore-content-length">
   <term>
    <constant>CURLOPT_IGNORE_CONTENT_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si définit à <literal>1</literal>,
     ignore l'en-tête <literal>Content-Length</literal> dans la réponse HTTP
     et ignore la demande ou la dépendance de celui-ci pour les transferts FTP.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un handle de fichier <type>resource</type> vers le fichier à partir duquel le transfert doit être lu lors du téléchargement.
     Disponible à partir de cURL 7.1.0 et déprécié à partir de cURL 7.9.7.
     Utilisez <constant>CURLOPT_READDATA</constant> à la place.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La taille attendue, en octets, du fichier lors de l'envoi d'un fichier
     à un site distant. Il est à noter que l'utilisation de cette option n'empêchera pas
     cURL d'envoyer plus de données, car ce qui est envoyé dépend exactement de
     <constant>CURLOPT_READFUNCTION</constant>.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur une <type>string</type> contenant le nom de l'interface réseau sortante à utiliser.
     Cela peut être un nom d'interface, une adresse IP ou un nom d'hôte.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Autorise une application à sélectionner le type d'adresses IP à utiliser lors de
     la résolution des noms d'hôtes. Ceci est seulement intéressant lors de l'utilisation de noms d'hôtes qui
     résolvent des adresses en utilisant plus d'une version d'IP.
     Définir sur l'une des constantes 
     <constant>CURL_IPRESOLVE_<replaceable>*</replaceable></constant>.
     La valeur par défaut est <constant>CURL_IPRESOLVE_WHATEVER</constant>.
     Disponible depuis cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert">
   <term>
    <constant>CURLOPT_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si définit à un <type>string</type> nommant un fichier contenant un certificat CA au format PEM,
     une vérification supplémentaire est effectuée contre le certificat du pair
     pour vérifier que l'émetteur est bien celui associé
     avec le certificat fourni par l'option.
     Pour que le résultat de la vérification soit considéré comme un échec,
     cette option doit être utilisée en combinaison avec l'option
     <constant>CURLOPT_SSL_VERIFYPEER</constant>.
     Disponible depuis cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passer une <type>string</type> contenant des données binaires d'un certificat SSL CA au format PEM.
     Si cette option est définie, une vérification supplémentaire du certificat de l'entité (peer) est effectuée
     pour vérifier que l'émetteur est celui associé au certificat fourni par cette option.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à &true; pour continuer à envoyer le corps de la requête si le code HTTP renvoyé est supérieur ou égal à <literal>300</literal>.
     L'action par défaut consiste à arrêter l'envoi
     et de fermer le flux ou la connexion. Convient pour l'authentification NTLM manuelle.
     La plupart des applications n'ont pas besoin de cette option.
     Disponible depuis PHP 7.3.0 et cURL 7.51.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à une <type>string</type> avec le mot de passe requis pour utiliser le <constant>CURLOPT_SSLKEY</constant>
     ou <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Définir cette option à &null; désactive l'utilisation d'un mot de passe pour ces options.
     Disponible depuis cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La sécurité KRB4 (Kerberos 4). Toute valeur <type>string</type>suivante
     (dans l'ordre du moins au plus puissant) est valide :
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>.
     Si la <type>string</type> ne correspond pas à l'une de ces valeurs,
     <literal>private</literal> est utilisé. Définir cette option à &null;
     désactivera la sécurité KRB4. Actuellement, la sécurité KRB4 ne fonctionne
     qu'avec les transactions FTP.
     Disponible à partir de cURL 7.3.0 et obsolète à partir de cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krblevel">
   <term>
    <constant>CURLOPT_KRBLEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le niveau de sécurité Kerberos pour FTP et active également la prise en charge de Kerberos.
     Cela doit être défini sur l'une des <type>string</type>s suivantes :
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>
     Si l'option <type>string</type> est définie mais ne correspond à aucune de ces valeurs,
     <literal>private</literal> est utilisé.
     Définir cette option à &null; désactivera la prise en charge de Kerberos pour FTP.
     Par défaut à &null;.
     Disponible depuis cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localport">
   <term>
    <constant>CURLOPT_LOCALPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le numéro de port local du socket utilisé pour la connexion.
     Cette option acccepte n'importe quelle valeur qui peut être convertie en un <type>int</type> valide.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localportrange">
   <term>
    <constant>CURLOPT_LOCALPORTRANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre d'essaie que cURL fait pour trouver un numéro de port local fonctionnel,
     commençant par celui défini avec <constant>CURLOPT_LOCALPORT</constant>.
     Cette option accepte n'importe quelle valeur qui peut être convertie en un <type>int</type> valide.
     Par défaut à <literal>1</literal>.
     Disponible depuis cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Peut être utilisé pour définir des options de connexion spécifiques au protocole, telles que le
     mécanisme d'authentification préféré via <literal>AUTH=NTLM</literal> ou <literal>AUTH=*</literal>,
     et doit être utilisé en conjonction avec l'option
     <constant>CURLOPT_USERNAME</constant>.
     Disponible depuis PHP 7.0.7 et cURL 7.34.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La vitesse de transfert, en octets par seconde, que le transfert doit être
     inférieur pendant le compte de <constant>CURLOPT_LOW_SPEED_TIME</constant>
     secondes avant que PHP ne considère le transfert trop lent et l'interrompe.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre de secondes que la vitesse de transfert doit être inférieure
     à <constant>CURLOPT_LOW_SPEED_LIMIT</constant> avant que PHP ne considère
     le transfert trop lent et l'interrompe.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-auth">
   <term>
    <constant>CURLOPT_MAIL_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec l'adresse d'authentification (identité)
     d'un message soumis qui est relayé à un autre serveur.
     Cette adresse ne doit pas être spécifiée dans une paire de chevrons
     (<literal>&gt;&lt;</literal>).
     Si un <type>string</type> vide est utilisé, alors une paire de chevrons est envoyée par cURL
     comme requis par la RFC 2554.
     Disponible depuis cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-from">
   <term>
    <constant>CURLOPT_MAIL_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec l'adresse email de l'expéditeur lors de l'envoi d'un email SMTP.
     L'adresse email doit être spécifiée avec des chevrons
     (<literal>&gt;&lt;</literal>) autour d'elle,
     qui si non spécifiés sont ajoutés automatiquement.
     Si ce paramètre n'est pas spécifié, une adresse vide est envoyée
     au serveur SMTP qui pourrait causer le rejet de l'email.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt">
   <term>
    <constant>CURLOPT_MAIL_RCPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>array</type> de <type>string</type>s
     avec les destinataires à envoyer au serveur dans une requête de courrier SMTP.
     Chaque destinataire doit être spécifié dans une paire de chevrons
     (<literal>&gt;&lt;</literal>).
     Si un chevron n'est pas utilisé comme premier caractère,
     cURL suppose qu'une seule adresse email a été fournie
     et l'encadre dans des chevrons.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>1</literal> pour permettre à la commande <literal>RCPT TO</literal> d'échouer pour certains destinataires, ce qui fait que cURL ignore les erreurs pour les destinataires individuels et continue avec les autres destinataires acceptés. 
     Si tous les destinataires entraînent des échecs et que ce drapeau est spécifié, cURL interrompt la conversation SMTP et renvoie l'erreur reçue de la dernière commande <literal>RCPT TO</literal>. 
     Remplacé par <constant>CURLOPT_MAIL_RCPT_ALLOWFAILS</constant> à partir de cURL 8.2.0. 
     Disponible à partir de PHP 8.2.0 et cURL 7.69.0. 
     Déprécié à partir de cURL 8.2.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps maximum d'inactivité autorisé pour une connexion existante pour être considérée pour réutilisation.
     Par défaut, l'âge maximum est défini à <literal>118</literal> secondes.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible depuis PHP 8.2.0 et cURL 7.65.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le maximum de connexions persistantes autorisées.
     Lorsque la limite est atteinte, la plus ancienne dans le cache est fermée
     pour empêcher l'augmentation du nombre de connexions ouvertes.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize">
   <term>
    <constant>CURLOPT_MAXFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la taille maximale acceptée (en octets) d'un fichier à télécharger.
     Si le fichier demandé est trouvé plus grand que cette valeur,
     le transfert est interrompu
     et <constant>CURLE_FILESIZE_EXCEEDED</constant> est retourné.
     Passer <literal>0</literal> désactive cette option,
     et passer une taille négative retourne une
     <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
     Si la taille du fichier n'est pas connue avant le début du téléchargement,
     cette option n'a pas d'effet.
     Pour une limite de taille supérieure à <literal>2GB</literal>,
     <constant>CURLOPT_MAXFILESIZE_LARGE</constant> doit être utilisé.
     Depuis cURL 8.4.0, cette option arrête également les transferts en cours
     si ils atteignent ce seuil.
     Cette option accepte n'importe quelle valeur qui peut être convertie en un <type>int</type> valide.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La taille maximale en octets autorisée pour le téléchargement. Si le fichier demandé est trouvé plus grand que cette valeur,
     le transfert ne démarrera pas et <constant>CURLE_FILESIZE_EXCEEDED</constant> sera retourné.
     La taille du fichier n'est pas toujours connue avant le téléchargement, et pour de tels fichiers cette option n'a aucun effet même si
     le transfert de fichier finit par être plus grand que cette limite donnée.
     Disponible depuis PHP 8.2.0 et cURL 7.11.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps maximum en secondes, depuis la création de la connexion, autorisé pour une connexion
     existante pour être considérée pour réutilisation. Si une connexion est trouvée dans le cache qui est plus ancienne
     que cette valeur, elle sera plutôt fermée une fois que tous les transferts en cours sont terminés.
     Par défaut à <literal>0</literal> secondes, ce qui signifie que l'option est désactivée et que toutes les connexions sont éligibles pour réutilisation.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible depuis PHP 8.2.0 et cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La quantité maximale de redirections HTTP à suivre. Utilisez cette option aux côtés de <constant>CURLOPT_FOLLOWLOCATION</constant>.
     La valeur par défaut de <literal>20</literal> est définie pour éviter les redirections infinies.
     Définir à <literal>-1</literal> permet les redirections infinies, et <literal>0</literal> refuse toutes les redirections.
     Disponible à partir de cURL 7.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si un téléchargement dépasse cette vitesse (comptée en octets par seconde)
     en moyenne cumulative pendant le transfert, le transfert sera mis en pause pour
     maintenir la vitesse moyenne inférieure ou égale à la valeur du paramètre.
     La valeur par défaut est une vitesse illimitée.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible depuis cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si un téléversement dépasse cette vitesse (comptée en octets par seconde)
     en moyenne cumulative pendant le transfert, le transfert sera mis en pause pour
     maintenir la vitesse moyenne inférieure ou égale à la valeur du paramètre.
     La valeur par défaut est une vitesse illimitée.
     Cette option accepte toute valeur pouvant être convertie en un <type>int</type> valide.
     Disponible à partir de cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir une valeur à un masque de bits des constantes <constant>CURLMIMEOPT_<replaceable>*</replaceable></constant>.
     Actuellement, il n'y a qu'une seule option disponible : <constant>CURLMIMEOPT_FORMESCAPE</constant>.
     Disponible à partir de PHP 8.3.0 et cURL 7.81.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à &true; pour être complètement silencieux avec
     les fonctions cURL.
     Utilisez <constant>CURLOPT_RETURNTRANSFER</constant> à la place.
     Disponible depuis cURL 7.1.0, déprécié depuis cURL 7.8.0
     et dernier disponible dans cURL 7.15.5.
     Supprimé depuis PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à &true; pour scanner le fichier <filename>~/.netrc</filename>
     pour trouver un nom d'utilisateur et un mot de passe pour le site distant
     avec lequel une connexion est établie.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc-file">
   <term>
    <constant>CURLOPT_NETRC_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> contenant le nom complet du fichier <filename>.netrc</filename>.
     Si cette option est omise et que <constant>CURLOPT_NETRC</constant> est défini,
     cURL vérifie un fichier <filename>.netrc</filename>
     dans le répertoire personnel de l'utilisateur actuel.
     Disponible depuis cURL 7.11.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-directory-perms">
   <term>
    <constant>CURLOPT_NEW_DIRECTORY_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la valeur des permissions (<type>int</type>) qui sont définies sur les répertoires nouvellement créés
     sur le serveur distant. La valeur par défaut est <literal>0755</literal>.
     Les seuls protocoles qui peuvent utiliser cette option sont
     <literal>sftp://</literal>, <literal>scp://</literal>
     et <literal>file://</literal>.
     Disponible depuis cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-file-perms">
   <term>
    <constant>CURLOPT_NEW_FILE_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la valeur des permissions (<type>int</type>) qui sont définies sur les fichiers nouvellement créés
     sur le serveur distant. La valeur par défaut est <literal>0644</literal>.
     Les seuls protocoles qui peuvent utiliser cette option sont
     <literal>sftp://</literal>, <literal>scp://</literal>
     et <literal>file://</literal>.
     Disponible depuis cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour exclure le corps de la sortie.
     Pour HTTP(S), cURL effectue une requête HEAD. Pour la plupart des autres protocoles,
     cURL ne demande pas du tout les données du corps.
     Changer cela en &false; entraînera l'inclusion des données du corps dans la sortie.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à &true; pour désactiver la barre de progression pour les transferts cURL.
     <note>
      <para>
       PHP définit automatiquement cette option à &true;, cela ne devrait être
       changé que pour des raisons de débogage.
      </para>
     </note>
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noproxy">
   <term>
    <constant>CURLOPT_NOPROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> consistant en une liste séparée par des virgules de noms d'hôtes
     qui ne nécessitent pas de proxy pour être atteints.
     Chaque nom dans cette liste est comparé soit comme un domaine
     qui contient le nom d'hôte ou le nom d'hôte lui-même.
     Le seul caractère générique disponibles dans le <type>string</type>
     est un simple caractère <literal>*</literal> qui correspond à tous les hosts,
     désactivant effectivement le proxy.
     Définir cette option à une <type>string</type> vide active le proxy pour tous les noms d'hôtes.
     Depuis cURL 7.86.0, les adresses IP définies avec cette option
     peuvent être fournies en utilisant la notation CIDR.
     Disponible depuis cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ignorer toute fonction cURL qui envoie un
     signal au processus PHP. Cela est activé par défaut
     dans les SAPI multi-thread pour que les options de délai d'attente puissent toujours être utilisées.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
      <type>string</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>passwordPrompt</parameter></methodparam>
      <methodparam><type>int</type><parameter>maximumPasswordLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>passwordPrompt</parameter></term>
       <listitem>
        <simpara>
         Une invite de mot de passe.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>maximumPasswordLength</parameter></term>
       <listitem>
        <simpara>
         La longueur maximale du mot de passe.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Le callback doit retourner une <type>string</type> contenant le mot de passe.
     Disponible depuis cURL 7.4.2, déprécié depuis cURL 7.11.1
     et dernier disponible dans cURL 7.15.5.
     Enlevé depuis PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur une <type>string</type> contenant le mot de passe à utiliser pour l'authentification.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour que cURL n'altère pas les chemins d'URL avant de les transmettre au serveur.
     Par défaut, c'est &false;, ce qui écrase les séquences de <literal>/../</literal>
     ou <literal>/./</literal> qui peuvent exister dans la partie chemin de l'URL
     et qui sont censées être supprimées conformément à la section 5.2.4 du RFC 3986.
     Disponible depuis PHP 7.0.7 et cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir une <type>string</type> avec la clé publique épinglée.
     La <type>string</type> peut être le nom du fichier de la clé publique épinglée
     au format PEM ou DER. La <type>string</type> peut également être un
     nombre quelconque de hachages sha256 encodés en base64 précédés de <literal>sha256//</literal> et
     séparés par <literal>;</literal>.
     Disponible à partir de PHP 7.0.7 et cURL 7.39.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour attendre qu'une connexion existante confirme
     si elle peut faire du multiplexage et l'utiliser si c'est le cas
     avant de créer et d'utiliser une nouvelle connexion.
     Disponible à partir de PHP 7.0.7 et cURL 7.43.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>int</type> avec un numéro de port alternatif pour se connecter
     à la place de celui spécifié dans l'URL ou du port par défaut pour le protocole utilisé.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à &true; pour effectuer une requête HTTP <literal>POST</literal>.
     Cette requête utilise l'en-tête <literal>application/x-www-form-urlencoded</literal>.
     Par défaut, c'est &false;.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Les données complètes à envoyer dans une opération HTTP <literal>POST</literal>.
     Ce paramètre peut être passé soit
     sous forme de <type>string</type> urlencodée comme '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
     ou sous forme d'un <type>array</type> avec le nom du champ comme clé et les données du champ comme valeur.
     Si <parameter>value</parameter> est un tableau, l'en-tête
     <literal>Content-Type</literal> sera défini sur
     <literal>multipart/form-data</literal>.
     Les fichiers peuvent être envoyés en utilisant <classname>CURLFile</classname> ou <classname>CURLStringFile</classname>,
     auquel cas <parameter>value</parameter> doit être un <type>array</type>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>array</type> de <type>string</type>s de commandes FTP à exécuter sur le serveur après l'exécution de la requête FTP.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à un bitmask de <constant>CURL_REDIR_POST_301</constant>,
     <constant>CURL_REDIR_POST_302</constant> et <constant>CURL_REDIR_POST_303</constant>
     si la méthode HTTP <literal>POST</literal> doit être maintenue.
     lorsque <constant>CURLOPT_FOLLOWLOCATION</constant> est défini et qu'un
     type spécifique de redirection se produit.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit une chaîne <type>string</type> contenant le nom d'hôte ou l'adresse IP numérique pointée
     à utiliser comme préproxy auquel cURL se connecte avant de
     se connecter au proxy HTTP(S) spécifié dans l'option
     <constant>CURLOPT_PROXY</constant> pour la prochaine requête.
     Le préproxy ne peut être qu'un proxy SOCKS et il doit être préfixé par
     <literal>[scheme]://</literal> pour spécifier quel type de chaussettes est utilisé.
     Une adresse IP numérique IPv6 doit être écrite entre [crochets].
     Définir le préproxy sur un <type>string</type> vide désactive explicitement l'utilisation d'un préproxy.
     Pour spécifier le numéro de port dans ce <type>string</type>, ajoutez <literal>:[port]</literal>
     à la fin du nom d'hôte. Le numéro de port du proxy peut éventuellement être
     spécifié avec l'option séparée <constant>CURLOPT_PROXYPORT</constant>.
     Par défaut, utilise le port 1080 pour les proxys si un port n'est pas spécifié.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prequote">
   <term>
    <constant>CURLOPT_PREQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un tableau de commandes FTP à exécuter sur le serveur avant la requête
     après que la connexion FTP a été établie.
     Ces commandes ne sont pas effectués lorsqu'une liste de répertoire est demandée,
     seulement pour les transfers de fichiers.
     Disponible depuis cURL 7.9.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     N'importe quelle donnée qui devrait être associée à ce gestionnaire cURL. Ces données
     peuvent ensuite être récupérées avec l'option
     <constant>CURLINFO_PRIVATE</constant> de
     <function>curl_getinfo</function>. cURL ne fait rien avec ces données.
     Lors de l'utilisation d'un gestionnaire cURL multi, ces données privées sont typiquement une
     clé unique pour identifier un gestionnaire cURL standard.
     Disponible depuis cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         Le nombre total d'octets attendus à télécharger lors de ce transfert.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         Le nombre d'octets téléchargés jusqu'à présent.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         Le nombre total d'octets attendus à télécharger lors de ce transfert.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         Le nombre d'octets téléchargés jusqu'à présent.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Le callback doit renvoyer un <type>int</type> avec une valeur non nulle pour interrompre le transfert
     et définir une erreur <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
     <note>
      <para>
       La fonction est appelée lorsque l'option <constant>CURLOPT_NOPROGRESS</constant>
       est définie sur &false;.
      </para>
     </note>
     Disponible à partir de cURL 7.1.0 et obsolète à partir de cURL 7.32.0.
     Utilisez <constant>CURLOPT_XFERINFOFUNCTION</constant> à la place.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits de valeurs <constant>CURLPROTO_<replaceable>*</replaceable></constant>.
     Si utilisé, ce masque limite les protocoles que cURL peut utiliser dans le transfert.
     Par défaut, cela vaut <constant>CURLPROTO_ALL</constant>, c'est-à-dire que cURL acceptera tous les protocoles qu'il prend en charge.
     Voir <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Disponible à partir de cURL 7.19.4 et déprécié à partir de cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur une <type>string</type> contenant une liste séparée par des virgules
     de noms de protocoles insensibles à la casse (schémas d'URL) autorisés dans le transfert.
     Définir sur <literal>ALL</literal> pour activer tous les protocoles.
     Par défaut, cURL accepte tous les protocoles pour lesquels il a été construit avec le support.
     Les protocoles disponibles sont :
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
    </simplelist>.
    Disponible à partir de PHP 8.3.0 et cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le proxy HTTP à travers lequel effectuer les requêtes.
     Cela doit être le nom d'hôte, l'adresse IP numérique en notation décimale
     ou une adresse IPv6 numérique écrite entre [crochets].
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un bitmask des méthodes d'authentification HTTP
     (<constant>CURLAUTH_<replaceable>*</replaceable></constant>)
     à utiliser pour la connexion au proxy.
     Pour l'authentification par proxy, seules <constant>CURLAUTH_BASIC</constant> et
     <constant>CURLAUTH_NTLM</constant> sont actuellement prises en charge.
     Par défaut, c'est <constant>CURLAUTH_BASIC</constant>.
     Disponible depuis cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>array</type> d'en-têtes HTTP personnalisés en tant que <type>string</type> à envoyer au proxy.
     Disponible depuis PHP 7.0.7 et cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxypassword">
   <term>
    <constant>CURLOPT_PROXYPASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec le mot de passe à utiliser pour l'authentification avec le proxy.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>int</type> avec le numéro de port du proxy à utiliser pour la connexion.
     Ce numéro de port peut également être défini dans <constant>CURLOPT_PROXY</constant>.
     Le définir à zéro fait en sorte que cURL utilise le numéro de port par défaut du proxy
     ou le numéro de port spécifié dans la chaîne de caractères de l'URL du proxy.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le type de proxy à l'une des constantes
     <constant>CURLPROXY_<replaceable>*</replaceable></constant>.
     Par défaut, c'est <constant>CURLPROXY_HTTP</constant>.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyusername">
   <term>
    <constant>CURLOPT_PROXYUSERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec le nom d'utilisateur à utiliser pour l'authentification avec le proxy.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> contenant un nom d'utilisateur et un mot de passe au format
     <literal>[nom_utilisateur]:[mot_de_passe]</literal> à utiliser pour la
     connexion au proxy.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le chemin vers le fichier de certificats du proxy Certificate Authority (CA). Définir le chemin comme une
     <type>string</type> nommant un fichier contenant un ou plusieurs certificats
     pour vérifier le proxy HTTPS.
     Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     La valeur par défaut est le chemin système où le bundle cacert de cURL
     est supposé être stocké.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom du fichier PEM contenant un ou plusieurs certificats pour vérifier le proxy HTTPS.
     Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     Par défaut, le chemin système où le bundle cacert de cURL est supposé
     être stocké.
     Disponible depuis PHP 8.2.0 et cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le répertoire contenant plusieurs certificats CA pour vérifier le proxy HTTPS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur une <type>string</type> avec le nom de fichier contenant la liste de révocation de certificats (CRL)
     au format PEM à utiliser dans la validation du certificat qui se produit pendant
     l'échange SSL.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom de fichier du certificat SSL de l'émetteur du proxy en tant que<type>string</type>.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le certificat SSL de l'émetteur du proxy à partir du blob de mémoire.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le <type>string</type> à utiliser comme mot de passe pour charger la clé privée
     <constant>CURLOPT_PROXY_SSLKEY</constant>.
     Une phrase secrète n'est pas nécessaire pour charger un certificat,
     mais elle est requise pour charger une clé privée.
     Cette option est pour se connecter à un proxy HTTPS, pas à un serveur HTTPS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir la clé publique ancrée pour le proxy HTTPS.
     La <type>string</type> peut être le nom de fichier de la clé publique ancrée
     qui est censée être au format <literal>PEM</literal>
     ou <literal>DER</literal>.
     La <type>string</type> peut également être n'importe quel nombre de hachages sha256 encodés en base64
     précédés de <literal>sha256//</literal> et séparés par <literal>;</literal>.
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom du service d'authentification du proxy.
     Disponible depuis PHP 7.0.7, cURL 7.43.0 (pour les proxies HTTP) et cURL 7.49.0 (pour les proxies SOCKS5).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le nom de fichier du certificat client utilisé pour se connecter au proxy HTTPS.
     Le format par défaut est <literal>P12</literal> sur Secure Transport et <literal>PEM</literal> sur les autres moteurs,
     et peut être changé avec <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     Avec NSS ou Secure Transport, cela peut aussi être le surnom du certificat
     utilisé pour l'authentification tel qu'il est nommé dans la base de données de sécurité.
     Si un fichier du répertoire courant doit être utilisé,
     il doit être précédé de <literal>./</literal>
     afin d'éviter toute confusion avec un surnom.
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le format du certificat client utilisé lors de la connexion à un proxy HTTPS.
     Les formats pris en charge sont <literal>PEM</literal> et <literal>DER</literal>, sauf avec Secure Transport.
     OpenSSL (versions 0.9.3 et ultérieures) et Secure Transport
     (sur iOS 5 ou ultérieur, ou OS X 10.7 ou ultérieur) supportent également <literal>P12</literal> pour
     les fichiers encodés en PKCS#12. Par défaut, c'est <literal>PEM</literal>.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le certificat client SSL du proxy.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom de fichier de la clé privée
     utilisée pour se connecter au proxy HTTPS.
     Le format par défaut est <literal>PEM</literal> et peut être modifié avec
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     (iOS et Mac OS X uniquement) Cette option est ignorée si cURL a été compilé
     avec Secure Transport. Disponible si compilé avec TLS.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le format de la clé privée.
     Les formats pris en charge sont :
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>.
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec la clé privée utilisée pour se connecter au proxy HTTPS.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir la version TLS de proxy HTTPS préférée sur l'une des constantes <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>.
     Par défaut, cela correspond à <constant>CURL_SSLVERSION_DEFAULT</constant>.
     <warning>
      <simpara>
       Il est préférable de ne pas définir cette option et de laisser la valeur par défaut
       <constant>CURL_SSLVERSION_DEFAULT</constant>
       qui tentera de déterminer la version du protocole SSL distant.
      </simpara>
     </warning>
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec une liste de chiffres séparés par des deux-points à utiliser pour la connexion au proxy HTTPS. 
     Lorsqu'elle est utilisée avec OpenSSL, des virgules et des espaces sont également acceptables comme séparateurs, 
     et <literal>!</literal>, <literal>-</literal> et <literal>+</literal> peuvent être utilisés comme opérateurs. 
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir les options de comportement SSL du proxy, qui est un masque de bits des 
     <constant>CURLSSLOPT_<replaceable>*</replaceable></constant> constantes. 
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur <literal>2</literal> pour vérifier dans les champs de nom du certificat du proxy
     contre le nom du proxy. Lorsqu'il est défini sur <literal>0</literal>, la connexion réussit
     indépendamment des noms utilisés dans le certificat. Utilisez cette capacité avec prudence!
     Définissez sur <literal>1</literal> dans cURL 7.28.0 et antérieur en tant qu'option de débogage. 
     Définir sur <literal>1</literal> dans cURL 7.28.1 à 7.65.3 <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> est renvoyé. 
     À partir de cURL 7.66.0, <literal>1</literal> et <literal>2</literal> sont traités comme la même valeur. 
     Par défaut, la valeur de cette option doit être maintenue à <literal>2</literal>. 
     Dans les environnements de production, la valeur de cette option doit rester à <literal>2</literal>. 
     Disponible à partir de PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &false; pour arrêter cURL de vérifier le certificat du proxy.
     Des certificats alternatifs à vérifier peuvent être
     spécifiés avec l'option <constant>CURLOPT_PROXY_CAINFO</constant>
     ou un répertoire de certificats peut être spécifié avec l'option
     <constant>CURLOPT_PROXY_CAPATH</constant>.
     Lorsque défini sur &false;, la vérification du certificat du proxy réussit indépendamment.
     &true; par défaut.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec une liste de chiffres séparés par des deux-points à utiliser pour la connexion au proxy via TLS 1.3.
     Cette option est actuellement utilisée uniquement lorsque cURL est construit pour utiliser OpenSSL 1.1.1 ou une version ultérieure.
     Lors de l'utilisation d'un autre backend SSL, les suites de chiffrement TLS 1.3 peuvent être définies
     avec l'option <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
     Disponible depuis PHP 7.3.0 et cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> contenant le mot de passe à utiliser pour la méthode d'authentification TLS spécifiée avec le
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Nécessite également que l'option
     <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> soit définie.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     La méthode d'authentification TLS utilisée pour la connexion HTTPS.
     La méthode supportée est <literal>SRP</literal>.
     <note>
      <para>
       L'authentification Secure Remote Password (SRP) pour TLS fournit une authentification mutuelle
       si les deux parties ont un secret partagé. Pour utiliser TLS-SRP, les options
       <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> et
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> doit également être définies.
      </para>
     </note>
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur à utiliser pour la méthode d'authentification TLS du proxy HTTPS spécifiée avec l'option
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Nécessite également que l'option
     <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> soit définie.
     Disponible depuis PHP 7.3.0 et cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-transfer-mode">
   <term>
    <constant>CURLOPT_PROXY_TRANSFER_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit à <literal>1</literal> pour définir le mode de transfert (binaire ou ASCII)
     pour les transfers FTP effectués via un proxy HTTP, en ajoutant
     <literal>type=a</literal> ou <literal>type=i</literal> à l'URL.
     Sans ce paramètre ou s'il est défini à <literal>0</literal>,
     <constant>CURLOPT_TRANSFERTEXT</constant> n'a aucun effet
     lors de l'utilisation de FTP via un proxy.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.18.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour effectuer une requête HTTP PUT d'un fichier. Le fichier à mettre
     doit être défini avec <constant>CURLOPT_READDATA</constant> et
     <constant>CURLOPT_INFILESIZE</constant>.
     Disponible depuis cURL 7.1.0 et obsolète depuis cURL 7.12.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur &true; pour que cURL ignore le nettoyage des ressources lors de la récupération d'un timeout.
     Cela permet une terminaison rapide du processus cURL au détriment d'une possible fuite de ressources associées.
     Disponible depuis PHP 8.3.0 et cURL 7.87.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>array</type> de commandes FTP à exécuter sur le serveur avant la
     requête FTP.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec un nom de fichier à utiliser pour initialiser le générateur de nombres aléatoires pour SSL.
     Disponible depuis cURL 7.7.0 et obsolète depuis cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec la(les) plage(s) de données à récupérer au format <literal>X-Y</literal>, où X ou Y sont optionnels. Les transferts HTTP
     supportent également plusieurs intervalles, séparés par des virgules au format
     <literal>X-Y,N-M</literal>.
     Définir sur &null; pour désactiver la demande d'une plage de bytes.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readdata">
   <term>
    <constant>CURLOPT_READDATA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un pointeur de fichier <type>resource</type> qui sera utilisé par la fonction de lecture de fichier
     définie avec <constant>CURLOPT_READFUNCTION</constant>.
     Disponible depuis cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
        <type>string</type><methodname><replaceable>callback</replaceable></methodname>
        <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
        <methodparam><type>resource</type><parameter>streamResource</parameter></methodparam>
        <methodparam><type>int</type><parameter>maxAmountOfDataToRead</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
        <varlistentry>
            <term><parameter>curlHandle</parameter></term>
            <listitem>
                <simpara>
                    Le handle cURL.
                </simpara>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>streamResource</parameter></term>
            <listitem>
                <simpara>
                    Ressource de flux <type>resource</type> fournie à cURL via l'option
                    <constant>CURLOPT_READDATA</constant>.
                </simpara>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>maxAmountOfDataToRead</parameter></term>
            <listitem>
                <simpara>
                    La quantité maximale de données à lire.
                </simpara>
            </listitem>
        </varlistentry>
     </variablelist>
     Le callback doit retourner une <type>string</type>
     d'une longueur égale ou inférieure à la quantité de données demandée,
     typiquement en la lisant à partir du <type>stream</type> de flux passée. Elle doit
     renvoyer un <type>string</type> vide pour signaler <literal>la fin du fichier</literal>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits de valeurs <constant>CURLPROTO_<replaceable>*</replaceable></constant> lesquelles
     limite les protocoles que cURL peut utiliser dans un transfert qu'il suit dans une
     redirection lorsque <constant>CURLOPT_FOLLOWLOCATION</constant> est activé.
     Cela permet de limiter certains transferts afin qu'ils n'utilisent qu'un sous-ensemble de protocoles lors des redirections.
     À partir de cURL 7.19.4, par défaut, cURL autorisera tous les protocoles, sauf <literal>FILE</literal> et <literal>SCP</literal>.
     Avant cURL 7.19.4, cURL suivait sans condition tous les protocoles pris en charge.
     Voir aussi <constant>CURLOPT_PROTOCOLS</constant> pour les valeurs constantes de protocole.
     Disponible à partir de cURL 7.19.4 et obsolète à partir de cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir sur une <type>string</type> avec une liste séparée par des virgules
     de noms de protocoles insensibles à la casse (schémas d'URL)
     à autoriser lors d'une redirection lorsque
     <constant>CURLOPT_FOLLOWLOCATION</constant> est activé.
     Définir sur <literal>ALL</literal> pour activer tous les protocoles.
     À partir de cURL 7.65.2, cela par défaut à <literal>FTP</literal>,
     <literal>FTPS</literal>, <literal>HTTP</literal> et <literal>HTTPS</literal>.
     De cURL 7.40.0 à 7.65.1, cela par défaut à tous les protocoles sauf
     <literal>FILE</literal>, <literal>SCP</literal>, <literal>SMB</literal> et
     <literal>SMBS</literal>.
     Avant cURL 7.40.0, cela par défaut à tous les protocoles sauf
     <literal>FILE</literal> et <literal>SCP</literal>.
     Les protocoles disponibles sont :
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
     </simplelist>.
     Disponible depuis PHP 8.3.0 et cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> contenant le contenu de l'en-tête <literal>Referer: </literal>
     à utiliser dans une requête HTTP.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> à utiliser dans la requête à venir
     au lieu du chemin extrait de l'URL.
     Disponible depuis PHP 7.3.0 et cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fournir un <type>array</type> de <type>string</type>s séparés par des deux-points
     avec des adresses personnalisées pour des paires hôte et port spécifiques dans le format suivant :
     <code>
      array(
        "example.com:80:127.0.0.1",
        "example2.com:443:127.0.0.2",
      )
     </code>
     Disponible depuis cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'offset, en octets, pour reprendre un transfert.
     Cette option accepte toute valeur qui peut être convertie en un <type>int</type> valide.
     Disponible depuis cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour retourner la réponse en tant que <type>string</type> de la fonction
     <function>curl_exec</function> au lieu de l'afficher directement.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-client-cseq">
   <term>
    <constant>CURLOPT_RTSP_CLIENT_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>int</type> avec le numéro CSEQ à émettre pour la prochaine requête RTSP.
     Utilise si l'application reprend une connexion précédemment interrompue.
     Le CSEQ s'incrémente à partir de ce nouveau numéro par la suite.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-request">
   <term>
    <constant>CURLOPT_RTSP_REQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le type de requête RTSP à effectuer.
     Doit être une des constantes <constant>CURL_RTSPREQ_<replaceable>*</replaceable></constant>.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-server-cseq">
   <term>
    <constant>CURLOPT_RTSP_SERVER_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>int</type> avec le numéro CSEQ à attendre
     pour la prochaine requête RTSP du serveur.
     Cette fonctionnalité (écoute des requêtes du serveur) n'est pas implémentée.
     Par défaut à <literal>0</literal>.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-session-id">
   <term>
    <constant>CURLOPT_RTSP_SESSION_ID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec la valeur de l'identifiant de la session RTSP courante pour la poignée.
     Une fois que cette valeur est définie sur une valeur non-&null;,
     cURL renvoie <constant>CURLE_RTSP_SESSION_ERROR</constant>
     si l'identifiant reçu du serveur ne correspond pas.
     Si défini sur &null;, cURL définit automatiquement l'identifiant
     la première fois que le serveur le définit dans une réponse.
     Par défaut à &null;
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-stream-uri">
   <term>
    <constant>CURLOPT_RTSP_STREAM_URI</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec l'URI du flux sur lequel opérer.
     S'il n'est pas définit, cURL définit par défaut l'opération sur les options de serveur génériques
     en passant <literal>*</literal> à la place de l'URI du flux RTSP.
     Lors du travail avec RTSP, <literal>CURLOPT_RTSP_STREAM_URI</literal>
     indique quelle URL envoyer au serveur dans l'en-tête de requête
     tandis que <literal>CURLOPT_URL</literal> indique
     où établir la connexion.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-transport">
   <term>
    <constant>CURLOPT_RTSP_TRANSPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'en-tête <literal>Transport:</literal> pour cette session RTSP.
     Disponible depuis cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Toujours &true;, ce qui désactive le support du préfixe <literal>"@"</literal>
     pour l'envoi de fichiers dans <constant>CURLOPT_POSTFIELDS</constant>, ce qui
     signifie que les valeurs commençant par <literal>"@"</literal> peuvent être
     passées en toute sécurité en tant que champs. <classname>CURLFile</classname> peut être
     utilisé pour les téléversements à la place.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identité d'autorisation (authzid) <type>string</type> pour le transfert. Applicable uniquement au SASL PLAIN
     où il est facultatif. Lorsqu'il n'est pas spécifié, seule l'identité d'authentification
     (authcid) telle que spécifiée par le nom d'utilisateur sera envoyée au serveur, avec le mot de passe.
     Le serveur déduira l'authzid de l'authcid lorsqu'il ne sera pas fourni, qu'il utilisera ensuite en interne.
     Disponible depuis PHP 8.2.0 et cURL 7.66.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer l'initialisation de la réponse SASL (SASL Initial Response).
     Disponible depuis PHP 7.0.7 et cURL 7.31.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>string</type> avec le nom du service d'authentification.
     Disponible depuis PHP 7.0.7 et cURL 7.43.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un résultat de <function>curl_share_init</function>. Fait en sorte que le gestionnaire cURL
     utilise les données du gestionnaire partagé.
     Disponible depuis cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_GSSAPI</constant></member>
      <member><constant>CURLAUTH_NONE</constant></member>
     </simplelist>.
     Lorsque plus d'une méthode est définie, cURL interrogera le serveur pour voir
     quelles méthodes il prend en charge et choisira la meilleure.
     Par défaut, <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Définissez le nom d'utilisateur et le mot de passe réels avec l'option <constant>CURLOPT_PROXYUSERPWD</constant>.
     Disponible depuis PHP 7.3.0 et cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-nec">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_NEC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à <literal>1</literal> pour activer et à <literal>0</literal> pour désactiver
     l'échange non protégé de la négociation du mode de protection
     dans le cadre de la négociation GSSAPI.
     Disponible depuis cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-service">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_SERVICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> contenant le nom du service SOCKSS.
     Par défaut à <literal>rcmd</literal>.
     Disponible depuis cURL 7.19.4 et déprécié depuis cURL 7.49.0.
     Utiliser <constant>CURLOPT_PROXY_SERVICE_NAME</constant> à la place.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un masque de bits composé d'une ou plusieurs des constantes suivantes :
     <simplelist type="inline">
      <member><constant>CURLSSH_AUTH_PUBLICKEY</constant></member>
      <member><constant>CURLSSH_AUTH_PASSWORD</constant></member>
      <member><constant>CURLSSH_AUTH_HOST</constant></member>
      <member><constant>CURLSSH_AUTH_KEYBOARD</constant></member>
      <member><constant>CURLSSH_AUTH_AGENT</constant></member>
      <member><constant>CURLSSH_AUTH_ANY</constant></member>
     </simplelist>.
     Par défaut, cela correspond à <constant>CURLSSH_AUTH_ANY</constant>.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer, &false; pour désactiver la compression SSH intégrée.
     Notez que le serveur peut ignorer cette demande.
     Par défaut, cela correspond à &false;.
     Disponible depuis PHP 7.3.0 et cURL 7.56.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> qui sera appelé lorsque la vérification de la clé hôte SSH est nécessaire.
     Le rappel doit avoir la signature suivante :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyType</parameter></methodparam>
      <methodparam><type>string</type><parameter>key</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le handle cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyType</parameter></term>
       <listitem>
        <simpara>
         L'un des types de clé <constant>CURLKHTYPE_<replaceable>*</replaceable></constant>.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>key</parameter></term>
       <listitem>
        <simpara>
         La clé à vérifier.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyLength</parameter></term>
       <listitem>
        <simpara>
         La longueur de la clé en octets.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Ce rappel remplace <constant>CURLOPT_SSH_KNOWNHOSTS</constant>.
     Disponible à partir de PHP 8.3.0 et cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> contenant 32 chiffres hexadécimaux qui doivent contenir le
     checksum MD5 de la clé publique de l'hôte distant, et cURL rejettera
     la connexion à l'hôte à moins que les sommes de contrôle md5 ne correspondent.
     Cette option est uniquement pour les transferts SCP et SFTP.
     Disponible depuis cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le hash SHA256 codé en base64
     de la clé publique de l'hôte distant.
     Le transfert échouera si le hachage donné ne correspond pas au hachage fourni par l'hôte distant.
     Disponible depuis PHP 8.2.0 et cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-knownhosts">
   <term>
    <constant>CURLOPT_SSH_KNOWNHOSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le nom du fichier <filename>known_host</filename> à utiliser
     qui devrait utiliser le format de fichier OpenSSH pris en charge par libssh2.
     Disponible depuis cURL 7.19.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de votre clé privée. Si non utilisé, cURL utilise par défaut
     <filename>$HOME/.ssh/id_dsa</filename> si la variable d'environnement HOME est définie,
     et juste <literal>id_dsa</literal> dans le répertoire courant si HOME n'est pas défini.
     Si le fichier est protégé par mot de passe, définissez le mot de passe avec
     <constant>CURLOPT_KEYPASSWD</constant>.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom du fichier de votre clé publique. Si non utilisé, cURL utilise par défaut
     <filename>$HOME/.ssh/id_dsa.pub</filename> si la variable d'environnement HOME est définie,
     et juste <literal>id_dsa.pub</literal> dans le répertoire courant si HOME n'est pas défini.
     Disponible depuis cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier contenant un certificat au format PEM.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe requis pour utiliser le certificat
     <constant>CURLOPT_SSLCERT</constant>.
     Disponible à partir de cURL 7.1.0 et déconseillé à partir de cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le format du certificat. Les formats pris en charge sont :
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
      <member><literal>P12</literal></member>
     </simplelist>.
     <literal>P12</literal> (pour les fichiers encodés en PKCS#12) est disponible à partir d'OpenSSL 0.9.3.
     Par défaut, c'est <literal>PEM</literal>.
     Disponible depuis cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec le certificat client SSL.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identifiant <type>string</type> pour le moteur crypto de la clé SSL privée
     spécifiée dans <constant>CURLOPT_SSLKEY</constant>.
     Disponible à partir de cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'identifiant du moteur de cryptographie utilisé pour les opérations de
     cryptographie asymétrique.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'un fichier contenant une clé privée SSL.
     Disponible à partir de cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le mot de passe requis pour utiliser la clé privée SSL
     spécifiée dans <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Puisque cette option contient un mot de passe sensible, n'oubliez pas de garder
       le script PHP dans lequel il est contenu en sécurité.
      </para>
     </note>
     Disponible à partir de cURL 7.9.3 et déconseillé à partir de cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le type de clé privée SSL spécifié dans
     <constant>CURLOPT_SSLKEY</constant>. Les types de clé pris en charge sont :
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>.
     Défaut à <literal>PEM</literal>.
     Disponible à partir de cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> clé privée pour le certificat client.
     Disponible depuis PHP 8.1.0 et cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une des
     constantes suivantes <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>.
     <warning>
      <simpara>
       Il est préférable de ne pas définir cette option et de laisser les valeurs par défaut.
       Définir cette option à
       <constant>CURL_SSLVERSION_SSLv2</constant>
       ou
       <constant>CURL_SSLVERSION_SSLv3</constant>
       il est très dangereux, étant donné les
       vulnérabilités connues dans SSLv2 et SSLv3.
      </simpara>
     </warning>
     Par défaut, c'est <constant>CURL_SSLVERSION_DEFAULT</constant>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> séparée par des deux-points des chiffrement à utiliser
     pour la connexion TLS 1.2 (1.1, 1.0).
     Disponible à partir de cURL 7.9.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un liste de courbes elliptiques délimitées par des deux-points. Par exemple,
     <literal>X25519:P-521</literal> est une liste de deux courbes elliptiques valides.
     Cette option définit les algorithmes d'échange de clés du client dans la poignée de main SSL,
     si le backend SSL cURL est compilé pour l'utiliser.
     Disponible depuis PHP 8.2.0 et cURL 7.73.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to disable ALPN in the SSL handshake (if the SSL backend
     cURL is built to use supports it), which can be used to
     negotiate http2.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour désactiver NPN dans la poignée de main SSL (si le backend SSL
     cURL est compilé pour l'utiliser), ce qui peut être utilisé pour
     négocier http2.
     Disponible depuis PHP 7.0.7 et cURL 7.36.0, et obsolète à partir de cURL 7.86.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer et &false; pour désactiver le démarrage anticipé de TLS,
     qui est un mode où un client TLS commence à envoyer des données d'application
     avant de vérifier le message <literal>Finished</literal> du serveur.
     Disponible à partir de PHP 7.0.7 et cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir les options de comportement SSL, qui sont un masque de bits des
     <constant>CURLSSLOPT_<replaceable>*</replaceable></constant> constantes.
     Par défaut, aucun des bits n'est défini.
     Disponible à partir de PHP 7.0.7 et cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-sessionid-cache">
   <term>
    <constant>CURLOPT_SSL_SESSIONID_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à <literal>0</literal> pour désactiver et à <literal>1</literal> pour activer
     le cache de session SSL.
     Par défaut, tous les transferts sont effectués en utilisant le cache activé.
     Disponible depuis cURL 7.16.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> pour vérifier qu'un champ de nom commun ou un champ de nom alternatif
     dans le certificat SSL du pair correspond au nom d'hôte fourni.
     <literal>0</literal> pour ne pas vérifier les noms.
     <literal>1</literal> ne doit pas être utilisé.
     En production, la valeur de cette option
     doit être conservée à <literal>2</literal> (valeur par défaut). Le support de la valeur <literal>1</literal> a été supprimé dans cURL 7.28.1.
     Disponible à partir de cURL 7.8.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; pour empêcher cURL de vérifier le certificat du
     pair. Des certificats alternatifs à vérifier peuvent être
     spécifiés avec l'option <constant>CURLOPT_CAINFO</constant>
     ou un répertoire de certificats peut être spécifié avec
     l'option <constant>CURLOPT_CAPATH</constant>.
     Défaut à &true; à partir de cURL 7.10.
     Paquet par défaut de certificats CA installé à partir de cURL 7.10.
     Disponible à partir de cURL 7.4.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer et &false; pour désactiver la vérification de l'état du certificat.
     Disponible à partir de PHP 7.0.7 et cURL 7.41.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un descripteur de fichier <type>resource</type> pointant vers
     un emplacement alternatif pour envoyer les erreurs au lieu de
     <constant>STDERR</constant>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir le poids numérique du flux (un nombre entre <literal>1</literal> et <literal>256</literal>).
     Disponible à partir de PHP 7.0.7 et cURL 7.46.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour supprimer les en-têtes de réponse proxy CONNECT des fonctions de rappel utilisateur
     <constant>CURLOPT_HEADERFUNCTION</constant> et <constant>CURLOPT_WRITEFUNCTION</constant>,
     lorsque <constant>CURLOPT_HTTPPROXYTUNNEL</constant> est utilisé et une requête CONNECT est effectuée.
     Par défaut, c'est &false;.
     Disponible depuis PHP 7.3.0 et cURL 7.54.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour activer et &false; pour désactiver TCP Fast Open.
     Disponible à partir de PHP 7.0.7 et cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Si défini à <literal>1</literal>, des sondes de maintien de la connexion TCP seront envoyées. Le déliat et
     la fréquence de ces sondes peuvent être contrôlés par les options <constant>CURLOPT_TCP_KEEPIDLE</constant>
     et <constant>CURLOPT_TCP_KEEPINTVL</constant>, à condition que le système d'exploitation
     les supporte. Si défini à <literal>0</literal> (par défaut), les sondes de maintien de la connexion sont désactivées.
     Disponible depuis cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Défini le délai, en secondes, que le système d'exploitation attendra pendant que la connexion est
     inutilisée avant d'envoyer des sondes de maintien de la connexion, si <constant>CURLOPT_TCP_KEEPALIVE</constant> est
     activé. Tous les systèmes d'exploitation ne supportent pas cette option.
     La valeur par défaut est <literal>60</literal>.
     Disponible depuis cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit l'intervalle, en secondes, que le système d'exploitation attendra entre l'envoi
     des sondes de maintien de la connexion, si <constant>CURLOPT_TCP_KEEPALIVE</constant> est activé.
     Tous les systèmes d'exploitation ne supportent pas cette option.
     La valeur par défaut est <literal>60</literal>.
     Disponible depuis cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour désactiver l'algorithme de Nagle TCP, qui tente de minimiser
     le nombre de petits paquets sur le réseau.
     Par défaut, c'est &true;.
     Disponible depuis cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-telnetoptions">
   <term>
    <constant>CURLOPT_TELNETOPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>array</type> de <type>string</type>s à passer aux négociations telnet.
     Ces variables doivent être au format <literal>&gt;option=valeur&lt;</literal>.
     cURL supporte les options <literal>TTYPE</literal>,
     <literal>XDISPLOC</literal> et <literal>NEW_ENV</literal>.
     Disponible depuis cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-blksize">
   <term>
    <constant>CURLOPT_TFTP_BLKSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit la taille de bloc à utiliser pour la transmission de données TFTP.
     La plage valide est de <literal>8</literal> à <literal>65464</literal> octets.
     Par défaut, <literal>512</literal> octets sont utilisés si cette option n'est pas spécifiée.
     La taille du bloc spécifiée n'est utilisée que si elle est prise en charge par le serveur distant.
     SI le serveur ne renvoie pas d'accusé de réception d'option
     ou renvoie un accusé de réception d'option sans taille de bloc,
     la valeur par défaut de <literal>512</literal> octets est utilisée.
     Disponible depuis cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour ne pas envoyer de requêtes d'options TFTP.
     Par défaut, c'est &false;.
     Disponible depuis PHP 7.0.7 et cURL 7.48.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir comment <constant>CURLOPT_TIMEVALUE</constant> est traité.
     Utilisez <constant>CURL_TIMECOND_IFMODSINCE</constant> pour retourner la
     page uniquement si elle a été modifiée depuis le temps spécifié dans
     <constant>CURLOPT_TIMEVALUE</constant>. Si elle n'a pas été modifiée,
     un en-tête <literal>304 Not Modified</literal> sera retourné
     en supposant que <constant>CURLOPT_HEADER</constant> est &true;.
     Utiliser <constant>CURL_TIMECOND_IFUNMODSINCE</constant> pour l'effet inverse.
     Utiliser <constant>CURL_TIMECOND_NONE</constant> pour ignorer
     <constant>CURLOPT_TIMEVALUE</constant> et toujours retourner la page.
     <constant>CURL_TIMECOND_NONE</constant> est la valeur par défaut.
     Avant cURL 7.46.0, la valeur par défaut était
     <constant>CURL_TIMECOND_IFMODSINCE</constant>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre maximum de secondes à attendre pour les fonctions cURL.
     Par défaut, c'est <literal>0</literal>, ce qui signifie que les fonctions ne dépassent jamais le temps d'attente pendant le transfert.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nombre maximum de millisecondes à attendre pour les fonctions cURL
     s'éxécutent.
     Si cURL est compilé pour utiliser le résolveur de noms système standard,
     cette partie de la connexion utilisera toujours une résolution de seconde complète
     pour les délais d'attente avec un délai minimum autorisé d'une seconde.
     Par défaut, c'est <literal>0</literal>, ce qui signifie que les fonctions ne dépassent jamais le temps d'attente pendant le transfert.
     Disponible depuis cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps en secondes depuis le 1er janvier 1970. Le temps sera utilisé
     par <constant>CURLOPT_TIMECONDITION</constant>.
     Par défaut, c'est <literal>0</literal>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le temps en secondes depuis le 1er janvier 1970. Le temps sera utilisé
     par <constant>CURLOPT_TIMECONDITION</constant>. Par défaut à zéro.
     La différence entre cette option et <constant>CURLOPT_TIMEVALUE</constant>
     est le type de l'argument. Sur les systèmes où 'long' n'est que de 32 bits de large,
     cette option doit être utilisée pour définir des dates au-delà de l'année 2038.
     Disponible depuis PHP 7.3.0 et cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Une <type>string</type> avec une liste de chiffrement séparée par des deux-points
     à utiliser pour la connexion TLS 1.3.
     Cette option est actuellement utilisée uniquement lorsque cURL est compilé avec OpenSSL 1.1.1 ou version ultérieure.
     Lors de l'utilisation d'un autre backend SSL, les suites de chiffrement TLS 1.3 peuvent être définies
     avec l'option <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
     Disponible à partir de PHP 7.3.0 et cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-password">
   <term>
    <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un mot de passe à utiliser pour l'authentification spécifiée
     avec l'option <constant>CURLOPT_TLSAUTH_TYPE</constant>. Requiert que
     l'option <constant>CURLOPT_TLSAUTH_USERNAME</constant> soit également définie.
     Cette fonctionnalité repose sur TLS SRP qui ne fonctionne pas avec TLS 1.3.
     Disponible depuis cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-type">
   <term>
    <constant>CURLOPT_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit une <type>string</type> avec la méthode d'authentification TLS.
     La méthode supportée est <literal>SRP</literal>
     (authentification TLS Secure Remote Password).
     Disponible à partir de cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-username">
   <term>
    <constant>CURLOPT_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit un <type>string</type> avec le nom d'utilisateur à utiliser pour la méthode d'authentification TLS
     spécifié avec l'option <constant>CURLOPT_TLSAUTH_TYPE</constant>.
     Requiert que l'option <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
     soit également définie.
     Cette fonctionnalité repose sur TLS SRP qui ne fonctionne pas avec TLS 1.3.
     Disponible depuis cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfer-encoding">
   <term>
    <constant>CURLOPT_TRANSFER_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit à <literal>1</literal> pour activer et à <literal>0</literal> pour désactiver
     la demande de <literal>Transfer Encoding</literal> compressé dans la requête
     HTTP sortante. Si le serveur répond avec un
     <literal>Transfer Encoding</literal> compressé,
     cURL va automatiquement le décompresser à la réception.
     Par défaut à <literal>0</literal>.
     Disponible à partir de cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to use ASCII mode for FTP transfers.
     Pour LDAP, il récupère les données en texte brut au lieu de HTML. Sur
     les systèmes Windows, il ne définira pas <constant>STDOUT</constant> en
     mode binaire.
     Par défaut, c'est &false;.
     Disponible à partir de cURL 7.1.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Active l'utilisation des sockets de domaine Unix comme point de connexion et
     définit le chemin du <type>string</type> donné.
     Définir sur &null; pour désactiver.
     Par défaut, c'est &null;.
     Disponible à partir de PHP 7.0.7 et cURL 7.40.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour continuer à envoyer le nom d'utilisateur et le mot de passe
     lors du suivi des emplacements (en utilisant
     <constant>CURLOPT_FOLLOWLOCATION</constant>), même lorsque le
     nom d'hôte a changé.
     Par défaut, c'est &false;.
     Disponible à partir de cURL 7.10.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Quelques protocoles ont des mécanismes de "maintenance de la connexion". Ces mécanismes envoient
     généralement du trafic sur les connexions existantes pour les maintenir en vie. Cette option définit l'intervalle de maintenance de la connexion.
     Actuellement, le seul protocole avec un mécanisme de maintenance de la connexion est HTTP/2. Lorsque l'intervalle de maintenance de la
     connexion est dépassé, un cadre PING HTTP/2 est envoyé sur la connexion.
     Par défaut, c'est <constant>CURL_UPKEEP_INTERVAL_DEFAULT</constant>
     qui est actuellement <literal>60</literal> secondes.
     Disponible à partir de PHP 8.2.0 et cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour préparer et effectuer un téléchargement.
     Par défaut, c'est &false;.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le tampon de taille préférée en octets pour le téléchargement cURL.
     La taille du tampon de téléchargement par défaut est de 64 kilo-octets. La taille maximale du tampon autorisée à être définie est de 2 méga-octets.
     La taille minimale du tampon autorisée à être définie est de 16 kilo-octets.
     Disponible depuis PHP 8.2.0 et cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     L'URL à récupérer. Cela peut également être défini lors de l'initialisation d'une
     session avec <function>curl_init</function>.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-use-ssl">
   <term>
    <constant>CURLOPT_USE_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définit le niveau de SSL/TLS souhaité pour le transfert
     lors de l'utilisation de FTP, SMTP, POP3, IMAP, etc.
     Ce sont tous des protocoles qui commencent en texte clair
     et sont "améliorés" en SSL en utilisant la commande STARTTLS.
     Définir sur l'une des constantes 
     <constant>CURLUSESSL_<replaceable>*</replaceable></constant>.
     Disponible depuis cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le contenu de l'en-tête <literal>User-Agent: </literal> à utiliser dans une
     requête HTTP.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur à utiliser dans l'authentification.
     Disponible depuis cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Le nom d'utilisateur et le mot de passe sous la forme
     <literal>[username]:[password]</literal> à utiliser
     pour la connexion.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; pour afficher des informations détaillées sur la connexion.
     Écrit la sortie sur <constant>STDERR</constant>, ou le fichier spécifié en utilisant
     <constant>CURLOPT_STDERR</constant>.
     Par défaut, c'est &false;.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-wildcardmatch">
   <term>
    <constant>CURLOPT_WILDCARDMATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Définir à <literal>1</literal> pour transférer plusieurs fichiers
     selon un modèle de nom de fichier.
     Le patterne peut être spécifié en tant que partie de l'option
     <constant>CURLOPT_URL</constant>,
     en utilisant un modèle fnmatch-like (Shell Pattern Matching)
     dans la dernière partie de l'URL (nom de fichier).
     Disponible depuis cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         Les données à écrire.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Les données doivent être enregistrées par le callback
     et le callback doit renvoyer le nombre exact d'octets écrits
     ou le transfert sera annulé avec une erreur.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un gestionnaire de fichier <type>resource</type> vers le fichier dans lequel la partie en-tête du transfert est écrite.
     Disponible à partir de cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Accepte un masque de bits pour définir les options de comportement WebSocket.
     La seule option disponible est <constant>CURLWS_RAW_MODE</constant>.
     Par défaut, c'est <literal>0</literal>.
     Disponible à partir de PHP 8.3.0 et cURL 7.86.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Un <type>callable</type> avec la signature suivante :
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         Le gestionnaire cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         Le nombre total de bytes qui devraient être téléchargés lors de ce transfert.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         Le nombre de bytes téléchargés jusqu'à présent.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         Le nombre total de bytes qui devraient être téléchargés lors de ce transfert.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         Le nombre de bytes téléchargés jusqu'à présent.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Retournez <literal>1</literal> pour annuler le transfert
     et définir une erreur <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
     Disponible depuis PHP 8.2.0 et cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Spécife le jeton d'accès OAuth 2.0.
     Définissez sur &null; pour désactiver.
     Par défaut, c'est &null;.
     Disponible depuis PHP 7.0.7 et cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
