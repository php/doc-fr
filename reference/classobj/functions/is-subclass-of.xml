<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c44475e1fafcbee203ed4935a6d5d7a01379fcdc Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: pmartin -->
<refentry xml:id="function.is-subclass-of" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_subclass_of</refname>
  <refpurpose>Détermine si un objet est une sous-classe d'une classe donnée ou l'implémente</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_subclass_of</methodname>
   <methodparam><type>mixed</type><parameter>object_or_class</parameter></methodparam>
   <methodparam><type>string</type><parameter>class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>allow_string</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Vérifie si l'objet <parameter>object_or_class</parameter> a la classe
   <parameter>class</parameter> parmi ses parents ou l'implémente.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object_or_class</parameter></term>
     <listitem>
      <para>
       Un nom de classe ou une instance d'un objet.
       Aucune erreur n'est générée si la classe n'existe pas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class</parameter></term>
     <listitem>
      <para>
       Le nom de la classe
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_string</parameter></term>
     <listitem>
      <para>
       Si ce paramètre est défini à &false;, un nom de classe sous forme
       de chaîne de caractères dans le paramètre <parameter>object_or_class</parameter>
       n'est pas autorisé. Ceci permet d'éviter d'appeler l'autoloader si la classe
       n'existe pas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Cette fonction retourne &true; si l'objet <parameter>object_or_class</parameter>
   est une instance d'une classe qui est une sous-classe de
   <parameter>class</parameter>, &false; sinon.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>is_subclass_of</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Définit une classe
class WidgetFactory
{
  var $oink = 'moo';
}

// Définit une sous-classe
class WidgetFactory_Child extends WidgetFactory
{
  var $oink = 'oink';
}

// Création d'un nouvel objet
$WF = new WidgetFactory();
$WFC = new WidgetFactory_Child();

if (is_subclass_of($WFC, 'WidgetFactory')) {
  echo "oui, \$WFC est une sous-classe de la classe WidgetFactory\n";
} else {
  echo "non, \$WFC n'est pas une sous-classe de la classe WidgetFactory\n";
}


if (is_subclass_of($WF, 'WidgetFactory')) {
  echo "oui, \$WF est une sous-classe de la classe WidgetFactory\n";
} else {
  echo "non, \$WF n'est pas une sous-classe de la classe WidgetFactory\n";
}


if (is_subclass_of('WidgetFactory_Child', 'WidgetFactory')) {
  echo "oui, WidgetFactory_Child est une sous-classe de la classe WidgetFactory\n";
} else {
  echo "non, WidgetFactory_Child n'est pas une sous-classe de la classe WidgetFactory\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
oui, $WFC est une sous-classe de la classe WidgetFactory
non, $WF n'est pas une sous-classe de la classe WidgetFactory
oui, WidgetFactory_Child est une sous-classe de la classe WidgetFactory
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>is_subclass_of</function> en utilisant une interface</title>
    <programlisting role="php">
<![CDATA[
<?php
// Définition de l'interface
interface MyInterface
{
  public function MyFunction();
}

// Définition de l'implémentation de la classe de l'interface
class MyClass implements MyInterface
{
  public function MyFunction()
  {
    return "MyClass implémente MyInterface!";
  }
}

// Instanciation de l'objet
$my_object = new MyClass;

// Fonctionne depuis PHP 5.3.7

// Test utilisant l'objet de l'instance de la classe
if (is_subclass_of($my_object, 'MyInterface')) {
  echo "Oui, \$my_object est une sous-classe de MyInterface\n";
} else {
  echo "Non, \$my_object n'est pas une sous-classe de MyInterface\n";
}

// Test utilisant le nom de la classe sous forme de chaîne de caractères
if (is_subclass_of('MyClass', 'MyInterface')) {
  echo "Oui, MyClass est une sous-classe de MyInterface\n";
} else {
  echo "Non, MyClass n'est pas une sous-classe de MyInterface\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Oui, $my_object est une sous-classe de MyInterface
Oui, MyClass est une sous-classe de MyInterface
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.uses-autoload;
 </refsect1> 
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>get_parent_class</function></member>
    <member><function>is_a</function></member>
    <member><function>class_parents</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
