<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="intldateformatter.setlenient" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::setLenient</refname>
  <refname>datefmt_set_lenient</refname>
  <refpurpose>Configure la souplesse de l'analyseur</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="IntlDateFormatter">
   <modifier>public</modifier> <type>void</type><methodname>IntlDateFormatter::setLenient</methodname>
   <methodparam><type>bool</type><parameter>lenient</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>void</type><methodname>datefmt_set_lenient</methodname>
   <methodparam><type>IntlDateFormatter</type><parameter>formatter</parameter></methodparam>
   <methodparam><type>bool</type><parameter>lenient</parameter></methodparam>
  </methodsynopsis>
  <para>
   Définit si l'analyseur est strict ou souple lors de l'interprétation des
   chaînes qui ne correspondent pas exactement au modèle recherché. Activer la 
   souplesse da l'analyseur permet d'accepter des valeurs qui pourraient être
   considérées comme erronées par l'analyseur strict. Les espaces, les
   caractères inconnus ou les dates invalides ne sont pas acceptées.
  </para> 
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formatter</parameter></term>
     <listitem>
      <para>
       La ressource de formateur <classname>IntlDateFormatter</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>lenient</parameter></term>
     <listitem>
      <para>
       Si l'analyseur est souple ou non, par
       défaut, vaut &true; (souple).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>datefmt_set_lenient</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$fmt = datefmt_create(
    'en_US', 
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'dd/MM/yyyy'
);
echo 'Le formateur est strict : ';
if ($fmt->isLenient()) {
    echo 'Oui';
} else {
    echo 'Non';
}
datefmt_parse($fmt, '35/13/1971');
echo "\nTentative d'analyse de la date '35/13/1971'.\nLe résultat est : " . datefmt_parse($fmt, '35/13/1971');
if (intl_get_error_code() != 0) {
    echo "\nError_msg est : " . intl_get_error_message();
    echo "\nError_code est : " . intl_get_error_code();
}
datefmt_set_lenient($fmt, false);
echo "\nMaintenant, le formateur est strict : ";
if ($fmt->isLenient()) {
    echo 'Oui';
} else {
    echo 'Non';
}
datefmt_parse($fmt, '35/13/1971');
echo "\nTentative d'analyse de la date '35/13/1971'.\nLe résultat est : " . datefmt_parse($fmt, '35/13/1971');
if (intl_get_error_code() != 0) {
    echo "\nError_msg est : ".intl_get_error_message();
    echo "\nError_code est : ".intl_get_error_code();
}

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple orienté objet</title>
   <programlisting role="php">
<![CDATA[
<?php
$fmt = new IntlDateFormatter(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'dd/MM/yyyy'
);
echo 'Le formateur est strict : ';
if ($fmt->isLenient()) {
    echo 'Oui';
} else {
    echo 'Non';
}
$fmt->parse('35/13/1971');
echo "\n Tentative d'analyse de la date '35/13/1971'.\nLe résultat est : " . $fmt->parse('35/13/1971');
if (intl_get_error_code() != 0) {
    echo "\nError_msg est : " . intl_get_error_message();
    echo "\nError_code est : " . intl_get_error_code();
}

$fmt->setLenient(FALSE);
echo "\nMaintenant, le formateur est strict : ";
if ($fmt->isLenient()) {
    echo 'Oui';
} else {
    echo 'Non';
}
$fmt->parse('35/13/1971');
echo "\n Tentative d'analyse de la date '35/13/1971'.\nLe résultat est : " . $fmt->parse('35/13/1971');
if (intl_get_error_code() != 0) {
    echo "\nError_msg est : " . intl_get_error_message();
    echo "\nError_code est : " . intl_get_error_code();
}

?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
Le formateur est strict : Non
Tentative d'analyse de la date '35/13/1971'. 
Le résultat est : 66038400
Maintenant, le formateur est strict : Oui
Tentative d'analyse de la date '35/13/1971'. 
Le résultat est : Error_msg est : Date parsing failed: U_PARSE_ERROR Error_code est : 9
]]>
  </screen>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>datefmt_is_lenient</function></member>
    <member><function>datefmt_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
