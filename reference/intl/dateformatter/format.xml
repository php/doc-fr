<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: DAnnebicque -->
<refentry xml:id="intldateformatter.format" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::format</refname>
  <refname>datefmt_format</refname>
  <refpurpose>Formate la date et l'heure sous forme de chaîne</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="IntlDateFormatter">
   <modifier>public</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>IntlDateFormatter::format</methodname>
   <methodparam><type class="union"><type>IntlCalendar</type><type>DateTimeInterface</type><type>array</type><type>string</type><type>int</type><type>float</type></type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>datefmt_format</methodname>
   <methodparam><type>IntlDateFormatter</type><parameter>formatter</parameter></methodparam>
   <methodparam><type class="union"><type>IntlCalendar</type><type>DateTimeInterface</type><type>array</type><type>string</type><type>int</type><type>float</type></type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <para>
   Formate l'heure sous forme de chaîne.
  </para> 
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formatter</parameter></term>
     <listitem>
      <para>
       La ressource de formateur <classname>IntlDateFormatter</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>
       La valeur à formater. Ce peut être un objet <classname>DateTimeInterface</classname>,
       un objet <classname>IntlCalendar</classname>, un type <type>numeric</type>
       représentant un (peut être fractionné) nombre de secondes depuis
       l'époque ou un <type>array</type> au format de sortie de la fonction
       <function>localtime</function>.
      </para>
      <para>
       Si un objet <classname>DateTime</classname> ou un objet
       <classname>IntlCalendar</classname> est passé, son décalage horaire
       ne sera pas considéré. L'objet devra être formaté en utilisant le
       décalage horaire configuré pour ce formateur. Si vous souhaitez
       utiliser le décalage horaire de l'objet à formater, la méthode
       <function>IntlDateFormatter::setTimeZone</function> devra être
       appelée avant le décalage horaire de l'objet. Vous pouvez aussi
       utiliser la méthode <function>IntlDateFormatter::formatObject</function>
       pour obtenir le même résultat.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La chaîne formatée, ou, si une erreur survient, &false;.   
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
       <row>
       <entry>7.1.5</entry>
       <entry>
        Ajout du support pour fournir un objet générique
        <classname>DateTimeInterface</classname> pour le paramètre 
        <parameter>datetime</parameter>. Anciennement, seulement les objets valide
        <classname>DateTime</classname> étaient supportés.
       </entry>
      </row>
      <row>
       <entry>PECL 3.0.0</entry>
       <entry>
        Il est maintenant possible de passer un objet
        <classname>IntlCalendar</classname> comme valeur du paramètre
        <parameter>datetime</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>datefmt_format</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$fmt = datefmt_create(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'Le premier format affiché est ' . datefmt_format($fmt, 0);

$fmt = datefmt_create(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'Le deuxième format affiché est ' . datefmt_format($fmt, 0);

$fmt = datefmt_create(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'MM/dd/yyyy'
);
echo 'Le premier format est affiché avec le modèle ' . datefmt_format($fmt, 0);

$fmt = datefmt_create(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'MM/dd/yyyy'
);
echo "Le deuxième format est affiché avec le modèle " . datefmt_format($fmt, 0);
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple orienté objet</title>
   <programlisting role="php">
<![CDATA[
<?php
$fmt = new IntlDateFormatter(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'Le premier format affiché est ' . $fmt->format(0);

$fmt = new IntlDateFormatter(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN
);
echo 'Le deuxième format affiché est ' . $fmt->format(0);

$fmt = new IntlDateFormatter(
    'en_US',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'MM/dd/yyyy'
);
echo 'Le premier format est affiché avec le modèle ' . $fmt->format(0);

$fmt = new IntlDateFormatter(
    'de-DE',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'America/Los_Angeles',
    IntlDateFormatter::GREGORIAN,
    'MM/dd/yyyy'
);
echo 'Le deuxième format est affiché avec le modèle ' . $fmt->format(0);
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
Le premier format affiché est Wednesday, December 31, 1969 4:00:00 PM PT
Le deuxième format affiché est Mittwoch, 31. Dezember 1969 16:00 Uhr GMT-08:00
Le premier format est affiché avec le modèle : 12/31/1969
Le deuxième format est affiché avec le modèle : 12/31/1969
]]>
  </screen>
  <example>
   <title>Exemple avec un objet <classname>IntlCalendar</classname></title>
   <programlisting role="php">
<![CDATA[
<?php
$tz = reset(iterator_to_array(IntlTimeZone::createEnumeration('FR')));
$formatter = IntlDateFormatter::create(
    'fr_FR',
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    $tz,
    IntlDateFormatter::GREGORIAN
);

$cal = IntlCalendar::createInstance($tz, '@calendar=islamic-civil');
$cal->set(IntlCalendar::FIELD_MONTH, 8); //9ème mois, Ramadan
$cal->set(IntlCalendar::FIELD_DAY_OF_MONTH, 1); //1er jour
$cal->clear(IntlCalendar::FIELD_HOUR_OF_DAY);
$cal->clear(IntlCalendar::FIELD_MINUTE);
$cal->clear(IntlCalendar::FIELD_SECOND);
$cal->clear(IntlCalendar::FIELD_MILLISECOND);

echo "Dans l'année Islamique, le Ramadan commence le :\n\t",
        $formatter->format($cal), "\n";

//C'est le décalage horaire du formater qui est utilisé ici :
$formatter->setTimeZone('Asia/Tokyo');
echo "Après modification du décalage horaire :\n\t",
        $formatter->format($cal), "\n";

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Dans l'année Islamique, le Ramadan commence le :
    mardi 9 juillet 2013 19:00:00 heure avancée d’Europe centrale
Après modification du décalage horaire :
    mercredi 10 juillet 2013 02:00:00 heure normale du Japon

]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>datefmt_create</function></member>
    <member><function>datefmt_parse</function></member>
    <member><function>datefmt_get_error_code</function></member>
    <member><function>datefmt_get_error_message</function></member>
    <member><function>datefmt_format_object</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
