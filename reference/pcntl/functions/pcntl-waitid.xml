<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 18aa2012f6fa1e5b09733147e02911d16e06d4a1 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.pcntl-waitid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_waitid</refname>
  <refpurpose>Attends qu'un processus enfant change d'état</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pcntl_waitid</methodname>
   <methodparam choice="opt"><type>int</type><parameter>idtype</parameter><initializer><constant>P_ALL</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>id</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">info</parameter><initializer>[]</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>WEXITED</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Récupère les informations de statut relatives à la terminaison, l'arrêt et/ou la
   poursuite d'un des processus enfant du processus appelant.
  </para>

  <para>
   Sauf si le drapeau <constant>WNOHANG</constant> est passé, le processus appelant
   sera bloqué jusqu'à ce qu'une erreur survienne, ou que des informations de
   status deviennent disponibles qui satisfont toutes les conditions suivantes :
   <itemizedlist>
    <listitem>
     <simpara>
      Le status de l'information provient d'un des processus enfant dans l'ensemble
      des processus enfants spécifiés par les arguments <parameter>idtype</parameter>
      et <parameter>id</parameter>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Le changement d'état dans l'information de statut correspond à un des drapeaux
      de changement d'état définis dans l'argument <parameter>flags</parameter>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Si des informations de statut correspondantes sont disponibles avant l'appel à
   <function>pcntl_waitid</function>, le retour sera immédiat. Si des informations
   de statut correspondantes sont disponibles pour deux processus enfants ou plus,
   l'ordre dans lequel leur statut est rapporté est indéterminé.
  </para>

  <note>
   <para>
    Cette documentation couvre la spécification POSIX de la fonction
    <literal>waitid</literal>, avec quelques paramètres supplémentaires spécifiques
    aux implémentations sur Linux, NetBSD et FreeBSD. Veuillez consulter la page
    manuel de votre système <literal>waitid(2)</literal> pour des détails spécifiques
    sur le fonctionnement de <literal>waitid</literal> sur votre système.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>idtype</parameter></term>
    <term><parameter>id</parameter></term>
    <listitem>
     <simpara>
      Les arguments <parameter>idtype</parameter> et <parameter>id</parameter> sont
      utilisés pour spécifier quels enfants attendre.
     </simpara>
     <table>
      <title>Argument standard POSIX <parameter>idtype</parameter> et <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Si <parameter>idtype</parameter> est <literal>P_ALL</literal></entry>
         <entry>
          attend n'importe quel processus enfant, <parameter>id</parameter> est ignoré.
         </entry>
        </row>
        <row>
         <entry>Si <parameter>idtype</parameter> est <literal>P_PID</literal></entry>
         <entry>
          attend le processus enfant avec l'identifiant de processus égal à <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>Si <parameter>idtype</parameter> est <literal>P_PGID</literal></entry>
         <entry>
          attend n'importe quel processus enfant avec l'identifiant de groupe de processus égal à <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Arguments spécifiques à Linux <parameter>idtype</parameter> et <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Si <parameter>idtype</parameter> est <literal>P_PIDFD</literal> (depuis Linux 5.4)</entry>
         <entry>
          attend le processus enfant référencé par le descripteur de fichier PID spécifié dans
          <parameter>id</parameter>.
          (Voir la page manuel Linux <literal>pidfd_open(2)</literal> pour plus d'informations
          sur les descripteurs de fichier PID.)
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Arguments spécifiques à NetBSD et FreeBSD <parameter>idtype</parameter> et <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Si <parameter>idtype</parameter> est <literal>P_UID</literal>
         </entry>
         <entry>
          attend les processus dont l'identifiant d'utilisateur effectif est égal à
          <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Si <parameter>idtype</parameter> est <literal>P_GID</literal>
         </entry>
         <entry>
          attend les processus dont l'identifiant de groupe effectif est égal à
          <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Si <parameter>idtype</parameter> est <literal>P_SID</literal>
         </entry>
         <entry>
          attend les processus dont l'identifiant de session est égal à
          <parameter>id</parameter>.
          Si le processus enfant a démarré sa propre session, son identifiant de session
          sera le même que son identifiant de processus. Sinon, l'identifiant de session
          d'un processus enfant correspondra à l'identifiant de session de l'appelant.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Arguments spécifiques à FreeBSD <parameter>idtype</parameter> et <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Si <parameter>idtype</parameter> est <literal>P_JAILID</literal>
         </entry>
         <entry>
          attend les processus dans une prison dont l'identifiant de prison est égal à
          <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>info</parameter></term>
    <listitem>
     <para>
      Le paramètre <parameter>info</parameter> est défini comme un tableau
      contenant des informations sur le signal.
     </para>
     <para>
      <parameter>info</parameter> peut contenir les clés suivantes :
      <simplelist>
       <member><literal>signo</literal>: Nombre du signal</member>
       <member><literal>errno</literal>: Numéro d'erreur système</member>
       <member><literal>code</literal>: Code de signal</member>
       <member><literal>status</literal>: Valeur de sortie ou signal</member>
       <member><literal>pid</literal>: ID du processus envoyant</member>
       <member><literal>uid</literal>: ID utilisateur réel du processus envoyant</member>
       <member><literal>utime</literal>: Temps utilisateur consommé</member>
        <member><literal>stime</literal>: Temps système consommé</member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      La valeur de <parameter>flags</parameter> est la valeur de zéro ou plusieurs
      des constantes suivantes mise ensemble :
      <table>
       <title>Valeurs possibles pour <parameter>flags</parameter></title>
       <tgroup cols="2">
        <tbody>
         <row>
          <entry><constant>WCONTINUED</constant></entry>
          <entry>
           Le statut sera retourné pour tout processus enfant continué dont le statut
           n'a pas été rapporté depuis qu'il a continué à partir d'un arrêt de contrôle
           de travail ou n'a été rapporté que par des appels à
           <function>pcntl_waitid</function> avec le drapeau
           <constant>WNOWAIT</constant> défini.
          </entry>
         </row>
         <row>
          <entry><constant>WEXITED</constant></entry>
          <entry>
           Attend les processus qui ont terminé.
          </entry>
         </row>
         <row>
          <entry><constant>WNOHANG</constant></entry>
          <entry>
           Ne pas bloquer si aucun statut n'est disponible ; retourner immédiatement.
          </entry>
         </row>
         <row>
          <entry><constant>WNOWAIT</constant></entry>
          <entry>
           Garde le processus dont le statut est retourné dans
           <parameter>info</parameter> dans un état attendu. Cela n'affectera pas
           l'état du processus ; le processus peut être attendu à nouveau après
           que cet appel soit terminé.
          </entry>
         </row>
         <row>
          <entry><constant>WSTOPPED</constant></entry>
          <entry>
           Le statut sera retourné pour tout processus enfant arrêté dont le statut
           n'a pas été rapporté depuis qu'il a été arrêté ou n'a été
           rapporté que par des appels à
           <function>pcntl_waitid</function> avec le drapeau
           <constant>WNOWAIT</constant> défini.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>pcntl_waitid</function> retourne &true; si le drapeau
   <constant>WNOHANG</constant> a été spécifié et que le statut n'est pas
   disponible pour un des processus spécifiés par <parameter>idtype</parameter>
   et <parameter>id</parameter>.
  </para>

  <para>
   <function>pcntl_waitid</function> renvoie &true; en raison du changement
   de l'état de l'un de ses enfants.
  </para>

  <para>
   Sinon &false; est retourné et <function>pcntl_get_last_error</function>
   peut être utilisé pour obtenir le numéro d'erreur <literal>errno</literal>.
  </para>

  <note>
   <para>
    Une fois qu'un numéro d'erreur <literal>errno</literal> a été obtenu,
    <function>pcntl_strerror</function> peut être utilisé pour obtenir le message
    texte associé.
   </para>
  </note>
 </refsect1>

  <refsect1 role="errors">
  &reftitle.errors;
  <table>
   <title>Valeurs d'erreur numéro (<literal>errno</literal>)</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry><constant>ECHILD</constant></entry>
      <entry>
       Le processus appelant n'a pas de processus non attendu enfant.
      </entry>
     </row>
     <row>
      <entry><constant>EINTR</constant></entry>
      <entry>
       <function>pcntl_waitid</function> a été interrompu par un signal.
      </entry>
     </row>
     <row>
      <entry><constant>EINVAL</constant></entry>
      <entry>
       Une valeur invalide a été spécifiée pour <parameter>flags</parameter>, ou
       <parameter>idtype</parameter> et <parameter>id</parameter> spécifient un
       ensemble invalide de processus.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_waitpid</function></member>
    <member><function>pcntl_wait</function></member>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
