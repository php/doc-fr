<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ed1aff13602c94f86344bdd7c4fbc31f5a71bf84 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.odbc-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_prepare</refname>
  <refpurpose>Prépare une commande pour l'exécution</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Odbc\Result</type><type>false</type></type><methodname>odbc_prepare</methodname>
   <methodparam><type>Odbc\Connection</type><parameter>odbc</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   Prépare une commande pour l'exécution. &odbc.result.object; peut être utilisé plus
   tard pour exécuter la commande avec <function>odbc_execute</function>.
  </para>
  <para>
   Quelques bases de données (comme IBM DB2, MS SQL Server et Oracle)
   supportent les procédures stockées qui acceptent les types de paramètres
   IN, INOUT et OUT comme définis dans les spécifications ODBC. Cependant,
   le driver unifié ODBC supporte actuellement uniquement le type de paramètres
   IN pour les procédures stockées.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>odbc</parameter></term>
     <listitem>
      &odbc.connection.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La requête à préparer.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &odbc.result.object-return; si la commande SQL a été
   préparée avec succès. Retourne &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &odbc.changelog.connection-param;
     &odbc.changelog.result-return;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>odbc_prepare</function> et <function>odbc_execute</function></title>
    <para>
     Dans le code suivant, <varname>$res</varname> ne sera
     valide uniquement si les trois paramètres pour <literal>myproc</literal>
     sont des paramètres IN :
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;
$c = 3;
$stmt = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$res  = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Si vous devez appeler une procédure stockée utilisant des paramètres
   INOUT ou OUT, il est recommandé d'utiliser l'extension native de votre
   base de données
   (par exemple <link linkend="ref.oci8">oci8</link> pour Oracle).
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>odbc_execute</function></member>
   </simplelist>
   </para>
  </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
