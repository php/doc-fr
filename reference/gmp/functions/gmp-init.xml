<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c75f19c74fa3b64abfafd7a35aaa652b07834a5a Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.gmp-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>gmp_init</refname>
  <refpurpose>Crée un nombre GMP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>GMP</type><methodname>gmp_init</methodname>
   <methodparam><type class="union"><type>int</type><type>string</type></type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crée un nombre GMP, à partir d'un entier ou d'une chaîne.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>num</parameter></term>
    <listitem>
     <simpara>
      Un entier ou une chaîne de caractères. La chaîne peut être une
      représentation décimale, hexadécimale ou octale.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>base</parameter></term>
    <listitem>
     <simpara>
      La base à utiliser pour convertir une représentation sous forme de <type>string</type>.
     </simpara>
     <simpara>
      Une base explicite peut être comprise entre <literal>2</literal> et <literal>62</literal>.
      Pour les bases jusqu'à <literal>36</literal>, la casse est ignorée :
      les lettres majuscules et minuscules ont la même valeur.
      Pour les bases de <literal>37</literal> à <literal>62</literal>,
      les lettres majuscules représentent les valeurs de <literal>10</literal> à
      <literal>35</literal> et les lettres minuscules représentent les valeurs de
      <literal>36</literal> à <literal>61</literal>.
     </simpara>
     <simpara>
      Si <parameter>base</parameter> vaut <literal>0</literal>, alors la base réelle
      est déterminée à partir des caractères initiaux de <parameter>num</parameter>.
      Si les deux premiers caractères sont <literal>0x</literal> ou <literal>0X</literal>,
      la chaîne est interprétée comme un entier hexadécimal.
      Si les deux premiers caractères sont <literal>0b</literal> ou <literal>0B</literal>,
      la chaîne est interprétée comme un entier binaire.
      Si les deux premiers caractères sont <literal>0o</literal> ou <literal>0O</literal>,
      la chaîne est interprétée comme un entier octal.
      De plus, si le premier caractère est <literal>0</literal>, la chaîne
      est également interprétée comme un entier octal.
      Dans tous les autres cas, la chaîne est interprétée comme un entier décimal.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &gmp.return;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       La prise en charge des préfixes octaux explicites <literal>0o</literal> et
       <literal>0O</literal> a été ajoutée pour les chaînes de caractères
       <parameter>num</parameter>. L'interprétation de ces préfixes lorsque
       <parameter>base</parameter> vaut <literal>0</literal> a également été ajoutée.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Création d'un nombre GMP</title>
    <programlisting role="php">
     <![CDATA[
     <?php
     $a = gmp_init(123456);
     $b = gmp_init("0xFFFFDEBACDFEDF7200");
     ?>
     ]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Il n'est pas nécessaire d'appeler cette fonction pour utiliser les entiers 
    ou les chaînes à la place de nombre GMP dans les fonctions GMP, comme 
    <function>gmp_add</function>. Les arguments de ces fonctions sont 
    automatiquement convertis en nombres GMP, si cette conversion est possible 
    et nécessaire, en utilisant les mêmes règles que <function>gmp_init</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>GMP::__construct</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
