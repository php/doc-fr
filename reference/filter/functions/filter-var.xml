<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 53054bf8decc8648cf2e90a493692a161e2371af Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.filter-var" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_var</refname>
  <refpurpose>Filtre une variable avec un filtre spécifique</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>filter_var</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>filter</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>

  <simpara>
   Filtrer une variable en utilisant un filtre de validation
   <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>,
   un filtre de purification
   <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>,
   ou un filtre personalisé.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <simpara>
      La valeur à filtrer.
     </simpara>
     <warning>
      <simpara>
       Les valeurs scalaire sont
       <link linkend="language.types.string.casting">convertie en string</link>
       en interne avant d'être filtré.
      </simpara>
     </warning>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>filter</parameter></term>
    <listitem>
     <simpara>
      Le filtre à appliquer.
      Peut-être un filtre de validation en utilisant une des constantes
      <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>,
      un filtre de purification en utilisant une des constantes
      <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>,
      ou <constant>FILTER_UNSAFE_RAW</constant>, ou un filtre personalisé
      en utilisant <constant>FILTER_CALLBACK</constant>.
     </simpara>
     <note>
      <simpara>
       Le filtre par défaut est <constant>FILTER_DEFAULT</constant>,
       qui est un alias de <constant>FILTER_UNSAFE_RAW</constant>.
       Ceci resulte en aucun filtrage par default.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     <simpara>
      Soit un <type>array</type> associatif d'option,
      soit un masque de bit des constantes des drapeaux de filtrage
      <constant>FILTER_FLAG_<replaceable>*</replaceable></constant>.
     </simpara>
     <simpara>
      Si le <parameter>filter</parameter> accepte des options,
      les drapeaux peuvent être fournis en utilisant la clé
      <literal>"flags"</literal> du tableau.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   En cas de succès retourne les données filtrées.
   En cas d'échec &false; est retourné,
   sauf si le drapeau <constant>FILTER_NULL_ON_FAILURE</constant> est utilisé,
   auquel cas &null; est retourné.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Un example pour <function>filter_var</function></title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(filter_var('bob@example.com', FILTER_VALIDATE_EMAIL));
var_dump(filter_var('https://example.com', FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(15) "bob@example.com"
bool(false)
]]>
   </screen>
  </example>

  <example>
   <title>Un exemple validant les entrées d'un tableau</title>
   <programlisting role="php">
<![CDATA[
<?php
$emails = [
    "bob@example.com",
    "test@example.local",
    "invalidemail"
];

var_dump(filter_var($emails, FILTER_VALIDATE_EMAIL, FILTER_REQUIRE_ARRAY));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(3) {
  [0]=>
  string(15) "bob@example.com"
  [1]=>
  string(18) "test@example.local"
  [2]=>
  bool(false)
}
]]>
   </screen>
  </example>

  <example>
   <title>Exemple fournissant un tableau pour <parameter>options</parameter></title>
   <programlisting role="php">
<![CDATA[
<?php

$options = [
    'options' => [
        'min_range' => 10,
    ],
    'flags' => FILTER_FLAG_ALLOW_OCTAL,
];

var_dump(filter_var('0755', FILTER_VALIDATE_INT, $options));
var_dump(filter_var('011', FILTER_VALIDATE_INT, $options));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(493)
bool(false)
]]>
   </screen>
  </example>

  <example>
   <title>Fournir les drapeaux soit directement, soit à l'aide d'un <type>array</type></title>
   <programlisting>
<![CDATA[

$str = 'string';

var_dump(filter_var($str, FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE));
var_dump(filter_var($str, FILTER_VALIDATE_BOOLEAN, ['flags' => FILTER_NULL_ON_FAILURE]));

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
NULL
NULL
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>filter_var_array</function></member>
   <member><function>filter_input</function></member>
   <member><function>filter_input_array</function></member>
   <member>
    Les filtres de validation
    <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>
   </member>
   <member>
    Les filtres de purification
    <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
