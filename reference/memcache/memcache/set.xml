<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="memcache.set" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::set</refname>
  <refname>memcache_set</refname>
  <refpurpose>Stocke des données dans le serveur de cache</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>memcache_set</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::set</function> stocke l'élément <parameter>var</parameter>
   avec la clé <parameter>key</parameter> sur le serveur de cache.
   Le paramètre <parameter>expire</parameter> représente le délai en secondes
   d'expiration de l'élément. S'il vaut 0, l'élément n'expirera jamais (mais le serveur
   de cache ne garantie pas que cet élément sera toujours stocké, il peut être
   effacé du cache pour faire de la place à d'autres éléments).
   Vous pouvez utiliser la constante <constant>MEMCACHE_COMPRESSED</constant> 
   comme valeur du paramètre <parameter>flag</parameter> 
   si vous voulez utiliser la compression à la volée (utilisation de la bibliothèque zlib).
   <note>
    <para>
     Souvenez-vous que les ressources (i.e. identifiant de fichiers ou de connexion)
     ne peuvent pas être stockées dans le cache, car elles ne peuvent pas être
     représentées linéairement.
    </para> 
   </note>
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clé qui sera associée avec l'élément.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       La variable à enregistrer. Les chaînes de caractères et les entiers
       sont enregistrés comme tels, les autres types sont enregistrés de
       manière sérialisée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flag</parameter></term>
     <listitem>
      <para>
       Utilisez <constant>MEMCACHE_COMPRESSED</constant> pour enregistrer
       l'élément compressé (utilise zlib).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expire</parameter></term>
     <listitem>
      <para>
       Temps d'expiration pour l'élément. S'il égal &zero;, l'élément n'expirera
       jamais. Vous pouvez aussi utiliser un timestamp Unix ou un nombre de
       seconde en commençant par la date d'aujourd'hui, mais dans le dernier
       cas, le nombre de secondes ne doit pas excéder 2592000 (30 jours).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API procédurale */

/* connexion au serveur de cache */
$memcache_obj = memcache_connect('memcache_host', 11211);

/*
définie la valeur de l'élément identifié par la clé 'var_key' ;
utilisation de la valeur 0 pour le flag ;
la compression n'est pas utilisée ;
le délai d'expiration vaut 30 secondes
*/
memcache_set($memcache_obj, 'var_key', 'quelques variables', 0, 30);

echo memcache_get($memcache_obj, 'var_key');

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemple avec <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API orientée objet */

$memcache_obj = new Memcache;

/* connexion au serveur de cache */
$memcache_obj->connect('memcache_host', 11211);

/*
définie la valeur de l'élément identifié par la clé 'var_key' ;
utilisation de la compression à la volée ;
le délai d'expiration vaut 50 secondes
*/
$memcache_obj->set('var_key', 'quelques grosses variables', MEMCACHE_COMPRESSED, 50);

echo $memcache_obj->get('var_key');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::add</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
