<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 888d70d7d21713f7f52d497e627543dfb41fc103 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="snmp.set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SNMP::set</refname>
  <refpurpose>Définit la valeur d'un objet SNMP</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;

  <methodsynopsis role="SNMP">
   <modifier>public</modifier> <type>bool</type><methodname>SNMP::set</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>objectId</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>type</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Demande à l'agent distant <acronym>SNMP</acronym> de définir la valeur
   d'un ou plusieurs objets SNMP spécifiés par son identifiant
   <parameter>objectId</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <para>
    Si <parameter>objectId</parameter> est une &string;, alors
    les paramètres <parameter>type</parameter> et <parameter>value</parameter>
    doivent aussi être une &string;. Si <parameter>objectId</parameter>
    est un &array;, le paramètre <parameter>value</parameter> doit être un
    tableau de même taille contenant les valeurs correspondantes, et le
    paramètre <parameter>type</parameter> pourra être soit une &string; (sa
    valeur sera utilisée pour toutes les paires
    <parameter>objectId</parameter>-<parameter>value</parameter>) ou bien
    un tableau de même taille avec des paires OID-valeur. Lorsqu'une autre
    combinaison de paramètres est fournie, des alertes de niveau
    E_WARNING peuvent être émises avec une description détaillée.
   </para>
   <varlistentry>
    <term><parameter>objectId</parameter></term>
    <listitem>
     <para>
      L'identifiant de l'objet SNMP.
     </para>
     <para>
      Lorsque le nombre d'OIDs dans le tableau object_id est supérieur
      à la propriété max_oids de l'objet, la méthode devra utiliser plusieurs
      requêtes pour effectuer les mises à jour demandées. Dans ce cas,
      la vérification du type et de la valeur est effectuée par morceau,
      aussi, la seconde requête (et les autres sous-requêtes) échouera
      en raison d'un mauvais type ou d'une mauvaise valeur pour l'OID demandé.
      Afin de repérer ce comportement, une alerte est émise lorsque le nombre
      d'OIDs dans le tableau object_id est supérieur à la propriété max_oids.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     &snmp.set.type.values;
     &snmp.set.type.values.asn.mapping;
     &snmp.set.type.values.equal.note;
     &snmp.set.type.values.bitset.note;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      La nouvelle valeur.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 &snmp.methods.exceptions_enable.refsect;
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="snmp.set.example.basic">
   <title>Définit un seul identifiant d'objet <acronym>SNMP</acronym></title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set('SNMPv2-MIB::sysContact.0', 's', "Nobody");
?>
]]>
   </programlisting>
  </example>
  <example xml:id="snmp.set.example.multiple">
   <title>Définit plusieurs valeurs en utilisant un seul appel à la méthode <methodname>SNMP::set</methodname>
    call</title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set(array('SNMPv2-MIB::sysContact.0', 'SNMPv2-MIB::sysLocation.0'), array('s', 's'), array("Nobody", "Nowhere"));
// ou
  $session->set(array('SNMPv2-MIB::sysContact.0', 'SNMPv2-MIB::sysLocation.0'), 's', array("Nobody", "Nowhere"));
?>
]]>
   </programlisting>
  </example>
  <example xml:id="snmp.set.example.bits">
   <title>Exemple avec <methodname>SNMP::set</methodname> pour configurer l'identifiant d'objet <acronym>SNMP</acronym> BITS</title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set('FOO-MIB::bar.42', 'b', '0 1 2 3 4');
// ou
  $session->set('FOO-MIB::bar.42', 'x', 'F0');
?>
 ]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SNMP::get</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
