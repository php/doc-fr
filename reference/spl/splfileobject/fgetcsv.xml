<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f1eb91d07d2df082384b3f83c9d2a0dc1e439d32 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="splfileobject.fgetcsv" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>SplFileObject::fgetcsv</refname>
  <refpurpose>Récupère une ligne depuis le fichier et l'analyse comme étant des données CSV</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SplFileObject">
   <modifier>public</modifier> <type class="union"><type>array</type><type>false</type></type><methodname>SplFileObject::fgetcsv</methodname>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Récupère une ligne depuis le fichier et l'analyse comme étant des données <acronym>CSV</acronym>
   et retourne un tableau contenant tous les champs lus.
  </para>
  <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='description']//db:note/.)">
   <xi:fallback/>
  </xi:include>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       Le délimiteur de champ (un seul caractère sur un octet).
       Par défaut, <literal>,</literal> ou la valeur définie par un appel précédent à
       <methodname>SplFileObject::setCsvControl</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       Le caractère utilisé pour entourer la valeur d'un champ (un caractère d'un seul octet).
       Par défaut, ce sera un guillemet double ou bien la valeur définie en utilisant
       la méthode <methodname>SplFileObject::setCsvControl</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       Le caractère d'encadrement de champ (un seul caractère sur un octet).
       Par défaut, <literal>"</literal> ou la valeur définie par un appel précédent à
       <methodname>SplFileObject::setCsvControl</methodname>.
       Une &string; vide (<literal>""</literal>) désactive le mécanisme d'échappement propriétaire.
      </para>
      <note>
       <simpara>
        Habituellement, un <parameter>enclosure</parameter> caractère est échappé à 
        l'intérieur d'un champ en le doublant; Toutefois, le caractère 
        <parameter>escape</parameter> peut être utilisé comme une alternative. 
        Ainsi, pour les valeurs de paramètre par défaut <literal>""</literal> et 
        <literal>\"</literal> ont la même signification. Autre que de permettre 
        d'échapper le caractère <parameter>enclosure</parameter> le caractère 
        <parameter>escape</parameter> n'a pas de sens particulier; il n'est même 
        pas destiné à s'échapper.
       </simpara>
      </note>
      <warning>
       <simpara>
        À partir de PHP 8.4.0, dépendre de la valeur par défaut de
        <parameter>escape</parameter> est obsolète.
        Elle doit être fournie explicitement soit par position, soit par l'utilisation
        des <link linkend="functions.named-arguments">arguments nommés</link>,
        ou par un appel à <methodname>SplFileObject::setCsvControl</methodname>.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &warning.csv.escape-parameter;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau indexé contenant tous les champs lus, ou &false;
   si une erreur survient.
  </para>
  <note>
   <para>
    Une ligne vide d'un fichier CSV sera retourné sous la forme d'un tableau
    contenu un seul champ &null; sauf si vous utilisez
    <constant>SplFileObject::SKIP_EMPTY | SplFileObject::DROP_NEW_LINE</constant>,
    auquel cas, les lignes vides seront ignorées.
   </para>
  </note>
 </refsect1>

 <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='errors']/.)">
  <xi:fallback/>
 </xi:include>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('function.fgetcsv')/db:refsect1[@role='changelog']//db:row[db:entry[text()='8.4.0']]/.)">
       <xi:fallback/>
      </xi:include>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Le paramètre <parameter>escape</parameter> accepte désormais une chaîne de
        caractère vide afin de désactivé le mécanisme d'échapement propriétaire.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>SplFileObject::fgetcsv</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = new SplFileObject("data.csv");
while (!$file->eof()) {
    var_dump($file->fgetcsv());
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <constant>SplFileObject::READ_CSV</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = new SplFileObject("animals.csv");
$file->setFlags(SplFileObject::READ_CSV);
foreach ($file as $row) {
    list($animal, $class, $legs) = $row;
    printf("Un %s est un %s avec %d jambes\n", $animal, $class, $legs);
}
?>
]]>
    </programlisting>
    <para>Contenu de animals.csv</para>
    <programlisting role="txt">
<![CDATA[
crocodile,reptile,4
dauphin,mammifère,0
canard,oiseau,2
koala,mammifère,4
saumon,poisson,0
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Un crocodile est un reptile avec 4 jambes
Un dauphin est un mammifère avec 0 jambes
Un canard est un oiseau avec 2 jambes
Un koala est un mammifère avec 4 jambes
Un saumon est un poisson avec 0 jambes
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SplFileObject::fputcsv</methodname></member>
   <member><methodname>SplFileObject::setCsvControl</methodname></member>
   <member><methodname>SplFileObject::getCsvControl</methodname></member>
   <member><methodname>SplFileObject::setFlags</methodname></member>
   <member><constant>SplFileObject::READ_CSV</constant></member>
   <member><methodname>SplFileObject::current</methodname></member>
   <member><function>fputcsv</function></member>
   <member><function>fgetcsv</function></member>
   <member><function>str_getcsv</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
