<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d51166ca16fda8e766849505b84f9306ef443f71 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="splfileobject.fscanf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SplFileObject::fscanf</refname>
  <refpurpose>Analyse une entrée d'un fichier suivant un format donné</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SplFileObject">
   <modifier>public</modifier> <type class="union"><type>array</type><type>int</type><type>null</type></type><methodname>SplFileObject::fscanf</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lit une ligne depuis un fichier et l'analyse suivant le format
   <parameter>format</parameter> spécifié.
  </para>
  <para>
   Les espaces blancs dans la chaîne <parameter>format</parameter> correspondent
   aux espaces blancs dans la ligne du fichier.
   Ceci signifie que une tabulation (<literal>\t</literal>) dans le format
   va correspondre à un seul caractère blanc dans le flux d'entrée.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &strings.scanf.parameter.format;
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       Les valeurs optionnelles assignées.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si seul 1 paramètre est passé à cette méthode, la valeur analysée
   sera retournée sous la forme d'un tableau. Sinon, si les paramètres optionnelles
   sont passés, la fonction retournera le nombre de valeurs assignées.
   Les paramètres optionnels doivent être passés par référence.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>SplFileObject::fscanf</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = new SplFileObject("misc.txt");
while ($userinfo = $file->fscanf("%s %s %s")) {
    list ($name, $profession, $countrycode) = $userinfo;
    // Faire des opérations sur $name $profession $countrycode
}
?>
]]>
    </programlisting>
    <para>Contenu de users.txt</para>
    <programlisting role="txt">
<![CDATA[
javier   argonaut    pe
hiroshi  sculptor    jp
robert   slacker     us
luigi    florist     it
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fscanf</function></member>
    <member><function>sscanf</function></member>
    <member><function>printf</function></member>
    <member><function>sprintf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
