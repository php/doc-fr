<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ec2fe9a592f794978114ef5021db9f1d00c2e05d Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="reflectionparameter.getclass" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionParameter::getClass</refname>
  <refpurpose>Récupère un objet <classname>ReflectionClass</classname> pour le paramètre étant reflété ou &null;</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-8-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionParameter">
   <modifier>public</modifier> <type class="union"><type>ReflectionClass</type><type>null</type></type><methodname>ReflectionParameter::getClass</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Récupère un objet <classname>ReflectionClass</classname> pour le paramètre étant reflété ou &null;.
  </para>
  <para>
   À partir de PHP 8.0.0 cette fonction est obsolète et pas recommandé.
   Au lieu, utiliser <methodname>ReflectionParameter::getType</methodname>
   pour récupérer la <classname>ReflectionType</classname> de ce paramètre
   puis interroger cet objet pour déterminer le type du paramètre.
  </para>

  &warn.undocumented.func;

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un objet <classname>ReflectionClass</classname>, ou &null; si aucun type est déclaré,
   ou le type déclaré n'est pas une classe ou interface.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple d'utilisation de la classe <classname>ReflectionParameter</classname></title>
    <programlisting role="php">
<![CDATA[
<?php
function foo(Exception $a) { }

$functionReflection = new ReflectionFunction('foo');
$parameters = $functionReflection->getParameters();
$aParameter = $parameters[0];

echo $aParameter->getClass()->name;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionParameter::getDeclaringClass</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
