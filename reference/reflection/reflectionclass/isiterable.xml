<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ec2fe9a592f794978114ef5021db9f1d00c2e05d Maintainer: girgias Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="reflectionclass.isiterable" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::isIterable</refname>
  <refpurpose>Vérifie si cette classe est itérable</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionClass">
   <modifier>public</modifier> <type>bool</type><methodname>ReflectionClass::isIterable</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Vérifie si cette classe est itérable (c'est à dire qu'elle peut être utilisée dans &foreach;).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Utilisation simple de <methodname>ReflectionClass::isIterable</methodname> </title>
    <programlisting role="php">
<![CDATA[
<?php

class IteratorClass implements Iterator {
    public function __construct() { }
    public function key() { }
    public function current() { }
    function next() { }
    function valid() { }
    function rewind() { }
}
class DerivedClass extends IteratorClass { }
class NonIterator { }

function dump_iterable($class) {
    $reflection = new ReflectionClass($class);
    var_dump($reflection->isIterable());
}

$classes = array("ArrayObject", "IteratorClass", "DerivedClass", "NonIterator");

foreach ($classes as $class) {
    echo "Est ce que $class est itérable ? ";
    dump_iterable($class);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Est ce que ArrayObject est itérable ? bool(true)
Est ce que IteratorClass est itérable ? bool(true)
Est ce que DerivedClass est itérable ? bool(true)
Est ce que NonIterator est itérable ? bool(false)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::__construct</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
