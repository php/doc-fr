<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8aec8470097efbc4dec35e77671c522625f00eb0 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<phpdoc:classref xml:id="class.reflectionclass" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>La classe ReflectionClass</title>
 <titleabbrev>ReflectionClass</titleabbrev>

 <partintro>

<!-- {{{ ReflectionClass intro -->
  <section xml:id="reflectionclass.intro">
   &reftitle.intro;
   <para>
    La classe <classname>ReflectionClass</classname> rapporte des
    informations sur une classe.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="reflectionclass.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>ReflectionClass</classname>
    </ooclass>

    <classsynopsisinfo>
     <ooclass>
      <classname>ReflectionClass</classname>
     </ooclass>

     <oointerface>
      <interfacename>Reflector</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionclass.constants.is-implicit-abstract">ReflectionClass::IS_IMPLICIT_ABSTRACT</varname>
     <initializer>16</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionclass.constants.is-explicit-abstract">ReflectionClass::IS_EXPLICIT_ABSTRACT</varname>
     <initializer>32</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionclass.constants.is-final">ReflectionClass::IS_FINAL</varname>
     <initializer>64</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname linkend="reflectionclass.props.name">name</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionclass')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='ReflectionClass'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionclass')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ReflectionClass'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ ReflectionClass properties -->
  <section xml:id="reflectionclass.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="reflectionclass.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>
       Nom de la classe. En lecture seule, émets
       <classname>ReflectionException</classname> lors d'une tentative d'écriture.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->

  
<!-- {{{ ReflectionClass constants -->
  <section xml:id="reflectionclass.constants">
   &reftitle.constants;
   <section xml:id="reflectionclass.constants.modifiers">
    <title>Modificateurs de ReflectionClass</title>
    <variablelist>

     <varlistentry xml:id="reflectionclass.constants.is-implicit-abstract">
      <term><constant>ReflectionClass::IS_IMPLICIT_ABSTRACT</constant></term>
      <listitem>
       <para>
        Indique si la classe est <link linkend="language.oop5.abstract">
        abstraite</link> en raison du fait qu'elle contient quelques
        méthodes abstraites.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionclass.constants.is-explicit-abstract">
      <term><constant>ReflectionClass::IS_EXPLICIT_ABSTRACT</constant></term>
      <listitem>
       <para>
        Indique si la classe est <link linkend="language.oop5.abstract">
        abstraite</link> en raison de sa définition.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionclass.constants.is-final">
      <term><constant>ReflectionClass::IS_FINAL</constant></term>
      <listitem>
       <para>
        Indique si la classe est
        <link linkend="language.oop5.final">finale</link>.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
  </section>
<!-- }}} -->


 </partintro>

 &reference.reflection.entities.reflectionclass;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
