<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4f5e2b22575131fa5e9c3004b1c874e1acb06573 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="domdocument.createelement" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::createElement</refname>
  <refpurpose>Crée un nouveau nœud</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMDocument">
   <modifier>public</modifier> <type class="union"><type>DOMElement</type><type>false</type></type><methodname>DOMDocument::createElement</methodname>
   <methodparam><type>string</type><parameter>localName</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction crée une nouvelle instance de la classe
   <classname>DOMElement</classname>.
   &dom.node.inserted;
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Le nom du tag de l'élément.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur de l'élément. Par défaut, un élément vide sera créé.
       La valeur peut également être définie plus tard avec 
       <link linkend="domnode.props.nodevalue">DOMElement::$nodeValue</link>.
      </para>
      <para>
       La valeur est utilisé textuellement à l'exception des références d'entités 
       &lt; et &gt; qui seront échappées. Notez que &amp; doit être échappé manuellement ;
       sinon ceci est considéré comme le début d'une référence d'entité. De plus " ne
       sera pas échappé.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une nouvelle instance de la classe 
   <classname>DOMElement</classname> ou &false;
   si une erreur survient.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_INVALID_CHARACTER_ERR</constant></term>
     <listitem>
      <para>
       Lancé si <parameter>localName</parameter> contient un caractère invalide.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Création d'un nouvel élément et insertion en tant que racine</title>
    <programlisting role="php">
<![CDATA[
<?php

$dom = new DOMDocument('1.0', 'utf-8');

$element = $dom->createElement('test', 'Ceci est l\'élément racine !');

// Nous insérons le nouvel élément en tant que racine (enfant du document)
$dom->appendChild($element);

echo $dom->saveXML();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<test>Ceci est l'élément racine !</test>
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Passer comme <parameter>value</parameter> du texte contenant &amp; non échappé</title>
    <programlisting role="php">
<![CDATA[
<?php
$dom = new DOMDocument('1.0', 'utf-8');
$element = $dom->createElement('foo', 'me & you');
$dom->appendChild($element);
echo $dom->saveXML();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Warning: DOMDocument::createElement(): unterminated entity reference             you in /in/BjTCg on line 4
<?xml version="1.0" encoding="utf-8"?>
<foo/>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    La valeur <parameter>value</parameter> ne sera <emphasis>pas</emphasis>
    échappée. Utilisez la méthode <methodname>DOMDocument::createTextNode</methodname>
    pour créer un nœud de texte avec le <emphasis>support de l'échappement</emphasis>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMNode::appendChild</methodname></member>
    <member><methodname>DOMDocument::createAttribute</methodname></member>
    <member><methodname>DOMDocument::createAttributeNS</methodname></member>
    <member><methodname>DOMDocument::createCDATASection</methodname></member>
    <member><methodname>DOMDocument::createComment</methodname></member>
    <member><methodname>DOMDocument::createDocumentFragment</methodname></member>
    <member><methodname>DOMDocument::createElementNS</methodname></member>
    <member><methodname>DOMDocument::createEntityReference</methodname></member>
    <member><methodname>DOMDocument::createProcessingInstruction</methodname></member>
    <member><methodname>DOMDocument::createTextNode</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
