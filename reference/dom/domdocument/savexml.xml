<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4f5e2b22575131fa5e9c3004b1c874e1acb06573 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="domdocument.savexml" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::saveXML</refname>
  <refpurpose>
   Sauvegarde l'arbre interne XML dans une chaîne de caractères
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMDocument">
   <modifier>public</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>DOMDocument::saveXML</methodname>
   <methodparam choice="opt"><type class="union"><type>DOMNode</type><type>null</type></type><parameter>node</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crée un document XML depuis la représentation DOM. Cette fonction est habituellement
   appelée après la création d'un tout nouveau document DOM, comme dans l'exemple
   ci-dessous.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       Utilisez ce paramètre pour afficher uniquement un nœud spécifique sans déclaration XML
       plutôt que la totalité du document.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Options additionnelles. Actuellement, seul
       <link linkend="libxml.constants">LIBXML_NOEMPTYTAG</link> est supporté.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le XML ou &false; si une erreur survient.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Lancé si <parameter>node</parameter> est issu d'un autre document.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Sauvegarde de l'arbre DOM dans une chaîne de caractères</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument('1.0');
// nous voulons un joli affichage
$doc->formatOutput = true;

$root = $doc->createElement('book');
$root = $doc->appendChild($root);

$title = $doc->createElement('title');
$title = $root->appendChild($title);

$text = $doc->createTextNode('Ceci est le titre');
$text = $title->appendChild($text);

echo "Récupération de tout le document :\n";
echo $doc->saveXML() . "\n";

echo "Récupération du titre, uniquement :\n";
echo $doc->saveXML($title);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Récupération de tout le document :
<?xml version="1.0"?>
<book>
  <title>Ceci est le titre</title>
</book>

Récupération du titre, uniquement :
<title>Ceci est le titre</title>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMDocument::save</methodname></member>
    <member><methodname>DOMDocument::load</methodname></member>
    <member><methodname>DOMDocument::loadXML</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
