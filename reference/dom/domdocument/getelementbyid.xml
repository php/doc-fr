<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4f5e2b22575131fa5e9c3004b1c874e1acb06573 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="domdocument.getelementbyid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::getElementById</refname>
  <refpurpose>Cherche un élément avec un certain identifiant</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMDocument">
   <modifier>public</modifier> <type class="union"><type>DOMElement</type><type>null</type></type><methodname>DOMDocument::getElementById</methodname>
   <methodparam><type>string</type><parameter>elementId</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction est similaire à la fonction
   <xref linkend="domdocument.getelementsbytagname"/> 
   mais cherche un élément avec un identifiant donné.
  </para>
  <para>
   Pour que cette fonction fonctionne, vous devez soit définir les attributs ID
   avec <xref linkend="domelement.setidattribute"/>
   ou définir une DTD qui définit un attribut devant être de type ID.
   Dans le dernier cas, vous devez valider votre document avec
   <xref linkend="domdocument.validate"/>
   ou <link linkend="domdocument.props.validateonparse">DOMDocument::$validateOnParse</link>
   avant d'utiliser cette fonction.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>elementId</parameter></term>
     <listitem>
      <para>
       La valeur de l'identifiant unique pour un élément.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un <classname>DOMElement</classname> ou &null; si l'élément
   n'est pas trouvé.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec DOMDocument::getElementById()</title>
   &dom.book.example;
   <programlisting role="php">
<![CDATA[
<?php

$doc = new DomDocument;

// Nous devons valider notre document avant de nous référer à l'ID
$doc->validateOnParse = true;
$doc->Load('book.xml');

echo "L'élément dont l'ID est 'php-basics' est : " . $doc->getElementById('php-basics')->tagName . "\n";

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
L'élément dont l'ID est 'php-basics' est : chapter
]]>
   </screen>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMDocument::getElementsByTagName</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
