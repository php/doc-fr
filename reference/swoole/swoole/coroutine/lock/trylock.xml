<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 93e05c681bfdbfdd60cec941173c6fe8e8c95cf6 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="swoole-coroutine-lock.trylock" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Swoole\Coroutine\Lock::trylock</refname>
  <refpurpose>Essaie d'acquérir le verrou sans bloquer</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Swoole\Coroutine\Lock::trylock</methodname>
   <void />
  </methodsynopsis>
  <para>
   Lors de l'appel de l'opération de verrouillage, si le verrou est déjà détenu par une autre coroutine,
   la fonction renverra immédiatement false sans suspendre la coroutine actuelle
   ou céder le contrôle du CPU. Cette conception non-bloquante permet à l'appelant de gérer de manière flexible
   les situations de contention, telles que la réessayer, abandonner ou exécuter d'autres logiques.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Renvoie <literal>true</literal> si le verrou a été acquis avec succès,
   <literal>false</literal> si le verrou n'est pas disponible.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
