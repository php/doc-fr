<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: dbdea7f23e6c3ea5944bd1bcb1a59888116e3a12 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
   <title>&ConfigureOptions;</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
    </row>
   </thead>
    <tbody>
    <row>
     <entry><link linkend="ini.assert.active">assert.active</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé à partir de PHP 8.0.0</entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Antérieur à PHP 8.0.0, la valeur par défaut est <literal>"0"</literal></entry>
    </row>
    <row>
     <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>&removed.php.future;</entry>
    </row>
    <row>
     <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
     <entry>"30"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
     <entry>"64"</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
     <entry>1000</entry>
     <entry>PHP_INI_PERDIR</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 &ini.descriptions.title;
 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Active les évaluations de type <function>assert</function>.
      <link linkend="ini.zend.assertions">zend.assertions</link> devrait être
      utilisé à la place pour contrôler le comportement de <function>assert</function>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Termine le script si une assertion échoue.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Émet une alerte PHP pour chaque assertion qui échoue.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Fonction définie par le programmeur, à appeler pour chaque
      assertion échouée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      Utilise la configuration courante de <function>error_reporting</function>
      durant les évaluations d'assertions. Si activée, aucune erreur n'est
      affichée (error_reporting(0) implicite) durant l'évaluation. Si désactivée,
      les erreurs sont affichées en fonction de la configuration de
      <function>error_reporting</function>
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Lève une exception <classname>AssertionError</classname> lors d'une 
      assertion échouée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
      <parameter>enable_dl</parameter>
      <type>bool</type>
    </term>
    <listitem>
     <para>
      Cette directive permet d'activer ou de désactiver
      le chargement dynamique d'extension PHP avec la fonction PHP <function>dl</function>.
     </para>
     <para>
      La raison principale pour désactiver ce système est la sécurité.
      Avec le chargement dynamique, il est possible de passer outre
      les restrictions imposées par 
      <link linkend="ini.open-basedir">open_basedir</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      Fixe le temps maximal d'exécution d'un script,
      en secondes. Cela permet d'éviter que des scripts en
      boucles infinies saturent le serveur. La configuration par
      défaut est de <literal>30</literal> secondes. Lorsque PHP
      fonctionne depuis la <link linkend="features.commandline">ligne
      de commande</link>, la valeur par défaut est <literal>0</literal>.
     </para>
     <para>
      Sur les systèmes non-Windows, le temps d'exécution maximum n'est pas affecté par
      des appels systèmes tels que <function>sleep</function>.
      Reportez-vous à la fonction <function>set_time_limit</function>
      pour plus de détails.
     </para>
     <para>
      Votre serveur web peut avoir d'autres configurations de la durée limite
      d'exécution qui peuvent également interrompre PHP. Apache a une directive
      <literal>Timeout</literal> et IIS a une fonction CGI pour cela.
      Par défaut, elles valent toutes les deux 300 secondes. Reportez-vous
      à la documentation de votre serveur web pour plus de détails.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      Cette option spécifie la durée maximale pour analyser
      les données d'entrée, comme POST et GET.
      Cette durée est mesurée depuis le moment où PHP est invoqué sur le 
      serveur jusqu'au début de l'exécution du script.
      La valeur par défaut est <literal>-1</literal>, ce qui veut dire que
      <link linkend="ini.max-execution-time">max_execution_time</link>
      est utilisé à la place. Régler la valeur à <literal>0</literal> pour permettre une exécution illimité.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Définit la profondeur maximale des
      <link linkend="language.variables.external">variables d'entrées</link> (i.e.
      <varname>$_GET</varname>, <varname>$_POST</varname>..)
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Le nombre de <link linkend="language.variables.external">variables d'entrée</link>
      pouvant être acceptées (cette limite est appliquée aux variables
      superglobales $_GET, $_POST et $_COOKIE, séparément). L'utilisation de cette directive
      permet de limiter les possibilités d'attaque par déni de service
      utilisant des collisions de hachages. S'il y a plusieurs de variables
      en entrée que le nombre spécifié par cette directive, une
      alerte de type <constant>E_WARNING</constant> sera émise, et les
      variables en trop seront supprimées de la requête.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Active ou désactive la collecte des références circulaires.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
