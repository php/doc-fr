<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e947f2e12b1e321d67f6560c5f2884e6d885858f Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.getrusage" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>getrusage</refname>
  <refpurpose>Retourne le niveau d'utilisation des ressources</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getrusage</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   C'est une interface à la fonction système <command>getrusage(2)</command>.
   Elle retourne un tableau associatif contenant les informations
   renvoyées par cet appel système.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Si <parameter>mode</parameter> est égal à 1,
       <function>getrusage</function> sera appelé avec
       le paramètre <constant>RUSAGE_CHILDREN</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif contenant les données retournées depuis
   l'appel système. Toutes les entrées sont accessibles en utilisant leurs
   noms de champs documentés.
   Retourne &false; en cas d'échec.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.0</entry>
       <entry>
        Cette fonction est maintenant supportée sous Windows.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>getrusage</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$dat = getrusage();
echo $dat["ru_oublock"];       // nombre d'opération de block de sortie
echo $dat["ru_inblock"];       // nombre d'opération de block d'entrée
echo $dat["ru_msgsnd"];        // nombre de messages IPC envoyé
echo $dat["ru_msgrcv"];        // nombre de messages IPC reçu
echo $dat["ru_maxrss"];        // taille maximale du groupe de résidents
echo $dat["ru_ixrss"];         // taille de la mémoire partagée intégrale
echo $dat["ru_idrss"];         // taille intégrale des données non partagées
echo $dat["ru_minflt"];        // nombre de page récupéré (faute de page mineure)
echo $dat["ru_majflt"];        // nombre de défauts de page (faute de page majeure)
echo $dat["ru_nsignals"];      // nombre de signaux reçu
echo $dat["ru_nvcsw"];         // nombre de changement de contexte volontaire
echo $dat["ru_nivcsw"];        // nombre de changement de contexte involontaire
echo $dat["ru_nswap"];         // taille de la mémoire swap
echo $dat["ru_utime.tv_usec"]; // temps utilisateur utilisé (en microsecondes)
echo $dat["ru_utime.tv_sec"];  // temps utilisateur utilisé (en secondes)
echo $dat["ru_stime.tv_usec"]; // temps système utilisé (en microsecondes)
echo $dat["ru_stime.tv_sec"]; // temps système utilisé (en secondes)
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Sous Windows, la fonction <function>getrusage</function> ne va retourner
    que les membres suivants :
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
     <member>
      <literal>"ru_majflt"</literal> (seulement si <parameter>mode</parameter> vaut
      <constant>RUSAGE_SELF</constant>)
     </member>
     <member>
      <literal>"ru_maxrss"</literal> (seulement si <parameter>mode</parameter> vaut
      <constant>RUSAGE_SELF</constant>)
     </member>
    </simplelist>
   </para>
   <para>
    Si <function>getrusage</function> est appelé avec le paramètre <parameter>mode</parameter>
    vallant <literal>1</literal> (<constant>RUSAGE_CHILDREN</constant>), alors l'utilisation
    de la ressource pour les threads sont collectés (ce qui signifie que, en interne,
    la fonction est appelée avec <constant>RUSAGE_THREAD</constant>).
   </para>
  </note>
  <note>
   <para>
    Sous BeOS 2000, seuls les membres suivants sont retournés :
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>La page de manuel <command>getrusage(2)</command> de votre système</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
