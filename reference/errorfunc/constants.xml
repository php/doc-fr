<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cb7c0c06545e7943b2de0c595c9e070b8027e0a6 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <simpara>
  Les constantes suivantes (soit la valeur numérique correspondante, soit leur
  nom symbolique) sont utilisées comme un masque de bits pour spécifier les erreurs à signaler.
  Il est possible d'utiliser
  <link linkend="language.operators.bitwise">les opérateurs binaires</link>
  pour combiner ces valeurs ou masquer certains types d'erreurs.
 </simpara>

 <tip>
  <simpara>
   Les noms des constantes peuvent être utilisés dans &php.ini;
   au lieu des valeurs numériques brutes auxquelles elles correspondent.
   Cependant, seuls les opérateurs
   <literal>|</literal>,
   <literal>~</literal>,
   <literal>^</literal>,
   <literal>!</literal>,
   <literal>&amp;</literal>
   sont compris dans &php.ini;.
  </simpara>
 </tip>

 <warning>
  <simpara>
   Il n'est pas possible d'utiliser les noms symboliques en dehors de PHP.
   Par exemple, dans &httpd.conf; la valeur calculée du masque de bits doit être utilisée à la place.
  </simpara>
 </warning>

 <variablelist xml:id="errorfunc.constants.errorlevels">
  <varlistentry xml:id="constant.e-error">
   <term>
    <constant>E_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erreurs fatales lors de l'exécution
     Celles-ci indiquent des erreurs dont il est impossible de se remettre,
     comme un problème d'allocation de mémoire.
     L'exécution du script est arrêtée.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>1</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-warning">
   <term>
    <constant>E_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avertissements lors de l'exécution (erreurs non fatales).
     L'exécution du script n'est pas interrompue.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>2</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-parse">
   <term>
    <constant>E_PARSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erreurs d'analyse au moment de la compilation.
     Les erreurs d'analyse devraient uniquement être générées par l'analyseur syntaxique.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>4</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-notice">
   <term>
    <constant>E_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Notifications d'exécution.
     Indiquent que le script a rencontré quelque chose qui pourrait signaler une erreur,
     mais qui pourrait aussi se produire normalement lors de l'exécution d'un script.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>8</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-error">
   <term>
    <constant>E_CORE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erreurs fatales qui surviennent lors du démarrage initial de PHP.
     C'est comme une <constant>E_ERROR</constant>,
     sauf qu'elle est générée par le cœur de PHP.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>16</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-warning">
   <term>
    <constant>E_CORE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avertissements (erreurs non fatales) qui surviennent lors du démarrage initial de PHP.
     C'est comme un <constant>E_WARNING</constant>,
     sauf qu'il est généré par le cœur de PHP.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>32</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-error">
   <term>
    <constant>E_COMPILE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erreurs fatales de compilation.
     C'est comme un <constant>E_ERROR</constant>,
     sauf qu'il est généré par le moteur de script Zend.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>64</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-warning">
   <term>
    <constant>E_COMPILE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avertissements de compilation (erreurs non fatales).
     C'est comme un <constant>E_WARNING</constant>,
     sauf qu'il est généré par le moteur de script Zend.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>128</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-deprecated">
   <term>
    <constant>E_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avis de dépréciation à l'exécution.
     Activez ceci pour recevoir des avertissements concernant du code
     qui ne fonctionnera plus dans les futures versions.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>8192</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-error">
   <term>
    <constant>E_USER_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Message d'erreur généré par l'utilisateur.
     Cela ressemble à un <constant>E_ERROR</constant>,
     sauf qu'il est généré dans le code PHP en utilisant la fonction PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>256</literal>
    </simpara>
    <warning>
     <simpara>
      L'utilisation de cette constante avec <function>trigger_error</function> est
      obsolète à partir de PHP 8.4.0.
      Il est recommandé de soit &throw; une <exceptionname>Exception</exceptionname>
      ou d'appeler <function>exit</function> à la place.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-warning">
   <term>
    <constant>E_USER_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Message d'avertissement généré par l'utilisateur.
     Cela ressemble à un <constant>E_NOTICE</constant>,
     sauf qu'il est généré dans le code PHP en utilisant la fonction PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>512</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-notice">
   <term>
    <constant>E_USER_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Message de notification généré par l'utilisateur.
     Cela ressemble à un <constant>E_NOTICE</constant>,
     sauf qu'il est généré dans le code PHP en utilisant la fonction PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>1024</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-deprecated">
   <term>
    <constant>E_USER_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Message de dépréciation généré par l'utilisateur.
     Cela ressemble à un <constant>E_DEPRECATED</constant>,
     sauf qu'il est généré dans le code PHP en utilisant la fonction PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>16384</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-strict">
   <term>
    <constant>E_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Suggestions d'exécution émises par PHP concernant le code exécuté
     pour garantir la compatibilité future.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>2048</literal>
    </simpara>
    <warning>
     <simpara>
      Ce niveau d'erreur n'est pas utilisé,
      et a été déprécié à partir de PHP 8.4.0.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-recoverable-error">
   <term>
    <constant>E_RECOVERABLE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     "Exceptions" de l'ancien moteur correspondant à une erreur fatale rattrapable.
     Semblable à <exceptionname>Error</exceptionname> mais doit être capturée via un
     gestionnaire d'erreurs défini par l'utilisateur (voir <function>set_error_handler</function>).
     Si elle n'est pas gérée, cela se comporte comme <constant>E_ERROR</constant>.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>4096</literal>
    </simpara>
    <note>
     <simpara>
      Ce niveau d'erreur est effectivement inutilisé,
      le seul cas où cela peut se produire est lorsque l'interprétation d'un
      &object; en tant que <type>bool</type> échoue.
      Cela ne peut se produire que pour des objets internes.
     </simpara>
     <simpara>
      L'exemple le plus courant, antérieur à PHP 8.4.0, est l'utilisation d'une
      instance <classname>GMP</classname> dans une condition.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-all">
   <term>
    <constant>E_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Masque de bits qui contient toutes les erreurs, avertissements et notifications.
    </simpara>
    <simpara>
     Valeur de la constante : <literal>32767</literal>
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
