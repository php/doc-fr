<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.socket-recvfrom" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_recvfrom</refname>
  <refpurpose>Reçoit des données d'un socket, connecté ou pas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>socket_recvfrom</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">data</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">port</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   La fonction <function>socket_recvfrom</function> reçoit
   <parameter>length</parameter> octets de données du buffer <parameter>data</parameter>
   depuis <parameter>address</parameter> sur le port <parameter>port</parameter> (si le socket
   n'est pas du type <constant>AF_UNIX</constant>), en utilisant
   <parameter>socket</parameter>. <function>socket_recvfrom</function> peut être utilisé
   pour récupérer les données depuis des sockets connectées ou non. De plus,
   un ou plusieurs drapeaux peuvent être spécifiés pour modifier ce comportement.
  </para>
  <para>
   Les paramètres <parameter>address</parameter> et <parameter>port</parameter>
   doivent être passés par référence. Si le socket n'est pas connecté,
   <parameter>address</parameter> contiendra l'adresse internet de l'hôte distant ou
   le chemin du socket Unix. Si le socket est connecté, <parameter>address</parameter>
   vaut &null;. De plus, le paramètre <parameter>port</parameter> contiendra
   le port de l'hôte distant dans le cas d'un socket <constant>AF_INET</constant> ou
   <constant>AF_INET6</constant>.
  </para>
  &note.bin-safe;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>socket</parameter> doit être une instance
       de <classname>Socket</classname> créé par <function>socket_create</function>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données récupérées seront placées dans la variable spécifiée
       par ce paramètre.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Jusqu'à <parameter>length</parameter> octets doivent être récupérés
       de l'hôte distant.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       La valeur de ce paramètre peut être une combinaison des drapeaux suivants,
       joints par un OU binaire (<literal>|</literal>).
      </para>

      <table>
       <title>Valeurs possibles pour <parameter>flags</parameter></title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Drapeau</entry>
          <entry>Description</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>MSG_OOB</constant></entry>
          <entry>
           Processus en dehors de la bande de données.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_PEEK</constant></entry>
          <entry>
           Reçoit les données depuis le début de la file de réception
           sans les supprimer de cette file.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_WAITALL</constant></entry>
          <entry>
           Bloque tant qu'au moins <parameter>length</parameter> octets n'ont pas
           été reçus. Cependant, si un signal est reçu ou l'hôte distant
           se déconnecte, la fonction pourra retourner moins de données.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_DONTWAIT</constant></entry>
          <entry>
           Lorsque ce drapeau est défini, la fonction retourne des données
           même si elle devrait rester bloquer.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Si le socket est du type <constant>AF_UNIX</constant>,
       <parameter>address</parameter> sera le chemin vers ce fichier. Sinon,
       pour les sockets non-connectés, <parameter>address</parameter> est l'adresse
       IP de l'hôte distant, ou &null; si le socket est connecté.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Cet argument ne s'applique qu'aux sockets <constant>AF_INET</constant> et
       <constant>AF_INET6</constant>, et spécifie le port distant depuis lequel
       les données sont reçues. Si la socket est connectée,
       <parameter>port</parameter> vaudra &null;.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>socket_recvfrom</function> retourne le nombre d'octets
   reçus, ou &false; si une erreur survient. Le code erreur actuel peut
   être retrouvé en appelant la fonction <function>socket_last_error</function>.
   Ce code erreur peut être passé à la fonction <function>socket_strerror</function>
   afin de récupérer une explication textuelle de l'erreur.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>socket_recvfrom</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
socket_bind($socket, '127.0.0.1', 1223);

$from = '';
$port = 0;
socket_recvfrom($socket, $buf, 12, 0, $from, $port);

echo "Réception de $buf depuis l'adresse distant $from et du port distant $port" . PHP_EOL;
?>
]]>
    </programlisting>
    <para>
     Cet exemple initialise un socket UDP sur le port 1223 de l'adresse
     127.0.0.1 et affiche au moins 12 caractères reçus depuis l'hôte distant.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_recv</function></member>
    <member><function>socket_send</function></member>
    <member><function>socket_sendto</function></member>
    <member><function>socket_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
