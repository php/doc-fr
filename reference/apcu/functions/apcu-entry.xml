<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e9366ee458b2900c53a503b1ad97664e1d9a8859 Maintainer: moradZahid Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.apcu-entry" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>apcu_entry</refname>
  <refpurpose>
   Récupère atomiquement ou génère une entrée de cache
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>apcu_entry</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>callable</type><parameter>generator</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Tente de récupérer atomiquement la valeur indexée par la clé <parameter>key</parameter>
   dans le cache. Si elle ne peut pas être récupérée, la fonction passée à
   <parameter>generator</parameter> est appelée, avec pour unique argument la valeur 
   contenue dans <parameter>key</parameter>.  La valeur de retour de l'appel est 
   ensuite mise en cache avec le paramètre optionnel <parameter>ttl</parameter>, 
   puis rend la main.
  </para>
  <note>
   <simpara>
    Lorsque le contrôle entre dans <function>apcu_entry</function> le verrou du cache est 
    acquis de façon exclusive. Il est libéré lorsque le contrôle quitte 
    <function>apcu_entry</function>: Plus précisément, le corps de la fonction passée à 
    <parameter>generator</parameter> devient une section critique, ce qui interdit à 
    deux processus d'exécuter la même partie du code concurrentiellement. En outre, il 
    interdit l'exécution concurrentielle de tout autre fonction APCu, puisqu'elle acquerra
    le même verrou.
   </simpara>
  </note>
  <warning>
   <simpara>
     La seule fonction qui peut être appelée en toute sécurité par <parameter>generator</parameter> 
     est <function>apcu_entry</function>.
   </simpara>
  </warning>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Clé d'une entrée de cache.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>generator</parameter></term>
     <listitem>
      <para>
       Un paramètre de type callable qui prend <parameter>key</parameter> pour unique argument
       et retourne la valeur à mettre en cache.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ttl</parameter></term>
     <listitem>
      <para>
       Durée de vie; stocke la variable <parameter>var</parameter> dans le cache pour
       une durée de <parameter>ttl</parameter> secondes. Après l'expiration de
       <parameter>ttl</parameter>, la variable stockée sera retirée du cache (à la 
       prochaine requête). Si aucune valeur n'est passée au paramètre 
       <parameter>ttl</parameter> (ou si la valeur de <parameter>ttl</parameter> est
       <literal>0</literal>), la variable persistera jusqu'à qu'elle soit retirée
       manuellement du cache, ou, sinon, elle échouera à sortir du cache (lors d'un 
       effaçage, redémarrage, etc.).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la valeur mise en cache.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>apcu_entry</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$config = apcu_entry("config", function($key) {
 return [
   "fruit" => apcu_entry("config.fruit", function($key){
     return [
       "apples",
       "pears"
     ];
   }), 
   "people" => apcu_entry("config.people", function($key){
     return [
      "bob",
      "joe",
      "niki"
     ];
   })
 ];
});

var_dump($config);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["fruit"]=>
  array(2) {
    [0]=>
    string(6) "apples"
    [1]=>
    string(5) "pears"
  }
  ["people"]=>
  array(3) {
    [0]=>
    string(3) "bob"
    [1]=>
    string(3) "joe"
    [2]=>
    string(4) "niki"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apcu_store</function></member>
    <member><function>apcu_fetch</function></member>
    <member><function>apcu_delete</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
