<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0f49e97eebd971ba0468bc1b7c6265fd457f60c8 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagickdraw.pathcurvetoquadraticbeziersmoothabsolute">
 <refnamediv>
  <refname>ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</refname>
  <refpurpose>Dessine une courbe de Bézier de puissance 4, en coordonnées absolues</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</methodname>
   <methodparam><type>float</type><parameter>x</parameter></methodparam>
   <methodparam><type>float</type><parameter>y</parameter></methodparam>
  </methodsynopsis>

  <para>
   Dessine une courbe de Bézier de puissance 4, en coordonnées relatives, à 
   partir du point courant (<parameter>x</parameter>, <parameter>y</parameter>). Le point de contrôle est la réflexion du
   point de contrôle sur la commande de dessin en coordonnées absolues.
   S'il n'y a pas eu de commande précédente ou si la commande précédente
   n'était pas <methodname>ImagickDraw::DrawPathCurveToQuadraticBezierAbsolute</methodname>, 
   <methodname>ImagickDraw::DrawPathCurveToQuadraticBezierRelative</methodname> ou
   <methodname>ImagickDraw::DrawPathCurveToQuadraticBezierSmoothRelative</methodname>,
   on suppose que le point de contrôle coïncide avec le point courant. 
   À la fin de la commande, le nouveau point courant devient
   le point final (<parameter>x</parameter>, <parameter>y</parameter>), utilisé par 
   le polybezier.
  </para>
  <para>
   Cette fonction ne peut pas être utilisée pour lisser une courbe de Bézier 
   cubique. Elle peut uniquement lisser une courbe quadratique.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       L'abscisse du point de fin
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       L'ordonnée du point de fin
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</methodname></title>
    <programlisting role="php">
     <![CDATA[
<?php
$draw = new \ImagickDraw();

$draw->setStrokeOpacity(1);
$draw->setStrokeColor("black");
$draw->setFillColor("blue");

$draw->setStrokeWidth(2);
$draw->setFontSize(72);

$draw->pathStart();
$draw->pathMoveToAbsolute(50,250);

// Ceci définit une courbe de Bezier quadratique avec la position courante comme
// point de départ, le point de controle correspond aux deux premiers paramètres
// et le point final aux deux derniers paramètres.
$draw->pathCurveToQuadraticBezierAbsolute(
    150,50, 
    250,250
);

// Ceci définit une courbe de Bezier quadratique avec la position courante comme
// point de départ, le point de controle est obtenu par effet miroir des points
// de controle des précedentes courbes et le point final est défini par les
// valeurs x, y.
$draw->pathCurveToQuadraticBezierSmoothAbsolute(
    450,250
);

// Ceci définit une courbe de Bezier quadratique avec la position courante comme
// point de départ, le point de controle est obtenu par effet miroir des points
// de controle des précedentes courbes et le point final est défini relativement
// à la position courante par les valeurs x, y
$draw->pathCurveToQuadraticBezierSmoothRelative(
    200,-100
);

$draw->pathFinish();

$imagick = new \Imagick();
$imagick->newImage(700, 500, $backgroundColor);
$imagick->setImageFormat("png");

$imagick->drawImage($draw);

header("Content-Type: image/png");
echo $imagick->getImageBlob();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
