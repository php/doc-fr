<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 770c6facae667218f69c8ea2715ea20f6fab32f3 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="simplexmlelement.registerxpathnamespace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::registerXPathNamespace</refname>
  <refpurpose>
   Crée un contexte préfixe/ns pour la prochaine requête XPath
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SimpleXMLElement">
   <modifier>public</modifier> <type>bool</type><methodname>SimpleXMLElement::registerXPathNamespace</methodname>
   <methodparam><type>string</type><parameter>prefix</parameter></methodparam>
   <methodparam><type>string</type><parameter>namespace</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crée un contexte préfixe/ns pour la prochaine requête XPath. En
   particulier, ceci est utile si le fournisseur du document XML donné modifie
   les préfixes d'espace de nom. <literal>registerXPathNamespace</literal>
   créera un préfixe pour l'espace de nom associé, autorisant l'accès aux
   nœuds dans cet espace de nom sans avoir besoin de changer le code pour
   autoriser les nouveaux préfixes dictés par le fournisseur.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       Le préfixe d'espace de nom à utiliser dans la requête XPath pour
       l'espace de nom donnée dans <parameter>namespace</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespace</parameter></term>
     <listitem>
      <para>
       L'espace de nom à utiliser pour la requête XPath. Ceci doit concorder
       avec un espace de nom qui est utilisé par le document XML, sinon la requête
       XPath qui utilise <parameter>prefix</parameter> ne retournera aucun
       résultat.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Fixe un préfixe d'espace de nom pour utiliser dans une requête XPath</title>
    <programlisting role="php">
<![CDATA[
<?php

$xml = <<<EOD
<book xmlns:chap="http://example.org/chapter-title">
    <title>My Book</title>
    <chapter id="1">
        <chap:title>Chapter 1</chap:title>
        <para>Donec velit. Nullam eget tellus vitae tortor gravida scelerisque. 
            In orci lorem, cursus imperdiet, ultricies non, hendrerit et, orci. 
            Nulla facilisi. Nullam velit nisl, laoreet id, condimentum ut, 
            ultricies id, mauris.</para>
    </chapter>
    <chapter id="2">
        <chap:title>Chapter 2</chap:title>
        <para>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin 
            gravida. Phasellus tincidunt massa vel urna. Proin adipiscing quam 
            vitae odio. Sed dictum. Ut tincidunt lorem ac lorem. Duis eros 
            tellus, pharetra id, faucibus eu, dapibus dictum, odio.</para>
    </chapter>
</book>
EOD;

$sxe = new SimpleXMLElement($xml);

$sxe->registerXPathNamespace('c', 'http://example.org/chapter-title');
$result = $sxe->xpath('//c:title');

foreach ($result as $title) {
  echo $title . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Chapter 1
Chapter 2
]]>
    </screen>
    <para>
     Notez comment le document XML montré dans cet exemple fixe un espace de
     nom avec le préfixe <literal>chap</literal>. Imaginez que ce document (ou
     un autre similaire) puisse avoir utilisé un préfixe <literal>c</literal>
     dans le passé pour le même espace de nom. Puisqu'il a changé, la requête
     XPath ne retournerait plus les résultats appropriés et la requête devrait
     être modifiée. L'utilisation de <literal>registerXPathNamespace</literal>
     évite les modifications futures de la requête même si le fournisseur
     change le préfixe d'espace de nom.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::xpath</methodname></member>
    <member><methodname>SimpleXMLElement::getDocNamespaces</methodname></member>
    <member><methodname>SimpleXMLElement::getNamespaces</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
