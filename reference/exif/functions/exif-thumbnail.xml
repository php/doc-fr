<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cbac1ecf71d754707d69bdc344c4031c157eaa54 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.exif-thumbnail" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>exif_thumbnail</refname>
  <refpurpose>Récupère la miniature d'une image</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>exif_thumbnail</methodname>
   <methodparam><type class="union"><type>resource</type><type>string</type></type><parameter>file</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">width</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">height</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">image_type</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>exif_thumbnail</function> lit la miniature de l'image. 
  </para>
  <para>
   Si vous voulez afficher des miniatures avec cette fonction, vous
   devez envoyer le bon type MIME avec la fonction <function>header</function>.
  </para>
  <para>
   Il est possible que la fonction <function>exif_thumbnail</function> 
   n'arrive pas à créer l'image mais peut déterminer sa taille. Dans ce cas, la fonction
   retourne &false; mais les paramètres <parameter>width</parameter> et 
   <parameter>height</parameter> sont définis.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>
       Localisation du fichier image. Il peut s'agir soit d'un chemin d'accès
       au fichier, soit d'un flux <type>ressource</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>width</parameter></term>
     <listitem>
      <para>
       La largeur retournée de la miniature retournée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>height</parameter></term>
     <listitem>
      <para>
       La hauteur retournée de la miniature retournée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>image_type</parameter></term>
     <listitem>
      <para>
       Le type de l'image retourné de la miniature retournée. Peut être
       soit <acronym>TIFF</acronym>, soit <acronym>JPEG</acronym>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la miniature embarquée ou &false; si l'image ne contient pas
   de miniature.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Le paramètre <parameter>file</parameter> supporte les fichiers
        locaux ou les ressources de flux.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>exif_thumbnail</function></title>
    <programlisting role="php">
<![CDATA[
<?php
if (array_key_exists('file', $_REQUEST)) {
    $image = exif_thumbnail($_REQUEST['file'], $width, $height, $type);
} else {
    $image = false;
}
if ($image!==false) {
    header('Content-type: ' .image_type_to_mime_type($type));
    echo $image;
    exit;
} else {
    // aucune miniature de disponible, traitement de l'erreur ici
    echo 'No thumbnail available';
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si le paramètre <parameter>file</parameter> est utilisé pour passer un 
    flux à la fonction, alors le flux doit être repositionnable. Notez que la 
    position du pointeur d'un fichier n'est pas modifié après le retour de 
    cette fonction.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exif_read_data</function></member>
    <member><function>image_type_to_mime_type</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
