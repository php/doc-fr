<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f57352dd7a678230f929e1bac0d4a9189631cf16 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.exif-read-data" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>exif_read_data</refname>
  <refpurpose>Lit les en-têtes <acronym>EXIF</acronym> dans les images</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>exif_read_data</methodname>
   <methodparam><type class="union"><type>resource</type><type>string</type></type><parameter>file</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>required_sections</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>as_arrays</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>read_thumbnail</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>exif_read_data</function> lit les en-têtes <acronym>EXIF</acronym>
   des images.
   Avec cette fonction, vous pouvez lire les données méta générées par les appareils photos
   numériques.
  </para>
  <para>
   Les en-têtes <acronym>EXIF</acronym> tendent à être présents dans les images
   JPEG/TIFF générées par les appareils photos numériques, mais malheureusement,
   chaque appareil photo numérique a une idée différente de la façon dont
   leurs images doivent être marquées, donc, vous ne pouvez pas toujours compter
   sur un en-tête EXIF spécifique, bien que présent.
  </para>
  <para>
   Les paramètres <literal>Height</literal> et <literal>Width</literal>
   sont calculés de la même façon que pour la fonction <function>getimagesize</function>,
   donc leurs valeurs ne feront parties d'aucun en-tête retourné. De même, l'index
   <literal>html</literal> est la représentation textuelle de la hauteur/largeur
   utilisée dans une balise image <acronym>HTML</acronym> classique.
  </para>
  <para>
   Lorsqu'un en-tête EXIF contient une note de Copyright, cet en-tête
   peut alors contenir lui-même deux valeurs. Comme cette solution est
   incohérente avec les standards EXIF 2.10, la section <literal>COMPUTED</literal>
   retournera les deux en-têtes, <literal>Copyright.Photographer</literal>
   et <literal>Copyright.Editor</literal>, tandis que les sections <literal>IFD0</literal>
   contiennent le tableau d'octets avec des caractères NULL pour séparer les deux entrées ;
   ou bien, juste la première entrée si le type de données était erroné
   (comportement par défaut de EXIF). La section <literal>COMPUTED</literal> va aussi
   contenir une entrée <literal>Copyright</literal>, qui sera soit la chaîne originale
   de copyright, soit une liste de valeurs séparées par des virgules de
   photos et de copyright de l'auteur.
  </para>
  <para>
   La balise <literal>UserComment</literal> présente le même problème que la balise Copyright.
   Elle peut stocker deux valeurs : en premier, le jeu de caractères utilisé, puis
   la valeur elle-même. Si c'est le cas, la section <literal>IFD</literal> contiendra uniquement
   le jeu de caractères, ou bien un tableau d'octets. La section <literal>COMPUTED</literal>
   va stocker les deux entrées <literal>UserCommentEncoding</literal> et
  <literal>UserComment</literal>. L'index <literal>UserComment</literal>
  est disponible dans les deux cas, et il est préférable de l'utiliser, plutôt
   que la valeur de la section <literal>IFD0</literal>.
  </para>
  <para>
   <function>exif_read_data</function> valide les données des balises EXIF en accord
   avec la spécification EXIF (<link
   xlink:href="&url.exifspec;">&url.exifspec;</link>, page 20).
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>
       L'emplacement du fichier image. Il peut s'agir soit d'un chemin d'accès 
       au fichier (les enveloppes de flux sont également pris en charge comme
       d'habitude), soit d'un flux <type>resource</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>required_sections</parameter></term>
     <listitem>
      <para>
       Liste de valeur séparées par des virgules
       des sections qui devront être présentées dans le tableau de résultat.
       Si aucune des sections demandées n'est trouvée, la valeur retournée
       est &false;.
       <informaltable>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>FILE</entry>
           <entry>FileName (nom du ficher), FileSize (taille du fichier),
           FileDateTime (date de modification du fichier), SectionsFound (sections trouvées)</entry>
          </row>
          <row>
           <entry>COMPUTED</entry>
           <entry>
            Attribut Html, largeur, hauteur, couleur ou noir et blanc et plus si disponible.
            La largeur et la hauteur sont calculées de la même façon que la fonction
            <function>getimagesize</function>, donc, leurs valeurs ne
            devraient jamais différer. De même, l'index
           <literal>html</literal> est la représentation textuelle de la hauteur/largeur
           utilisée dans une balise image <acronym>HTML</acronym> classique.
           </entry>
          </row>
          <row>
           <entry>ANY_TAG</entry>
           <entry>
            Toutes les informations concernant cette balise, comme
            <literal>IFD0</literal>, <literal>EXIF</literal>, ...
           </entry>
          </row>
          <row>
           <entry>IFD0</entry>
           <entry>
            Toutes les balises <literal>IFD0</literal>.
            Dans les images normales, ils contiennent les
            dimensions de l'image, etc.
           </entry>
          </row>
          <row>
           <entry>THUMBNAIL</entry>
           <entry>
            Un fichier qui contient une miniature, s'il y a un second <literal>IFD</literal>.
            Toutes les informations mises en balises à propos de cette miniature
            seront stockées dans cette section.
           </entry>
          </row>
          <row>
           <entry>COMMENT</entry>
           <entry>En-tête de commentaire des images JPEG.</entry>
          </row>
          <row>
           <entry>EXIF</entry>
           <entry>
            La section EXIF est une sous section de la section <literal>IFD0</literal>. Elle
            contient des informations plus détaillées sur les images. La plupart
            de ces index sont reliés aux appareils numériques.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>as_arrays</parameter></term>
      <listitem>
      <para>
       Spécifie si chaque section doit devenir un tableau ou non.
       Les <parameter>required_sections</parameter>  <literal>COMPUTED</literal>,
       <literal>THUMBNAIL</literal> et <literal>COMMENT</literal> seront
       toujours transformées en tableau, car elle contiennent des noms qui
       risquent d'être en conflit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>read_thumbnail</parameter></term>
     <listitem>
      <para>
       Lorsque défini à &true;, la miniature elle-même est lue. Sinon,
       seules les données contenues dans le taf seront lues.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif où les index sont les noms des en-têtes et les valeurs
   sont les valeurs associées à ces en-têtes. Si aucune donnée ne peut être retournée,
   <function>exif_read_data</function> retournera &false;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Des erreurs de niveau <constant>E_WARNING</constant> et/ou <constant>E_NOTICE</constant>
   peuvent être levé pour des tags non supportés ou autres conditions d'erreur
   potentielle, mais la fonction tente quand même de lire toutes les informations compréhensibles.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>required_sections</parameter> est désormais nullable.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <para>
         Le support des formats EXIF suivants a été ajouté :
         <simplelist>
          <member>Samsung</member>
          <member>DJI</member>
          <member>Panasonic</member>
          <member>Sony</member>
          <member>Pentax</member>
          <member>Minolta</member>
          <member>Sigma/Foveon</member>
          <member>AGFA</member>
          <member>Kyocera</member>
          <member>Ricoh</member>
          <member>Epson</member>
         </simplelist>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>exif_read_data</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo "test1.jpg:<br />\n";
$exif = exif_read_data('tests/test1.jpg', 'IFD0');
echo $exif===false ? "Aucun en-tête de donnés n'a été trouvé.<br />\n" : "L'image contient des en-têtes<br />\n";

$exif = exif_read_data('tests/test2.jpg', 0, true);
echo "test2.jpg:<br />\n";
foreach ($exif as $key => $section) {
    foreach ($section as $name => $val) {
        echo "$key.$name: $val<br />\n";
    }
}
?>
]]>
    </programlisting>
    <para>
     Le premier appel échoue car l'image n'a pas d'en-tête d'information.
    </para>
    &example.outputs.similar;
    <screen role="php">
<![CDATA[
test1.jpg:
Aucun en-tête de donnés n'a été trouvé.
test2.jpg:
FILE.FileName: test2.jpg
FILE.FileDateTime: 1017666176
FILE.FileSize: 1240
FILE.FileType: 2
FILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT
COMPUTED.html: width="1" height="1"
COMPUTED.Height: 1
COMPUTED.Width: 1
COMPUTED.IsColor: 1
COMPUTED.ByteOrderMotorola: 1
COMPUTED.UserComment: Exif test image.
COMPUTED.UserCommentEncoding: ASCII
COMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer: Photo (c) M.Boerger
COMPUTED.Copyright.Editor: Edited by M.Boerger.
IFD0.Copyright: Photo (c) M.Boerger
IFD0.UserComment: ASCII
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.JPEGInterchangeFormatLength: 523
COMMENT.0: Comment #1.
COMMENT.1: Comment #2.
COMMENT.2: Comment #3end
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.Thumbnail.Height: 1
THUMBNAIL.Thumbnail.Height: 1
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>exif_read_data</function> avec les flux disponible depuis PHP 7.2.0</title>
    <programlisting role="php">
<![CDATA[
<?php
// Ouvrir le fichier, cela devrait être en mode binaire
$fp = fopen('/path/to/image.jpg', 'rb');

if (!$fp) {
    echo 'Error: Unable to open image for reading';
    exit;
}

// Essayez de lire les en-têtes EXIF
$headers = exif_read_data($fp);

if (!$headers) {
    echo 'Error: Unable to read exif headers';
    exit;
}

// Afficher les entêtes 'COMPUTED'
echo 'EXIF Headers:' . PHP_EOL;

foreach ($headers['COMPUTED'] as $header => $value) {
    printf(' %s => %s%s', $header, $value, PHP_EOL);
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen role="php">
<![CDATA[
EXIF Headers:
 Height => 576
 Width => 1024
 IsColor => 1
 ByteOrderMotorola => 0
 ApertureFNumber => f/5.6
 UserComment =>
 UserCommentEncoding => UNDEFINED
 Copyright => Denis
 Thumbnail.FileType => 2
 Thumbnail.MimeType => image/jpeg
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si <link linkend="ref.mbstring">mbstring</link> est activé, EXIF va tenter 
    de traiter l'Unicode et de choisir un jeu de caractères comme spécifié par
    <link linkend="ini.exif.decode-unicode-motorola">exif.decode_unicode_motorola</link> et 
    <link linkend="ini.exif.decode-unicode-intel">exif.decode_unicode_intel</link>. 
    L'extension EXIF ne tentera pas de déterminer l'encodage de lui même, et il 
    appartient à l'utilisateur de spécifier correctement l'encodage à utiliser 
    pour le décodage en définissant l'une des deux directives INI avant 
    d'appeler <function>exif_read_data</function>. 
   </para>
  </note>
  <note>
   <para>
    Si le paramètre <parameter>file</parameter> est utilisé pour passer un 
    flux à la fonction, alors le flux doit être repositionnable. Notez que la 
    position du pointeur d'un fichier n'est pas modifié après le retour de 
    cette fonction.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exif_thumbnail</function></member>
    <member><function>getimagesize</function></member>
    <member><xref linkend="wrappers"/></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
