<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 855bfee2f3db70d7dbb4c60c7c4a4efa567f1c60 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="sqlite3stmt.bindvalue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3Stmt::bindValue</refname>
  <refpurpose>Lie la valeur d'un paramètre à une variable de déclaration</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SQLite3Stmt">
   <modifier>public</modifier> <type>bool</type><methodname>SQLite3Stmt::bindValue</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>param</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer><constant>SQLITE3_TEXT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Lie la valeur d'un paramètre à une variable de déclaration.
  </para>
  <caution>
   <para>
    Avant PHP 7.2.14 et 7.3.0, respectivement,
    une fois que la déclaration a été exécuté 
    <methodname>SQLite3Stmt::reset</methodname>
    doit être appelé pour pouvoir changer la valeur des paramètres liés.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>param</parameter></term>
     <listitem>
      <para>
       Soit une &string; (pour les paramètres nommés) ou un &integer;
       (pour les paramètres positionnel) identifiant la variable de déclaration à
       laquelle la valeur doit être liée.
       Si un paramètre nommé ne débute pas avec un caractère "deux point"
       (<literal>:</literal>) ou un arobase (<literal>@</literal>), "deux point"
       (<literal>:</literal>) seront automatiquement préfixé.
       Les paramètres positionnels commencent avec <literal>1</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur à lier à la variable de déclaration.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Le type de données de la valeur à lier.
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLITE3_INTEGER</constant> : La valeur est un entier signé,
          stocké sur 1, 2, 3, 4, 6, ou 8 octets, suivant la grandeur de la valeur.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_FLOAT</constant> : La valeur est un nombre à virgule
          flottante, stocké sur 8 octets.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_TEXT</constant> : La valeur est un texte, stocké
          en utilisant l'encodage de la base de données
          (UTF-8, UTF-16BE ou UTF-16-LE).
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_BLOB</constant> : La valeur est un BLOB, stocké
          exactement de la façon dont il a été fourni.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_NULL</constant> : La valeur est la valeur NULL.
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       À partir de PHP 7.0.7, si <parameter>type</parameter> est omit, il est
       automatiquement détecté depuis le type de <parameter>value</parameter> :
       &boolean; et &integer; sont traités comme <constant>SQLITE3_INTEGER</constant>,
       &float; comme <constant>SQLITE3_FLOAT</constant>,
       &null; comme <constant>SQLITE3_NULL</constant>
       et tous les autres comme <constant>SQLITE3_TEXT</constant>.
       Auparavant, si <parameter>type</parameter> était omit, il était par défaut
       <constant>SQLITE3_TEXT</constant>.
      </para>
      <note>
       <para>
        Si <parameter>value</parameter> est &null;, c'était toujours traité comme
        <constant>SQLITE3_NULL</constant>, peu importe le
        <parameter>type</parameter> fournie.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la valeur a été liée à la variable de déclaration, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.4.0</entry>
      <entry>
       <parameter>param</parameter> supporte désormais la notation
       <literal>@param</literal>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>SQLite3Stmt::bindValue</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3(':memory:');

$db->exec('CREATE TABLE foo (id INTEGER, bar STRING)');
$db->exec("INSERT INTO foo (id, bar) VALUES (1, 'Ceci est un test')");

$stmt = $db->prepare('SELECT bar FROM foo WHERE id=:id');
$stmt->bindValue(':id', 1, SQLITE3_INTEGER);

$result = $stmt->execute();
var_dump($result->fetchArray(SQLITE3_ASSOC));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(1) {
  ["bar"]=>
  string(16) "Ceci est un test"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SQLite3Stmt::bindParam</methodname></member>
   <member><methodname>SQLite3::prepare</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
