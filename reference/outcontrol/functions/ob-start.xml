<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e8f4c442c963211fd01031177619c41e220863bc Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.ob-start" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ob_start</refname>
  <refpurpose>Enclenche la temporisation de sortie</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>ob_start</methodname>
   <methodparam choice="opt"><type>callable</type><parameter>callback</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>chunk_size</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PHP_OUTPUT_HANDLER_STDFLAGS</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction active la mise en mémoire tampon de la sortie.
   Lorsque la mise en mémoire tampon est active, aucune sortie n'est envoyée depuis le script ;
   au lieu de cela, la sortie est stockée dans une mémoire tampon interne.
   Consultez <xref linkend="outcontrol.what-output-is-buffered"/>
   pour savoir exactement quelles sorties sont concernées.
  </para>
  <para>
   Les tampons de sortie sont empilables, c'est-à-dire
   <function>ob_start</function> peut être appelée pendant qu'un autre tampon est actif.
   Si plusieurs tampons de sortie sont actifs,
   la sortie est filtrée séquentiellement
   à travers chacun d'eux dans l'ordre d'emboîtement.
   Consultez <xref linkend="outcontrol.nesting-output-buffers"/> pour plus de détails.
  </para>
  <para>
   Consultez <xref linkend="outcontrol.user-level-output-buffers"/>
   pour une description détaillée des tampons de sortie.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Un <parameter>callback</parameter> <type>callable</type> optionnel peut être
       spécifié. Il peut également être contourné en passant &null;.
      </para>
      <para>
       <parameter>callback</parameter> est invoqué lorsque le tampon de sortie est
       vidé (envoyé), nettoyé, ou lorsque le tampon de sortie est vidé
       à la fin du script.
      </para>
      <para>
       La signature du <parameter>callback</parameter> est la suivante :
      </para>
      <para>
       <methodsynopsis>
        <type>string</type><methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
        <methodparam choice="opt"><type>int</type><parameter>phase</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>buffer</parameter></term>
         <listitem>
          <simpara>
           Contenu du buffer de sortie.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>phase</parameter></term>
         <listitem>
          <simpara>
           Masque de bits des constantes
           <link linkend="constant.php-output-handler-start">
            <constant>PHP_OUTPUT_HANDLER_<replaceable>*</replaceable></constant>
           </link>.
           Consultez <xref linkend="outcontrol.flags-passed-to-output-handlers"/>
           pour plus de détails.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Si <parameter>callback</parameter> renvoie &false;,
       le contenu du tampon est renvoyé.
       Consultez <xref linkend="outcontrol.output-handler-return-values"/>
       pour plus de détails.
      </para>
      <warning>
       <simpara>
        Appeler l'une des fonctions suivantes à partir d'un gestionnaire de sortie
        entraînera une erreur fatale :
        <function>ob_clean</function>, <function>ob_end_clean</function>,
        <function>ob_end_flush</function>, <function>ob_flush</function>,
        <function>ob_get_clean</function>, <function>ob_get_flush</function>,
        <function>ob_start</function>.
       </simpara>
      </warning>
      <para>
       Consultez <xref linkend="outcontrol.output-handlers"/>
       et <xref linkend="outcontrol.working-with-output-handlers"/>
       pour plus de détails sur les <parameter>callback</parameter>s (gestionnaires de sortie).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>chunk_size</parameter></term>
     <listitem>
      <para>
       Si le paramètre optionnel <parameter>chunk_size</parameter> est passé,
       la fonction de rappel est appelée à chaque nouvelle ligne après 
       <parameter>chunk_size</parameter> octets d'affichage.
       La valeur par défaut <literal>0</literal> signifie
       que toute la sortie est mise en mémoire tampon jusqu'à ce que la mémoire tampon soit désactivée.
       Consultez <xref linkend="outcontrol.buffer-size"/> pour plus de détails.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>flags</parameter> est un masque qui contrôle
       les opérations qui peuvent être effectuées sur le tampon de sortie.
       Par défaut, il autorise le tampon de sortie à être nettoyé, envoyé
       et supprimé, ce qui peut être défini explicitement avec les
       <link linkend="outcontrol.constants.buffer-control-flags">
        indicateurs de contrôle de la mémoire tampon
       </link>.
       Consultez <xref linkend="outcontrol.operations-on-buffers"/>
       pour plus de détails.
      </para>
      <para>
       Chaque drapeau contrôle l'accès à un jeu de fonctions, tel décrit
       ci-dessous :
       <informaltable>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Constante</entry>
           <entry>Fonctions</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>PHP_OUTPUT_HANDLER_CLEANABLE</constant></entry>
           <entry>
            <function>ob_clean</function>,
           </entry>
          </row>
          <row>
           <entry><constant>PHP_OUTPUT_HANDLER_FLUSHABLE</constant></entry>
           <entry>
            <function>ob_end_flush</function>,
           </entry>
          </row>
          <row>
           <entry><constant>PHP_OUTPUT_HANDLER_REMOVABLE</constant></entry>
           <entry>
            <function>ob_end_clean</function>,
            <function>ob_end_flush</function> et
            <function>ob_get_clean</function>.
            <function>ob_get_flush</function>.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple de gestion de sortie avec fonction de rappel</title>
    <programlisting role="php">
<![CDATA[
<?php

function rappel($buffer)
{
  // remplace toutes les pommes par des carottes
  return (str_replace("pommes de terre", "carottes", $buffer));
}

ob_start("rappel");

?>
<html>
<body>
<p>C'est comme comparer des carottes et des pommes de terre.</p>
</body>
</html>
<?php

ob_end_flush();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<html>
<body>
<p>C'est comme comparer des carottes et des carottes.</p>
</body>
</html>
]]>
    </screen>
   </example>
  </para>

  <para>
   <example xml:id="function.ob-start.flags-bc">
    <title>Crée un tampon de sortie in-effaçable</title>
    <programlisting role="php">
<![CDATA[
<?php

ob_start(null, 0, PHP_OUTPUT_HANDLER_STDFLAGS ^ PHP_OUTPUT_HANDLER_REMOVABLE);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_get_contents</function></member>
    <member><function>ob_end_clean</function></member>
    <member><function>ob_end_flush</function></member>
    <member><function>ob_implicit_flush</function></member>
    <member><function>ob_gzhandler</function></member>
    <member><function>ob_iconv_handler</function></member>
    <member><function>mb_output_handler</function></member>
    <member><function>ob_tidyhandler</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
