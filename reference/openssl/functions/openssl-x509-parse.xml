<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d1e3ea622e5d4f542cd36eca59a9f22aa0142633 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-x509-parse" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_x509_parse</refname>
  <refpurpose>Analyse un certificat X509</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>openssl_x509_parse</methodname>
   <methodparam><type class="union"><type>OpenSSLCertificate</type><type>string</type></type><parameter>certificate</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>short_names</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_x509_parse</function> analyse le certificat X509
   <parameter>certificate</parameter>, et retourne les informations contenues
   dedans, y compris le sujet (<literal>subject</literal>), nom (<literal>name</literal>),
   émetteur (<literal>issuer name</literal>), dates de début et de fin
   (<literal>valid from date</literal> et <literal>valid to date</literal>),
   etc.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>certificate</parameter></term>
     <listitem>
      <para>
       Certificat X509. Voir <link linkend="openssl.certparams">paramètre de
       Clé/Certificat</link> pour une list de valeur valide.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>short_names</parameter></term>
     <listitem>
      <para>
       <parameter>short_names</parameter> contrôle l'indexation des
       données dans le tableau : si <parameter>short_names</parameter> vaut
       &true; (valeur par défaut), alors les champs seront indexés
       avec la forme courte des noms, sinon, les noms longs seront utilisés.
       (par exemple, <literal>CN</literal> est le nom court de
       <literal>commonName</literal>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <emphasis>La structure des données retournées est
   (délibérément) non documentée, car elle
   est sujette à des changements sans préavis.</emphasis>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>certificate</parameter> accepte désormais une instance de
       <classname>OpenSSLCertificate</classname> ;
       auparavant, une &resource; de type <literal>OpenSSL X.509</literal> était acceptée.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
