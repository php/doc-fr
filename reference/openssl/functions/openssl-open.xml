<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 110ac43250fdb3531fe26d4d29292e33df7855e8 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_open</refname>
  <refpurpose>Ouvre des données scellées</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_open</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter role="reference">output</parameter></methodparam>
   <methodparam><type>string</type><parameter>encrypted_key</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>private_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   La <function>openssl_open</function> ouvre (décrypte) <parameter>data</parameter> en utilisant une clé d'enveloppe
   qui est décryptée à partir de <parameter>encrypted_key</parameter> en utilisant
   <parameter>private_key</parameter>. La décryption est effectuée à l'aide de
   <parameter>cipher_algo</parameter> et <parameter>iv</parameter>. Le VI est requis uniquement si la
   méthode de chiffrement l'exige. La fonction remplit <parameter>output</parameter> avec les données
   décryptées. La clé d'enveloppe est généralement générée lorsque les données sont scellées à l'aide d'une clé publique
   associée à la clé privée. Consultez <function>openssl_seal</function> pour plus d'informations.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données scellées.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output</parameter></term>
     <listitem>
      <para>
       Si l'appel a réussi, les données ouvertes sont
       retournées dans ce paramètre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_key</parameter></term>
     <listitem>
      <para>
       La clé symétrique chiffrée qui peut être décryptée à l'aide de <parameter>private_key</parameter>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>private_key</parameter></term>
     <listitem>
      <para>
       La clé privée utilisée pour déchiffrer <parameter>encrypted_key</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       La méthode de chiffrement utilisée pour le déchiffrement de <parameter>data</parameter>.
       <caution>
        <simpara>
         La valeur par défaut pour les versions de PHP antérieures à 8.0 est (<literal>'RC4'</literal>), qui est
         considérée comme non sécurisée. Il est fortement recommandé de spécifier explicitement une méthode de chiffrement
         sécurisée.
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Le vecteur d'initialisation utilisé pour le déchiffrement de <parameter>data</parameter>. Il est requis
       si la méthode de chiffrement nécessite un VI. Cela peut être déterminé en appelant
       <function>openssl_cipher_iv_length</function> avec <parameter>cipher_algo</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>private_key</parameter> accepte désormais une instance de
       <classname>OpenSSLAsymmetricKey</classname> ou <classname>OpenSSLCertificate</classname> ;
       auparavant, une &resource; de type <literal>OpenSSL key</literal> ou <literal>OpenSSL X.509 CSR</literal>
       était acceptée.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>cipher_algo</parameter> n'est désormais plus un paramètre optionnel.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>openssl_open</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// On suppose que $sealed, $env_key et $iv contiennent les données scellées,
// la clé d'enveloppe et IV. Toutes ournies par l'expéditeur.
// récupérer la clé privée depuis le fichier situé dans private_key.pem
$pkey = openssl_get_privatekey("file://private_key.pem");

// déchiffrage des données : elles sont placées dans $open
if (openssl_open($sealed, $open, $env_key, $pkey, 'AES256', $iv)) {
    echo "Voici les données déchiffrées : ", $open;
} else {
    echo "Impossible de déchiffrer les données";
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_seal</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
