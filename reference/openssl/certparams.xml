<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 497c40ac164d5873fd87f622dfdeb5206392b446 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="openssl.certparams" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Paramètres clés/certificats</title>
 <para>
  Un bon nombre de fonctions OpenSSL exigent une clé ou un certificat comme
  paramètres. Les méthodes suivantes peuvent être utilisé pour les récupérer:
  <itemizedlist>
   <listitem>
    <para>
     Certificats
     <orderedlist>
      <listitem>
       <simpara>
        Une instance de <classname>OpenSSLCertificate</classname>
        (ou antérieur à PHP 8.0.0, une &resource; de type <literal>OpenSSL X.509</literal>)
        retournée par <function>openssl_x509_read</function>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne au format
        <filename>file://path/to/cert.pem</filename>;
        Le fichier ainsi repéré doit contenir un certificat,
        encodé au format <acronym>PEM</acronym>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne contenant le contenu d'un certificat, encodé
        au format <acronym>PEM</acronym>, peut commencer par <literal>-----BEGIN CERTIFICATE-----</literal>.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>
   
   <listitem>
    <para>
     Demandes de signature de certificat (Certificate Signing Requests abrévié CSRs)
     <orderedlist>
      <listitem>
       <simpara>
        Une instance de <classname>OpenSSLCertificateSigningRequest</classname>
        (ou antérieur à PHP 8.0.0, une &resource; de type <literal>OpenSSL X.509 CSR</literal>)
        retournée par <function>openssl_csr_new</function>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une &string; ayant le format
        <filename>file://path/to/csr.pem</filename> ; le fichier nommé doit
        contenir un <acronym>CSR</acronym> encodé au format <acronym>PEM</acronym>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une &string; contenant le contenu d'un <acronym>CSR</acronym>, encodé au format <acronym>PEM</acronym>,
        peut commencer par <literal>-----BEGIN CERTIFICATE REQUEST-----</literal>.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>

   <listitem>
    <para>
     Clés publiques/privées
     <orderedlist>
      <listitem>
       <simpara>
        Une instance de <classname>OpenSSLAsymmetricKey</classname>
        (ou antérieur à PHP 8.0.0, une &resource; de type <literal>OpenSSL key</literal>)
        retournée par <function>openssl_csr_new</function>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Pour les clés publiques uniquement : une instance de <classname>OpenSSLCertificate</classname>
        (ou antérieur à PHP 8.0.0, une &resource; de type <literal>OpenSSL X.509</literal>)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne avec le format :
        <filename>file://path/to/file.pem</filename>.
        Le fichier doit contenir une clé privée, ou un certificat,
        encodé au format <acronym>PEM</acronym> (il peut contenir les deux).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une &string; contenant le contenu d'un certificat/clé, encodé au format <acronym>PEM</acronym>,
        peut commencer par <literal>-----BEGIN PUBLIC KEY-----</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Pour les clés privées, vous pouvez aussi utiliser la
        syntaxe <literal>array($key, $passphrase)</literal>, où
        <varname>$key</varname>
        représente une clé spécifiée par un
        fichier ou une représentation textuelle comme
        cité ci-dessus, et <varname>$passphrase</varname> représente une
        chaîne contenant la phrase de passe de cette clé privée.
       </simpara>
      </listitem>
     </orderedlist>
    </para> 
   </listitem>
  </itemizedlist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

