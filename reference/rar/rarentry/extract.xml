<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: af5f2f87b3b0bb9ee0f83ccb787a4e7db1eb6bd4 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="rarentry.extract" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarEntry::extract</refname>
  <refpurpose>Extrait une entrée d'une archive</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>RarEntry::extract</methodname>
   <methodparam><type>string</type><parameter>dir</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filepath</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>extended_data</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <methodname>RarEntry::extract</methodname> extrait une entrée de données.
   Ceci va créer un nouveau fichier dans le dossier spécifié par le paramètre
   <parameter>dir</parameter> portant un nom identique au nom de l'entrée,
   tant que le second argument n'est pas spécifié. Voir ci-dessous pour plus
   d'informations.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dir</parameter></term>
     <listitem>
      <para>
       Chemin vers le dossier où le fichier extrait devra être créé.
       Ce paramètre sera utilisé uniquement si le paramètre
       <parameter>filepath</parameter> n'est pas fourni. Si ces 2 paramètres
       sont vides, l'extraction se fera dans le dossier courant.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>filepath</parameter></term>
     <listitem>
      <para>
       Chemin (relatif ou absolut) contenant le dossier et le nom du fichier à extraire.
       Ce paramètre écrase à la fois le paramètre <parameter>dir</parameter>
       et le nom original du fichier.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Le mot de passe à utiliser pour décrypter cette entrée. Si l'entrée n'est pas crypté,
       cette valeur ne sera pas utilisée et peut être omise. Si ce paramètre est omis et que
       l'entrée est cryptée, le mot de passe fourni à la fonction <function>rar_open</function>,
       s'il existe, sera utilisé. Si un mauvais mot de passe est fourni, soit explicitement
       ou implicitement via la fonction <function>rar_open</function>, la vérification CRC
       échouera et cette méthode échouera, en retournant &false;.
       Si aucun mot de passe n'est fourni alors qu'il est nécessaire, cette méthode échouera
       en retournant &false;. Vous pouvez vérifier si une entrée est cryptée avec la méthode
       <methodname>RarEntry::isEncrypted</methodname>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>extended_data</parameter></term>
     <listitem>
      <para>
       Si vaut &true;, les informations étendues comme NTFS ACLs
       et les informations sur le propriétaire Unix seront
       définies dans les fichiers extraits, si ils sont bien définies
       dans l'archives.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <warning>
   <para>
    Avant la version 2.0.0, cette fonction ne gérait pas les chemins relatifs
    correctement. Utilisez la fonction <function>realpath</function> comme contournement.
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL rar 3.0.0</entry>
       <entry>
        Le paramètre <parameter>extended_data</parameter> a été ajouté.
       </entry>
      </row>
      <row>
       <entry>PECL rar 3.0.0</entry>
       <entry>
        Support des archives RAR contenant des entrées portant le même nom.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>RarEntry::extract</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

$rar_file = rar_open('example.rar') or die("Échec lors de l'ouverture de l'archive RAR");

$entry = rar_entry_get($rar_file, 'Dir/file.txt') or die("L'entrée demandée n'existe pas !");

$entry->extract('/dir/to'); // Création de /dir/to/Dir/file.txt
$entry->extract(false, '/dir/to/new_name.txt'); // Création de /dir/to/new_name.txt

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Comment extraire tous les fichiers d'une archive :</title>
    <programlisting role="php">
<![CDATA[
<?php

/* Exemple fourni par Erik Jenssen aka erix */

$filename = "foobar.rar";
$filepath = "/home/foo/bar/";

$rar_file = rar_open($filepath.$filename);
$list = rar_list($rar_file);
foreach($list as $file) {
    $entry = rar_entry_get($rar_file, $file);
    $entry->extract("."); // Extraction dans le dossier courant
}
rar_close($rar_file);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>RarEntry::getStream</methodname></member>
    <member>Le gestionnaire <link linkend="wrappers.rar"><literal>rar://</literal></link></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
