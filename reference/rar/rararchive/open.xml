<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b95d28e6ec86e4a71e012737d36ebdc1cf009180 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="rararchive.open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarArchive::open</refname>
  <refname>rar_open</refname>
  <refpurpose>Ouvre une archive RAR</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (méthode) :</para>
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>RarArchive</type><type>false</type></type><methodname>RarArchive::open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>volume_callback</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural; :</para>
  <methodsynopsis>
   <type class="union"><type>RarArchive</type><type>false</type></type><methodname>rar_open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>volume_callback</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ouvre une archive RAR et retourne une instance <type>RarArchive</type> la représentant.
  </para>
  <note>
   <para>
    Si on tente d'ouvrir une archive multivolume, le chemin du premier volume
    doit être passé comme premier paramètre.
    Sinon, l'ensemble des fichiers ne sera pas affiché.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Path to the Rar archive.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Un mot de passe en text plein, si nécessaire pour décrypter l'en-tête.
       Il sera également utilisé par défaut si des fichiers cryptés sont trouvés.
       Noter que les fichiers peuvent avoir un mot de passe différent, et ce,
       en respectant les en-têtes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>volume_callback</parameter></term>
     <listitem>
      <para>
       Une fonction qui reçoit un seul paramètre - le chemin du volume
       non trouvé - et retourne une &string; contenant le chemin correct
       du volume ou &null; si le volume n'existe pas ou
       le chemin n'est pas connu. Attention à ne pas créer de boucle infinie
       sachant que la fonction sera appelée indéfiniment si le chemin retourné
       dans un précédent appel ne correspond pas au volume désiré. Le fait de
       spécifier ce paramètre évitera une alerte qui devrait être émise lorsqu'un
       volume n'est pas trouvé ; une implémentation qui ne retourne que &null;
       peut toutefois être utilisée pour éviter une telle alerte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <warning>
   <para>
    Avant la version 2.0.0, cette fonction ne gérait pas correctement les
    chemins relatifs. Utilisez la fonction
    <function>realpath</function> pour corriger ce bogue.</para>
  </warning>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne l'instance <type>RarArchive</type> requise &return.falseforfailure;.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL rar 3.0.0</entry>
       <entry>
        Le paramètre <parameter>volume_callback</parameter> a été ajouté.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php
$rar_arch = RarArchive::open('encrypted_headers.rar', 'samplepassword');
if ($rar_arch === FALSE)
    die("Échec lors de l'ouverture du fichier");
    
$entries = $rar_arch->getEntries();
if ($entries === FALSE)
    die("Échec lors de la récupération des entrées");

echo count($entries) . " fichier(s) trouvé(s).\n";

if (empty($entries))
    die("Aucune entrée valide n'a été trouvée.");
    
$stream = reset($entries)->getStream();
if ($stream === FALSE)
    die("Échec lors de l'ouverture du premier fichier");

$rar_arch->close();

echo "Contenu du premier fichier :\n";
echo stream_get_contents($stream);

fclose($stream);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
2 fichier(s) trouvé(s).
Contenu du premier fichier :
Encrypted file 1 contents.
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php
$rar_arch = rar_open('encrypted_headers.rar', 'samplepassword');
if ($rar_arch === FALSE)
    die("Échec lors de l'ouverture du fichier");
    
$entries = rar_list($rar_arch);
if ($entries === FALSE)
    die("Échec lors de la récupération des entrées");

echo count($entries) . " fichier(s) trouvé(s).\n";

if (empty($entries))
    die("Aucune entrée valide n'a été trouvée.");
    
$stream = reset($entries)->getStream();
if ($stream === FALSE)
    die("Échec lors de l'ouverture du premier fichier");

rar_close($rar_arch);

echo "Contenu du premier fichier :\n";
echo stream_get_contents($stream);

fclose($stream);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Fonction de rappel pour le volume</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Dans cet exemple, il y a un volume nommé multi_broken.part1.rar
 * dont le volume suivant est nommé multi.part2.rar */
function resolve($vol) {
    if (preg_match('/_broken/', $vol))
        return str_replace('_broken', '', $vol);
    else
        return null;
}
$rar_file1 = rar_open(dirname(__FILE__).'/multi_broken.part1.rar', null, 'resolve');
$entry = $rar_file1->getEntry('file2.txt');
$entry->extract(null, dirname(__FILE__) . "/temp_file2.txt");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Le gestionnaire <link linkend="wrappers.rar"><literal>rar://</literal></link></member>
   </simplelist>
  </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
