<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8d666e819852f6b0561b40fcf8689b747568865c Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="evwatcher.clear" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvWatcher::clear</refname>
  <refpurpose>Efface le statut d'attente de l'observateur</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>int</type>
   <methodname>EvWatcher::clear</methodname>
   <void />
  </methodsynopsis>
  <para>
   Si l'observateur est en attente, cette méthode efface son statut
   d'attente (<varname>pending</varname>) et retourne son bitset
   <varname>revents</varname> (comme si sa fonction de rappel avait été invoquée).
   Si l'observateur n'est pas en attente, cette méthode ne fera rien,
   et retournera <constant>0</constant>.
  </para>
  <para>
   Quelques fois, il est utile d'interroger un observateur plutôt que d'attendre
   que sa fonction de rappel ne soit invoquée, et c'est bien ce que permet
   de faire cette méthode.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Dans le cas où l'observateur est en attente, retourne le bitset
   <varname>revents</varname>, comme si sa <link
   linkend="ev.watcher-callbacks">fonction de rappel</link> était invoquée.
   Sinon, retourne <constant>0</constant>.
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
