<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<chapter  xml:id="ev.watchers" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Watchers</title>
 <para>
  Un watcher est un objet créé pour enregistrer des particularités d'un événement.
  Par exemple, le code suivant attend que
  <constant>STDIN</constant> devienne accessible en lecture :
  <programlisting role="php">
<![CDATA[
<?php
// Wait until STDIN is readable
$w = new EvIo(STDIN, Ev::READ, function ($watcher, $revents) {
 echo "STDIN est accessible en lecture\n";
});
Ev::run(Ev::RUN_ONCE);
?>
]]>
  </programlisting>
 </para>
 <para>
  Tous les constructeurs des watchers démarrent automatiquement les watchers.
  La méthode <literal>createStopped</literal> stoppe un watcher (i.e.
  <methodname>EvIo::createStopped</methodname>).
 </para>
 <para>
  Notez qu'un watcher sera automatiquement stoppé lorsque l'objet watcher est
  détruit. Toutefois, les objets watchers retournés par les constructeurs
  ou les méthodes factorielles seront conservés.
 </para>
 <para>
  Notez également que toutes les méthodes qui modifient les propriétés
  d'un watcher (<emphasis>set</emphasis>, <varname>priority</varname> etc.)
  stoppent et redémarrent automatiquement le watcher s'il est actif, ce qui
  signifie que les événements en attente seront perdus.
 </para>
 <para>
  Voir aussi :
  <link linkend="ev.watcher-callbacks">Les fonctions de rappel des Watchers</link>.
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
