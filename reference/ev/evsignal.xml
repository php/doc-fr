<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 33e5f4ef7243bc1282acb1cba93e8f99c1debe68 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.evsignal" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La classe EvSignal</title>
 <titleabbrev>EvSignal</titleabbrev>
 <partintro>
<!-- {{{ EvSignal intro -->
  <section xml:id="evsignal.intro">
   &reftitle.intro;
  <para>
    Les watchers <classname>EvSignal</classname> vont lancer un événement
   lorsque le processus reçoit un signal spécifique une ou plusieurs fois.
   Malgré le fait que les signaux soient asynchrones,
   <emphasis>libev</emphasis>  va tenter de faire de son mieux pour
   délivrer les signaux de façon synchrone, i.e. tout comme n'importe quel
   autre événement.
   </para>
   <para>
    Il n'y a aucune limite pour le nombre de watchers pour le même signal,
    mais seulement dans la même boucle, i.e. un peu surveiller
    <constant>SIGINT</constant> dans la boucle par défaut, et pour
    <constant>SIGIO</constant> dans une autre boucle, mais il n'est pas
    autorisé de surveiller <constant>SIGINT</constant> à la fois dans
    la boucle par défaut, et dans une autre boucle au même moment.
    A ce moment, <constant>SIGCHLD</constant> est lié de façon permanente
    à la boucle par défaut.
   </para>
   <para>
    Si possible et si supporté, <emphasis>libev</emphasis> va installer son
    gestionnaire avec <literal>SA_RESTART</literal> (ou équivalent) activé,
    aussi, les appels système ne devraient pas être interrompus. Dans le cas
    d'un problème avec les appels système qui se verraient interrompus par
    des signaux, tous les signaux peuvent être bloqués dans un watcher
    <classname>EvCheck</classname> et débloqués dans un watcher
    <classname>EvPrepare</classname>.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evsignal.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvSignal</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvSignal</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evsignal.props.signum">signum</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvSignal properties -->
  <section xml:id="evsignal.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evsignal.props.signum">
     <term>
      <varname>signum</varname>
     </term>
     <listitem>
      <para>
       Le numéro du signal. Voir les constantes exportées par l'extension
       <emphasis>pcntl</emphasis>. Voir aussi la page de manuel pour
       <literal>signal(7)</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evsignal;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
