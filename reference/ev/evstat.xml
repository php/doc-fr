<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 33e5f4ef7243bc1282acb1cba93e8f99c1debe68 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.evstat" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La classe EvStat</title>
 <titleabbrev>EvStat</titleabbrev>
 <partintro>
<!-- {{{ EvStat intro -->
  <section xml:id="evstat.intro">
   &reftitle.intro;
   <para>
    La classe <classname>EvStat</classname> surveille
    un fichier du système de fichiers afin de regarder toutes modifications
    de ces attributs. Elle appelle la commande <emphasis>stat()</emphasis>
    sur ce chemin, à intervalle régulier (ou lorsque l'OS signale une modification)
    et regarde s'il a été modifié depuis la dernière fois, et appelle la
    fonction de rappel si c'est le cas.
   </para>
   <para>
    Le chemin n'a pas besoin d'exister : la modification de "le chemin existe"
    vers "le chemin n'existe pas est une modification de statut comme un autre.
    La condition "le chemin n'existe pas" est signifié par la valeur 0 de
    l'élément <constant>'nlink'</constant> (retourné par la méthode
    <methodname>EvStat::attr</methodname>).
   </para>
   <para>
    Le chemin ne doit pas se terminer par un slash, ou contenir des composants
    spéciaux comme <constant>'.'</constant> ou <constant>..</constant>.
    Le chemin doit être absolu : s'il est relatif, et que le dossier de travail
    change, alors le comportement sera indéfini.
   </para>
   <para>
    Sachant qu'il n'y a pas d'interface de notification de changement portable,
    l'implémentation portable appelle simplement la commande
    <emphasis>stat()</emphasis> sur le chemin pour vérifier les modifications.
    Pour ce cas, un intervalle régulier peut être spécifié. S'il est spécifié,
    un intervalle de <constant>0.0 </constant> (vivement recommandé) alors
    une valeur par défaut non spécifié sera utilisé (au alentour de 5 secondes,
    et peut être modifié dynamiquement). <emphasis>libev</emphasis>
    va également imposer un intervalle minimum qui est actuellement au alentour
    de <constant>0.1</constant>, ce qui est largement suffisant.
   </para>
   <para>
    Ce type de watcher n'est pas prévu pour un nombre important de watchers
    <classname>EvStat</classname>, sachant que même avec les notifications
    systèmes sur les modifications supportées par l'OS, ceci prend beaucoup
    de ressources.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evstat.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvStat</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvStat</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evstat.props.path">path</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evstat.props.interval">interval</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evstat')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evstat')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvStat properties -->
  <section xml:id="evstat.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evstat.props.interval">
     <term>
      <varname>interval</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Lecture seule</emphasis>. La rapidité avec laquelle
       une modification doit être détectée ; normalement, doit valoir
       <constant>0.0</constant> pour laisser <emphasis>libev</emphasis>
       choisir une bonne valeur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evstat.props.path">
     <term>
      <varname>path</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Lecture seule</emphasis>. Le chemin vers le fichier
       dont on souhaite surveiller les modifications de statut.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evstat;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
