<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8cdc6621f9826d04abc3e50438c010804d7e8683 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.stripslashes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stripslashes</refname>
  <refpurpose>Supprime les antislashs d'une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>stripslashes</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Supprime les antislashs d'une chaîne.
  </para>
  <para>
   <function>stripslashes</function> peut être utilisé si vous n'insérez pas
   ces données dans un endroit (tel qu'une base de données) qui nécessite
   l'échappement. Par exemple, si vous affichez simplement et directement
   des données provenant d'un formulaire HTML.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne d'entrée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une chaîne dont les antislashs on été supprimés.
   <literal>\'</literal> devient <literal>'</literal>, etc.
   Les doubles antislashs (<literal>\\</literal>) sont réduits
   à un seul antislash (<literal>\</literal>).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>stripslashes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "Avez-vous l\'oreille dure?";

// Affiche : Avez-vous l'oreille dure?
echo stripslashes($str);
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    <function>stripslashes</function> n'est pas récursif. Si vous voulez
    appliquer cette fonction à un tableau multidimensionnel, vous devez
    utiliser une fonction récursive.
   </para>
  </note>
  <para>
   <example>
    <title>Utilisation de <function>stripslashes</function> sur un tableau</title>
    <programlisting role="php">
<![CDATA[
<?php
function stripslashes_deep($value)
{
    $value = is_array($value) ?
                array_map('stripslashes_deep', $value) :
                stripslashes($value);

    return $value;
}

// Exemple
$array = array("f\\'oo", "b\\'ar", array("fo\\'o", "b\\'ar"));
$array = stripslashes_deep($array);

// Affiche
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => f'oo
    [1] => b'ar
    [2] => Array
        (
            [0] => fo'o
            [1] => b'ar
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>addslashes</function></member>
    <member><function>get_magic_quotes_gpc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
