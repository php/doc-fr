<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2eb2cdbe58d2f35cb88ad06fa090f3c0ccd9f860 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.strrpos" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>Cherche la position de la dernière occurrence d'une sous-chaîne dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cherche la position numérique de la dernière occurrence de
   <parameter>needle</parameter> dans la chaîne <parameter>haystack</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       La chaîne dans laquelle chercher.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       La chaîne à rechercher.
      </para>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para> 
       Si zéro ou positif, la recherche est effectuée de gauche à droite
       omettant les premiers <parameter>offset</parameter> octets de
       <parameter>haystack</parameter>.
      </para>
      <para>
       Si négatif, la recherche commence à <parameter>offset</parameter> octets de la droite
       au lieu de depuis le début de <parameter>haystack</parameter>.
       La recherche s'effectue de droite à gauche, cherchant la première
       occurrence de <parameter>needle</parameter> à partir de l'octet sélectionné.
       <note>
        <para>
         Ceci est effectivement équivalent à la recherche de la dernière occurrence de
         <parameter>needle</parameter> à ou avant les derniers
         <parameter>offset</parameter> octets.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la position de la dernière occurrence de <parameter>needle</parameter>
   relativement au début de la chaîne <parameter>haystack</parameter>
   (indépendamment de la direction de recherche ou de l'offset).
   <note>
    <simpara>
     Les positions des &string; débutent à 0, et pas à 1.
    </simpara>
   </note>
  </para>
  <para>
   Retourne &false; si la <parameter>needle</parameter> n'a pas été trouvée.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &strings.changelog.needle-empty;
     <row>
      <entry>8.0.0</entry>
      <entry>
       Passing an &integer; as <parameter>needle</parameter> is no longer supported.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       Passer un &integer; comme <parameter>before_needle</parameter> a été
       rendu obsolète.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Vérifie si une occurrence est trouvée dans une chaîne</title>
    <para>
     Il est facile de faire une erreur quant à la valeur retournée
     entre "caractère trouvé à la position 0" et "caractère non trouvé".
     Voici comme détecter cette différence :
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$pos = strrpos($mystring, "b");
if ($pos === false) { // note : 3 signes "="
    // non trouvé ...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Recherche avec des positions</title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = "0123456789a123456789b123456789c";

// Chercher pour '0' depuis l'octet 0 (depuis le début)
var_dump(strrpos($foo, '0', 0));

// Chercher pour '0' depuis le 1er octet (après l'octet "0")
var_dump(strrpos($foo, '0', 1));

// Chercher pour '7' depuis le 21ème octet (après l'octet 20)
var_dump(strrpos($foo, '7', 20));

// Chercher pour '7' depuis le 29ème octet (après l'octet 28)
var_dump(strrpos($foo, '7', 28));

// Chercher pour '7' de droite à gauche depuis le 5ème octet depuis la fin
var_dump(strrpos($foo, '7', -5));

// Chercher pour 'c' de droite à gauche depuis le 2ème octet depuis la fin
var_dump(strrpos($foo, 'c', -2));

// Chercher pour '9c' de droite à gauche depuis le 2ème octet depuis la fin
var_dump(strrpos($foo, '9c', -2));
?>
]]>
    </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(0)
bool(false)
int(27)
bool(false)
int(17)
bool(false)
int(29)
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>stripos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
