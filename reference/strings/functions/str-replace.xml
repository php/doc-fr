<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>Remplace toutes les occurrences dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>search</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>str_replace</function> retourne une chaîne ou un tableau,
   dont toutes les occurrences de <parameter>search</parameter> dans
   <parameter>subject</parameter> ont été remplacées par
   <parameter>replace</parameter>.
  </para>
  <para>
   Si vous n'avez pas besoin de règles de remplacement compliquées (comme les
   expressions régulières), cette fonction devrait être utilisé au lieu de
   <function>preg_replace</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Si les paramètres <parameter>search</parameter> et <parameter>replace</parameter>
   sont des tableaux, alors la fonction <function>str_replace</function>
   prendra une valeur de chaque tableau et les utilisera pour la recherche et
   le remplacement sur <parameter>subject</parameter>. Si les paramètres
   <parameter>replace</parameter> a moins de valeurs que le paramètre
   <parameter>search</parameter>, alors une &string; vide sera utilisée
   comme valeur pour le reste des valeurs de remplacement. Si le paramètre
   <parameter>search</parameter> est un tableau et que le paramètre
   <parameter>replace</parameter> est une &string;, alors cette &string;
   de remplacement sera utilisée pour chaque valeur de <parameter>search</parameter>.
   L'inverse n'a pas de sens.
  </para>
  <para>
   Si <parameter>search</parameter> ou <parameter>replace</parameter>
   sont des tableaux, les éléments sont traités du premier, au dernier.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
       La valeur à chercher, autrement connue comme le <emphasis>masque</emphasis>.
       Un tableau peut être utilisé pour désigner plusieurs masques.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       La valeur de remplacement à substituer aux valeurs trouvées.
       Un tableau peut être utilisé pour désigner plusieurs valeurs
       de remplacement.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       La &string; ou le tableau sur lequel on va effectuer la
       recherche et le remplacement, aussi connu sous le nom
       de <emphasis>haystack</emphasis>.
      </para>
      <para>
       Si <parameter>subject</parameter> est un tableau, alors le
       remplacement se fera sur chaque élément de celui-ci, et
       la valeur retournée sera aussi un tableau.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       Si fournie, cette variable contiendra le nombre de remplacements effectués.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Cette fonction retourne une chaîne, ou un tableau, contenant les valeurs
   remplacées.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple 1 avec <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Génère : <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Génère : Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// Génère : You should eat pizza, beer, and ice cream every day
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");

$newphrase = str_replace($healthy, $yummy, $phrase);

// Génère : good goy miss moy
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count;

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple 2 avec <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ordre des remplacements
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';

// Traitement du premier \r\n, ils ne seront pas convertis deux fois.
$newstr = str_replace($order, $replace, $str);

// Affiche F car A est remplacé par B, puis B est remplacé par C, et ainsi de suite...
// Finalement, E est remplacé par F
$search  = array('A', 'B', 'C', 'D', 'E');
$replace = array('B', 'C', 'D', 'E', 'F');
$subject = 'A';
echo str_replace($search, $replace, $subject);

// Affiche : apearpearle pear
// Pour les mêmes raisons que plus haut
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Ordre de remplacement</title>
   <para>
    A cause du fait que la fonction <function>str_replace</function>
    effectue les remplacements de la gauche vers la droite, elle peut
    remplacer une valeur précédemment insérée lors de multiples
    remplacements.
   </para>
  </caution>
  <note>
   <para>
    Cette fonction est sensible à la casse. Utilisez la fonction
    <function>str_ireplace</function> pour un remplacement insensible à la
    casse.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
