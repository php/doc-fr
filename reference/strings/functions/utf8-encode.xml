<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b676d0b9c968ebb0b7429835f2f6bd364275eed1 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.utf8-encode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>utf8_encode</refname>
  <refpurpose>Convertit une chaîne ISO-8859-1 en UTF-8</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-8-2-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>utf8_encode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction convertie la chaîne <parameter>string</parameter> depuis
   l'encodage <literal>ISO-8859-1</literal> vers <literal>UTF-8</literal>.
  </para>

  <note>
   <para>
    Cette fonction n'essaie pas de deviner l'encodage actuel de la chaîne de caractères
    fournie, elle suppose qu'elle est encodée en ISO-8859-1 (également connu sous le nom
    de "Latin 1") et la convertit en UTF-8. Puisque chaque séquence d'octets est une chaîne
    de caractères ISO-8859-1 valide, il n'y a jamais d'erreur, mais il n'en résultera pas
    une chaîne de caractères utile si un encodage différent était prévu.
   </para>
   <para>
    De nombreuses pages Web marquées comme utilisant l'encodage de caratère
    <literal>ISO-8859-1</literal> utilisent effectivement un encodage similaire
    à <literal>Windows-1252</literal>, et les navigateurs Web interpréterons
    les pages Web <literal>ISO-8859-1</literal> comme
    <literal>Windows-1252</literal>. Les caractéristiques supplémentaires
    de <literal>Windows-1252</literal> sont des caractères imprimables,
    tels que le signe euro (<literal>€</literal>) et les guillemets bouclés
    (<literal>“</literal> <literal>”</literal>), à la place de certains
    caractères de contrôle de l'<literal>ISO-8859-1</literal>. Cette fonction
    ne convertira pas ces caractères <literal>Windows-1252</literal>
    correctement. Utilisez une fonction différente si une conversion
    <literal>Windows-1252</literal> est nécessaire.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Une chaîne ISO-8859-1.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retour la version UTF-8 de <parameter>string</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Cette fonction a été rendue obsolète.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Cette fonction a été déplacée dans le cœur de PHP,
        auparavant, il était nécessaire d'installer l'extension XML
        pour l'utiliser.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple d'utilisation</title>
   <programlisting role="php">
<![CDATA[
<?php
// Convertit la chaîne 'Zoë' de ISO 8859-1 à UTF-8
$iso8859_1_string = "\x5A\x6F\xEB";
$utf8_string = utf8_encode($iso8859_1_string);
echo bin2hex($utf8_string), "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
5a6fc3ab
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  <title>Notes</title>
  <note>
    <title>Dépréciation et alternatives</title>
    <para>
      Cette fonction est <emphasis>obsolète</emphasis> à partir de PHP 8.2.0
      et sera supprimée dans une version future. Les utilisations existantes devraient être vérifiées
      et remplacées par des alternatives appropriées.
    </para>
    <para>
      Une fonctionnalité similaire peut être obtenue avec <function>mb_convert_encoding</function>,
      qui prend en charge ISO-8859-1 et de nombreux autres encodages de caractères.
      <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$iso8859_1_string = "\xEB"; // 'ë' (e with diaeresis) in ISO-8859-1
$utf8_string = mb_convert_encoding($iso8859_1_string, 'UTF-8', 'ISO-8859-1');
echo bin2hex($utf8_string), "\n";

$iso8859_7_string = "\xEB"; // the same string in ISO-8859-7 represents 'λ' (Greek lower-case lambda)
$utf8_string = mb_convert_encoding($iso8859_7_string, 'UTF-8', 'ISO-8859-7');
echo bin2hex($utf8_string), "\n";

$windows_1252_string = "\x80"; // '€' (Euro sign) in Windows-1252, but not in ISO-8859-1
$utf8_string = mb_convert_encoding($windows_1252_string, 'UTF-8', 'Windows-1252');
echo bin2hex($utf8_string), "\n";
?>
          ]]>
        </programlisting>
        &example.outputs;
        <screen>
<![CDATA[
c3ab
cebb
e282ac
]]>
        </screen>
      </informalexample>
    </para>
    <para>
      D'autres options peuvent être disponibles en fonction des extensions installées,
      telles que <methodname>UConverter::transcode</methodname> et <function>iconv</function>.
    </para>
    <para>
      Les exemples suivants donnent tous le même résultat :
      <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$iso8859_1_string = "\x5A\x6F\xEB"; // 'Zoë' in ISO-8859-1

$utf8_string = utf8_encode($iso8859_1_string);
echo bin2hex($utf8_string), "\n";

$utf8_string = mb_convert_encoding($iso8859_1_string, 'UTF-8', 'ISO-8859-1');
echo bin2hex($utf8_string), "\n";

$utf8_string = UConverter::transcode($iso8859_1_string, 'UTF8', 'ISO-8859-1');
echo bin2hex($utf8_string), "\n";

$utf8_string = iconv('ISO-8859-1', 'UTF-8', $iso8859_1_string);
echo bin2hex($utf8_string), "\n";
?>
          ]]>
        </programlisting>
        &example.outputs;
        <screen>
<![CDATA[
5a6fc3ab
5a6fc3ab
5a6fc3ab
5a6fc3ab
]]>
        </screen>
      </informalexample>
    </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>utf8_decode</function></member>
    <member><function>mb_convert_encoding</function></member>
    <member><methodname>UConverter::transcode</methodname></member>
    <member><function>iconv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
