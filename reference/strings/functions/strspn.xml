<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 422bb032237525aaf50e6a43f33362a2c610a1d7 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strspn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strspn</refname>
  <refpurpose>
   Trouve la longueur du segment initial d'une chaîne contenant
   tous les caractères d'un masque donné
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strspn</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Trouve la longueur du segment initial de <parameter>string</parameter>
   qui contient <emphasis>uniquement</emphasis> les caractères
   depuis le masque <parameter>characters</parameter>.
  </para>
  <para>
   Si les paramètres <parameter>offset</parameter> et <parameter>length</parameter>
   sont omis, alors toutes les chaînes <parameter>string</parameter> seront
   analysées. S'ils sont fournis, alors les effets seront identiques à appeler
   <literal>strspn(substr($string, $offset, $length), $characters)</literal>
   (voir <xref linkend="function.substr" /> pour plus d'informations).
  </para>
  <para>
   Le code suivant :
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 est la réponse, mais quelle est la question.", "1234567890");
?>
]]>
    </programlisting>
   </informalexample>
   assigne <literal>2</literal> à la variable <varname>$var</varname>,
   car la chaîne "42" est le segment initial du paramètre
   <parameter>string</parameter> dont les caractères sont contenus dans
   "1234567890".
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne à analyser.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       La liste des caractères autorisés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       La position dans la chaîne <parameter>string</parameter> à
       partir de laquelle nous devons chercher.
      </para>
      <para>
       Si <parameter>offset</parameter> est fourni et n'est pas négatif,
       alors <function>strspn</function> commencera à analyser la chaîne
       <parameter>string</parameter> à la position <parameter>offset</parameter>.
       Par exemple, dans la chaîne '<literal>abcdef</literal>', le caractère
       à la position <literal>0</literal> est '<literal>a</literal>', le caractère
       à la position <literal>2</literal> est '<literal>c</literal>', et ainsi
       de suite.
      </para>
      <para>
       Si <parameter>offset</parameter> est fourni et est négatif,
       alors <function>strspn</function> commencera à analyser la chaîne
       <parameter>string</parameter> à la position <parameter>offset</parameter>
       depuis la fin de la chaîne <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longueur de la chaîne à analyser.
      </para>
      <para>
       Si <parameter>length</parameter> est fourni et n'est pas négatif,
       alors <parameter>string</parameter> sera examiné sur
       <parameter>length</parameter> caractères après la position de départ.
      </para>
      <para>
       Si <parameter>length</parameter> est fourni et est négatif,
       alors <parameter>string</parameter> sera examiné sur
       <parameter>length</parameter> caractères depuis la fin
       de la chaîne <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la taille du segment initial de la chaîne
   <parameter>string</parameter> qui est entièrement
   constitué de caractères contenus dans <parameter>characters</parameter>.
  </para>
  <note>
   <para>
    Lorsque le paramètre <parameter>offset</parameter> est défini, la longueur
    retournée est comptée à partir de cette position, et non depuis le début
    du paramètre <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> est désormais nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>strspn</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Le sujet ne commence pas par un des caractères depuis le masque
var_dump(strspn("foo", "o"));

// Examine 2 caractères depuis le début du sujet, à la position 1
var_dump(strspn("foo", "o", 1, 2));

// Examine un caractère depuis le début du sujet, à la position 1
var_dump(strspn("foo", "o", 1, 1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(0)
int(2)
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strcspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
