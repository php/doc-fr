<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 07e42841b078fc8dfb4a2d053b707b5233c4cfeb Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.wincache-ucache-add" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>wincache_ucache_add</refname>
  <refpurpose>
   Ajoute une nouvelle variable au cache utilisateur
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>wincache_ucache_add</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>wincache_ucache_add</methodname>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>unused</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ajoute une variable au cache utilisateur, uniquement si elle n'existe pas déjà
   dans le cache. La variable restera dans le cache tant que le délai d'expiration
   n'est pas atteint ou qu'elle n'est effacée par la fonction
   <function>wincache_ucache_delete</function> ou la fonction <function>wincache_ucache_clear</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Stocke la variable en utilisant le nom <parameter>key</parameter>. Si une variable
       correspondant à la même clé est déjà présente dans le cache, la fonction
       échouera et retournera &false;. Le paramètre <parameter>key</parameter> est sensible à la
       casse. Pour écraser cette valeur, si <parameter>key</parameter> est présent,
       utilisez plutôt la fonction <function>wincache_ucache_set</function>.
       <parameter>key</parameter> peut également être un tableau de paires nom => valeur où
       les noms seront utilisés comme clés. Ce format peut être utilisé pour ajouter
       de multiples valeurs dans le cache en une seule opération.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur de la variable à stocker. Le paramètre <parameter>Value</parameter> supporte
       tous les types de données, sauf les ressources, comme des pointeurs de fichiers.
       Ce paramètre sera ignoré si le premier argument est un tableau. De façon général, il convient
       de passer la valeur &null; au paramètre <parameter>value</parameter> lors de l'utilisation
       d'un tableau pour le paramètre <parameter>key</parameter>. Si le paramètre <parameter>value</parameter>
       est un objet, ou un tableau contenant des objets, alors les objets seront sérialisés. Reportez-vous
       à la fonction <link linkend="object.sleep">__sleep()</link> pour plus de détails
       sur la sérialisation d'objets.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Tableau associatif de clés et de valeurs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ttl</parameter></term>
     <listitem>
      <para>
       Durée de vie de la variable dans le cache, en secondes. Après la durée spécifiée par le paramètre
       <parameter>ttl</parameter>, la variable stockée sera supprimée du cache. Ce paramètre prend, comme
       valeur par défaut, zéro (<literal>0</literal>), ce qui signifie que la variable restera dans le cache
       tant qu'elle n'est pas explicitement effacée en utilisant la fonction <function>wincache_ucache_delete</function>
       ou la fonction <function>wincache_ucache_clear</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Si le paramètre <parameter>key</parameter> est une &string;, la fonction retourne
   &true; en cas de succès, &false; si une erreur survient.
  </simpara>
  <para>
   Si le paramètre <parameter>key</parameter> est un tableau, la fonction retourne :
   <itemizedlist spacing="compact">
    <listitem>
     <simpara>
      Si toutes les paires nom => valeur du tableau peuvent être définies, la fonction retournera
      un tableau vide ;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Si toutes les paires nom => valeur du tableau ne peuvent être définies, la fonction retournera
      &false; ;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Si certaines peuvent être définies, et d'autres non, la fonction retournera un tableau de paires
      nom => valeur n'ayant pû être définies dans le cache utilisateur.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>wincache_ucache_add</function> et le paramètre <parameter>key</parameter> sous forme de &string;</title>
    <programlisting role="php">
<![CDATA[
<?php
$bar = 'BAR';
var_dump(wincache_ucache_add('foo', $bar));
var_dump(wincache_ucache_add('foo', $bar));
var_dump(wincache_ucache_get('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
bool(false)
string(3) "BAR" 
]]>
    </screen>    
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>wincache_ucache_add</function> et le paramètre <parameter>key</parameter> sous forme d'un &array;</title>
    <programlisting role="php">
<![CDATA[
<?php
$colors_array = array('green' => '5', 'Blue' => '6', 'yellow' => '7', 'cyan' => '8');
var_dump(wincache_ucache_add($colors_array));
var_dump(wincache_ucache_add($colors_array));
var_dump(wincache_ucache_get('Blue'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(0) { } 
array(4) { 
  ["green"]=> int(-1) 
  ["Blue"]=> int(-1) 
  ["yellow"]=> int(-1) 
  ["cyan"]=> int(-1) 
} 
string(1) "6"
]]>
    </screen>    
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>wincache_ucache_set</function></member>
    <member><function>wincache_ucache_get</function></member>
    <member><function>wincache_ucache_delete</function></member>
    <member><function>wincache_ucache_clear</function></member>
    <member><function>wincache_ucache_exists</function></member>
    <member><function>wincache_ucache_meminfo</function></member>
    <member><function>wincache_ucache_info</function></member>
    <member><link linkend="object.sleep">__sleep()</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
