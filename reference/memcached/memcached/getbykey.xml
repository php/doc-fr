<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1d8068ecb070fdc360d750e0c1f3f15796e61ec0 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="memcached.getbykey" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::getByKey</refname>
  <refpurpose>Lit un élément sur un serveur spécifique</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Memcached">
   <modifier>public</modifier> <type>mixed</type><methodname>Memcached::getByKey</methodname>
   <methodparam><type>string</type><parameter>server_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>callable</type><type>null</type></type><parameter>cache_cb</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>get_flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::getByKey</function> est fonctionnellement équivalente à 
   <methodname>Memcached::get</methodname>, hormis le fait que la variable libre
   <parameter>server_key</parameter> peut être utilisée pour diriger la clé
   <parameter>key</parameter> sur un serveur spécifique.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>server_key</parameter></term>
     <listitem>
      <para>
       &memcached.parameter.server_key;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clé de l'élément à lire.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cache_cb</parameter></term>
     <listitem>
      <para>
       Fonction de rappel en cas d'absence, ou &null;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>get_flags</parameter></term>
     <listitem>
      <para>
       Drapeaux pour contrôler le résultat retourné.
       Quand <constant>Memcached::GET_EXTENDED</constant>
       est fournit, la fonction retournera aussi le jeton CAS.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la valeur stockée dans le cache, ou &false; sinon.
   La méthode <methodname>Memcached::getResultCode</methodname> retourne
   <constant>Memcached::RES_NOTFOUND</constant> si la clé n'existe pas.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>PECL memcached 3.0.0</entry>
      <entry>
       Le paramètre <parameter role="reference">cas_tokens</parameter> a été supprimé.
       <constant>Memcached::GET_EXTENDED</constant> a été ajoutée et quand passé en
       tant que drapeau il s'assure que les jetons CAS sont récupérés.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::get</methodname></member>
    <member><methodname>Memcached::getMulti</methodname></member>
    <member><methodname>Memcached::getDelayed</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
