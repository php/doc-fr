<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 601f6f4ce5827d441a7e110184708f0abe9fd447 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="sessionhandlerinterface.read" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandlerInterface::read</refname>
  <refpurpose>Lit les données de session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SessionHandlerInterface">
   <modifier>public</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>SessionHandlerInterface::read</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lit les données de session depuis le support de stockage et retourne le résultat.
   Appelé juste après que la session démarre ou lorsque <function>session_start</function> est appelée.
   Notez qu'avant que cette méthode ne soit appelée, <function>SessionHandlerInterface::open</function> est invoquée.
  </para>
  <para>
   Cette méthode est appelée par PHP lui-même lorsque la session démarre. Cette méthode devrait
   retourner les données de session lues depuis le support de stockage en fonction de l'ID de
   session. La chaine retournée devrait être encodée par le même mécanisme de sérialisation que
   celui utilisé pour écrire les données lors de <function>SessionHandlerInterface::write</function>.
   Si rien n'est lu, une chaine vide est retournée.
  </para>
  <para>
   Les données retournées par cette méthode seront décodées en interne par PHP en utilisant le
   mécanisme de désérialisation spécifié dans
   <link linkend="ini.session.serialize-handler">session.serialize_handler</link>. Les données
   résultantes seront utilisées pour peupler <varname>$_SESSION</varname>.
  </para>
  <para>
   Notez que l'algorithme de sérialisation peut être différent de <function>unserialize</function>
   et peut être utilisé manuellement au moyen de <function>session_decode</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      L'identifiant de session.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne les données lues encodées.
   Si rien n'est lu &false; doit être retourné.
   Notez que cette valeur est destiné aux processus internes à PHP.
  </para>
 </refsect1>
 
  <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     La directive de configuration
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
