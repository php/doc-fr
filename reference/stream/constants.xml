<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2ef96ea623c11a916d854b2f807ad81c948e4784 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="stream.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <title>
   Options disponibles pour le <parameter>flags</parameter> de
   <function>stream_socket_client</function>
  </title>

  <varlistentry xml:id="constant.stream-client-async-connect">
   <term>
    <constant>STREAM_CLIENT_ASYNC_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ouvre la socket client de manière asynchrone.
     Cette option doit être utilisée avec le drapeau
     <constant>STREAM_CLIENT_CONNECT</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-client-connect">
   <term>
    <constant>STREAM_CLIENT_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ouvre la connexion de la socket client.
     Les sockets clients doivent toujours inclure ce drapeau.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-client-persistent">
   <term>
    <constant>STREAM_CLIENT_PERSISTENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     La socket client doit rester persistante entre les chargements de page.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Drapeaux disponibles pour le paramètre <parameter>flags</parameter> de la fonction
   <function>stream_socket_server</function>.
  </title>

  <varlistentry xml:id="constant.stream-server-bind">
   <term>
    <constant>STREAM_SERVER_BIND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique qu’un flux doit se lier à la cible spécifiée.
     Les sockets serveur doivent toujours inclure ce drapeau.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-server-listen">
   <term>
    <constant>STREAM_SERVER_LISTEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique qu’un flux lié avec le drapeau
     <constant>STREAM_SERVER_BIND</constant> doit commencer à écouter la socket.
     Les transports orientés connexion (comme TCP) doivent utiliser ce drapeau,
     sinon la socket serveur ne sera pas activée.
     Utiliser ce drapeau pour les transports sans connexion (comme UDP) est une erreur.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Valeurs pour le paramètre <parameter>mode</parameter> de
   <function>stream_socket_shutdown</function>
  </title>

  <varlistentry xml:id="constant.stream-shut-rd">
   <term>
    <constant>STREAM_SHUT_RD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Désactiver les réceptions supplémentaires.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-shut-wr">
   <term>
    <constant>STREAM_SHUT_WR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Désactiver les transmissions supplémentaires.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-shut-rdwr">
   <term>
    <constant>STREAM_SHUT_RDWR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Désactiver les réceptions et transmissions supplémentaires.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>Drapeaux de transfert de socket de flux</title>
  <simpara>
   Ces constantes sont utilisées pour le paramètre <parameter>flags</parameter>
   des fonctions <function>stream_socket_recvfrom</function> et
   <function>stream_socket_sendto</function>.
  </simpara>

  <varlistentry xml:id="constant.stream-oob">
   <term>
    <constant>STREAM_OOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Traite les données OOB (<literal>hors-bande</literal>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-peek">
   <term>
    <constant>STREAM_PEEK</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Récupère les données de la socket, mais sans consommer le tampon.
    </simpara>
    <simpara>
     Les appels suivants à <function>fread</function> ou
     <function>stream_socket_recvfrom</function> verront les mêmes données.
    </simpara>
    <note>
     <simpara>
      N’est pas un drapeau valide pour <function>stream_socket_sendto</function>.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>Constantes de filtre de flux</title>
  <simpara>
   Ces constantes sont utilisées pour les fonctions
   <function>stream_filter_append</function> et
   <function>stream_filter_prepend</function>.
  </simpara>

  <varlistentry xml:id="constant.stream-filter-read">
   <term>
    <constant>STREAM_FILTER_READ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique que le filtre spécifié doit être appliqué uniquement lors de la
     <emphasis>lecture</emphasis>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-filter-write">
   <term>
    <constant>STREAM_FILTER_WRITE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indique que le filtre spécifié doit être appliqué uniquement lors de
     <emphasis>l'écriture</emphasis>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-filter-all">
   <term>
    <constant>STREAM_FILTER_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Équivalent à <code>STREAM_FILTER_READ | STREAM_FILTER_WRITE</code>.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Méthodes Crypto de Flux
  </title>
  <!-- TODO : <simpara> décrivant quand ces constantes sont utilisées ? -->

   <varlistentry xml:id="constant.stream-crypto-method-any-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_ANY_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Toute version de TLS ou SSL sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv2-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv2_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 2 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv3-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv3_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 3 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv23-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv23_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0, 1.1 ou 1.2 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tls-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLS_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Toute version de TLS sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-0-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-1-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.1 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-2-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.2 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-3-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.3 sur un flux client.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-any-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_ANY_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Toute version de TLS ou SSL sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv2-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv2_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 2 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv3-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv3_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 3 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv23-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv23_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0, 1.1 ou 1.2 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tls-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLS_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Toute version de TLS sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-0-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-1-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.1 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-2-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.2 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-3-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_3_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.3 sur un flux serveur.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-sslv3">
    <term>
     <constant>STREAM_CRYPTO_PROTO_SSLv3</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_SSLv3_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-0">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_0</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-1">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_1</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-2">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_2</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-3">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_3</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_3_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>
    Constantes internes inutilisées
   </title>

   <varlistentry xml:id="constant.stream-must-seek">
    <term>
     <constant>STREAM_MUST_SEEK</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Assure que le flux est accessible en lecture/écriture.
      Cela peut entraîner la création d'une copie du flux.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-ignore-url">
    <term>
     <constant>STREAM_IGNORE_URL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Ne pas utiliser les wrappers de plugins.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>

  <!-- TODO: Besoin d'éviter le découpage -->
  <simplesect>
   <title>
    Constantes utilisées avec <function>stream_socket_pair</function>
   </title>
   <note>
    <simpara>
     Toutes les constantes ne sont pas forcément disponibles sur un système donné.
    </simpara>
   </note>
   <variablelist>
    <title>
     Constantes pour le paramètre <parameter>domain</parameter>
    </title>
    <varlistentry xml:id="constant.stream-pf-inet">
     <term>
      <constant>STREAM_PF_INET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocole Internet Version 4 (IPv4).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-pf-inet6">
     <term>
      <constant>STREAM_PF_INET6</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocole Internet Version 6 (IPv6).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-pf-unix">
     <term>
      <constant>STREAM_PF_UNIX</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocoles internes du système Unix.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes pour le paramètre <parameter>type</parameter>
    </title>
    <varlistentry xml:id="constant.stream-sock-dgram">
     <term>
      <constant>STREAM_SOCK_DGRAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit des datagrammes, qui sont des messages sans connexion.
       Par exemple : UDP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-raw">
     <term>
      <constant>STREAM_SOCK_RAW</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket brut, donnant accès aux protocoles
       et interfaces réseaux internes.
       Généralement, ce type de socket est réservé à l'utilisateur root.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-rdm">
     <term>
      <constant>STREAM_SOCK_RDM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket RDM (Reliably-delivered messages).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-seqpacket">
     <term>
      <constant>STREAM_SOCK_SEQPACKET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket de flux de paquets séquencés.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-stream">
     <term>
      <constant>STREAM_SOCK_STREAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit des flux bidirectionnels séquencés avec un mécanisme de
       transmission pour les données hors bande.
       Par exemple : TCP.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes pour le paramètre <parameter>protocol</parameter>
    </title>
    <varlistentry xml:id="constant.stream-ipproto-icmp">
     <term>
      <constant>STREAM_IPPROTO_ICMP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket ICMP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-ip">
     <term>
      <constant>STREAM_IPPROTO_IP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket IP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-raw">
     <term>
      <constant>STREAM_IPPROTO_RAW</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket RAW.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-tcp">
     <term>
      <constant>STREAM_IPPROTO_TCP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket TCP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-udp">
     <term>
      <constant>STREAM_IPPROTO_UDP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Fournit un socket UDP.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>
    Constantes utilisées avec <function>stream_notification_callback</function>
   </title>
   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>notification_code</parameter>
    </title>

    <varlistentry xml:id="constant.stream-notify-resolve">
     <term>
      <constant>STREAM_NOTIFY_RESOLVE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Une adresse distante requise pour ce flux a été résolue,
       ou la résolution a échoué.
      </simpara>
      <simpara>
       Consultez <parameter>severity</parameter> pour savoir ce qui s'est produit.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-connect">
     <term>
      <constant>STREAM_NOTIFY_CONNECT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Une connexion avec une ressource externe a été établie.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-auth-required">
     <term>
      <constant>STREAM_NOTIFY_AUTH_REQUIRED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Une autorisation supplémentaire est requise pour accéder à la ressource spécifiée.
      </simpara>
      <simpara>
       Typiquement émis avec un niveau <parameter>severity</parameter> de
       <constant>STREAM_NOTIFY_SEVERITY_ERR</constant>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-mime-type-is">
     <term>
      <constant>STREAM_NOTIFY_MIME_TYPE_IS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Le <literal>type MIME</literal> de la ressource a été identifié.
      </simpara>
      <simpara>
       Consultez <parameter>message</parameter> pour une description du type découvert.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-file-size-is">
     <term>
      <constant>STREAM_NOTIFY_FILE_SIZE_IS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       La <literal>taille</literal> de la ressource a été découverte.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-redirected">
     <term>
      <constant>STREAM_NOTIFY_REDIRECTED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       La ressource externe a redirigé le flux vers un autre emplacement.
      </simpara>
      <simpara>
       Consultez <parameter>message</parameter>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-progress">
     <term>
      <constant>STREAM_NOTIFY_PROGRESS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique la progression actuelle du transfert de flux en
       <parameter>bytes_transferred</parameter> et éventuellement
       <parameter>bytes_max</parameter> également.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-completed">
     <term>
      <constant>STREAM_NOTIFY_COMPLETED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Aucune donnée supplémentaire n'est disponible sur le flux.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-failure">
     <term>
      <constant>STREAM_NOTIFY_FAILURE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Une erreur générique est survenue sur le flux.
      </simpara>
      <simpara>
       Consultez <parameter>message</parameter> et
       <parameter>message_code</parameter> pour plus de détails.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-auth-result">
     <term>
      <constant>STREAM_NOTIFY_AUTH_RESULT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       L'autorisation a été complétée (avec ou sans succès).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>severity</parameter>
    </title>

    <varlistentry xml:id="constant.stream-notify-severity-info">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_INFO</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Notification normale, sans rapport avec une erreur.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-severity-warn">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_WARN</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Condition d'erreur non critique.
       Le traitement peut continuer.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-severity-err">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_ERR</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Une erreur critique s'est produite.
       Le traitement ne peut pas continuer.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>Constantes liées à <classname>streamWrapper</classname></title>

   <variablelist>
    <title>
     Drapeaux valides pour <function>stream_wrapper_register</function>
    </title>

    <varlistentry xml:id="constant.stream-is-url">
     <term>
      <constant>STREAM_IS_URL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique que le protocole de l'interface de flux est un
       protocole <acronym>URL</acronym>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>cast_as</parameter> de
     <methodname>streamWrapper::stream_cast</methodname>
    </title>

    <varlistentry xml:id="constant.stream-cast-for-select">
     <term>
      <constant>STREAM_CAST_FOR_SELECT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique que <methodname>streamWrapper::stream_cast</methodname>
       a été appelé par <methodname>streamWrapper::stream_select</methodname>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-cast-as-stream">
     <term>
      <constant>STREAM_CAST_AS_STREAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique que <methodname>streamWrapper::stream_cast</methodname>
       a été appelé par une méthode autre que
       <methodname>streamWrapper::stream_select</methodname>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>option</parameter> de
     <methodname>streamWrapper::stream_metadata</methodname>
    </title>

    <varlistentry xml:id="constant.stream-meta-touch">
     <term>
      <constant>STREAM_META_TOUCH</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>touch</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-owner">
     <term>
      <constant>STREAM_META_OWNER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>chown</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-owner-name">
     <term>
      <constant>STREAM_META_OWNER_NAME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>chown</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-group">
     <term>
      <constant>STREAM_META_GROUP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>chgrp</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-group-name">
     <term>
      <constant>STREAM_META_GROUP_NAME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>chgrp</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-access">
     <term>
      <constant>STREAM_META_ACCESS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indique un appel à <function>chmod</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Drapeaux valides pour
     <methodname>streamWrapper::mkdir</methodname>
     <!-- TODO: Vérifier que rmdir() peut réellement passer ce drapeau -->
     et
     <methodname>streamWrapper::rmdir</methodname>
    </title>

    <varlistentry xml:id="constant.stream-mkdir-recursive">
     <term>
      <constant>STREAM_MKDIR_RECURSIVE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Drapeau récursif pour les paramètres d'options de
       <function>mkdir</function> et <function>rmdir</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>options</parameter> de
     <methodname>streamWrapper::stream_open</methodname>
    </title>

    <varlistentry xml:id="constant.stream-use-path">
     <term>
      <constant>STREAM_USE_PATH</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Drapeau indiquant que les chemins relatifs doivent utiliser le chemin d'inclusion pour
       localiser la ressource.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-report-errors">
     <term>
      <constant>STREAM_REPORT_ERRORS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Drapeau indiquant que l'interface de flux doit signaler les erreurs.
       Si le drapeau n'est pas défini, aucune erreur ne doit être signalée.
      </simpara>
      <simpara>
       Les erreurs sont généralement signalées par l'utilisation de la
       fonction <function>trigger_error</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>option</parameter> de
     <methodname>streamWrapper::stream_set_option</methodname>
    </title>

    <varlistentry xml:id="constant.stream-option-blocking">
     <term>
      <constant>STREAM_OPTION_BLOCKING</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Définit le mode blocage/non-blocage sur un flux.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-read-buffer">
     <term>
      <constant>STREAM_OPTION_READ_BUFFER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Définit le tampon de lecture sur un flux.
      </simpara>
      <variablelist>
       <title>
        Valeurs d'option valides
       </title>
       <varlistentry xml:id="constant.stream-buffer-none">
        <term>
         <constant>STREAM_BUFFER_NONE</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Pas de tampon.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry xml:id="constant.stream-buffer-line">
        <term>
         <constant>STREAM_BUFFER_LINE</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Tampon par ligne.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry xml:id="constant.stream-buffer-full">
        <term>
         <constant>STREAM_BUFFER_FULL</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Tampon complet.
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-read-timeout">
     <term>
      <constant>STREAM_OPTION_READ_TIMEOUT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Définit le délai d'attente de lecture sur un flux.
       <!-- TODO: Corriger la description -->
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-write-buffer">
     <term>
      <constant>STREAM_OPTION_WRITE_BUFFER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Définit le tampon d'écriture sur un flux.
      </simpara>
      <simpara>
       Voir <constant>STREAM_OPTION_READ_BUFFER</constant>
       pour les options de tampon valides.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valeurs pour le paramètre <parameter>flags</parameter> de
     <methodname>streamWrapper::url_stat</methodname>
    </title>

    <varlistentry xml:id="constant.stream-url-stat-link">
     <term>
      <constant>STREAM_URL_STAT_LINK</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Seules les informations sur le lien lui-même doivent être retournées,
       et non la ressource pointée par le lien.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-url-stat-quiet">
     <term>
      <constant>STREAM_URL_STAT_QUIET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       L'interface de flux ne doit pas élever d'erreurs.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>Constantes liées à <classname>php_user_filter</classname></title>

   <variablelist>
    <title>
     Valeurs de retour valides pour
     <methodname>php_user_filter::filter</methodname>
    </title>

    <varlistentry xml:id="constant.psfs-pass-on">
     <term>
      <constant>PSFS_PASS_ON</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valeur de retour indiquant que le filtre utilisateur
       a retourné des seaux dans <parameter>$out</parameter>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-feed-me">
     <term>
      <constant>PSFS_FEED_ME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valeur de retour indiquant que le filtre utilisateur
       n'a pas retourné de seaux dans <parameter>$out</parameter>.
       (c'est-à-dire, aucune donnée disponible.)
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-err-fatal">
     <term>
      <constant>PSFS_ERR_FATAL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valeur de retour indiquant que le filtre utilisateur
       a rencontré une erreur irrécupérable.
       (c'est-à-dire, données invalides reçues.)
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes internes non utilisées
    </title>

    <varlistentry xml:id="constant.psfs-flag-normal">
     <term>
      <constant>PSFS_FLAG_NORMAL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Lecture/écriture normale.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-flag-flush-inc">
     <term>
      <constant>PSFS_FLAG_FLUSH_INC</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Un vidage incrémentiel.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-flag-flush-close">
     <term>
      <constant>PSFS_FLAG_FLUSH_CLOSE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Vidage final avant la fermeture.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
</simplesect>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


