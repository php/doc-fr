<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a1702b5d45ad950c5f7a077878378a37851a2df6 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.stream-socket-server" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_socket_server</refname>
  <refpurpose>Crée un socket serveur Unix ou Internet</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>stream_socket_server</methodname>
   <methodparam><type>string</type><parameter>address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">error_code</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>null</type></type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>stream_socket_server</function> crée un flux ou un datagramme
   sur le socket spécifié <parameter>address</parameter>. 
  </para>
  <para>
   <function>stream_socket_server</function> ne fait que créer un socket
   et, pour accepter des connexions, vous devez utiliser
   <function>stream_socket_accept</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Le type de socket créé est déterminé par le transport spécifié
       avec le formatage URL suivant : <literal>transport://target</literal>. 
      </para>
      <para>
       Pour un socket Internet,(<constant>AF_INET</constant>) comme TCP
       et UDP, la <literal>cible</literal> de 
       <parameter>remote_socket</parameter> sera une adresse IP ou un 
       nom d'hôte suivi de deux points et d'un numéro de port. Pour un
       socket Unix, la <literal>cible</literal> doit être un fichier de
       socket du système.
      </para>
      <para>
       En fonction de votre environnement, les sockets de domaine Unix
       peuvent être indisponibles. Une liste des transports disponibles
       est accessible via <function>stream_get_transports</function>. Voyez
       <xref linkend="transports"/> pour connaître la liste des transports
       natifs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_code</parameter></term>
     <listitem>
      <para>
       Si les arguments optionnels <parameter>error_code</parameter> et
       <parameter>error_message</parameter> sont présents, ils seront configurés
       pour indiquer le niveau d'erreur actuel des fonctions système
       <literal>socket()</literal>, <literal>bind()</literal> et 
       <literal>listen()</literal>. Si la valeur retournée dans 
       <parameter>error_code</parameter> est <literal>0</literal>, et que 
       la fonction retourne &false;, c'est une indication que l'erreur
       est survenue avant l'appel à <literal>bind()</literal>. 
       Ceci est probablement dû à un problème d'initialisation du 
       socket. Notez que les arguments <parameter>error_code</parameter> et
       <parameter>error_message</parameter> seront toujours passés par référence.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_message</parameter></term>
     <listitem>
      <para>
       Voyez la description de <parameter>error_code</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Un champ de bits, qui peut être la combinaison de n'importe
       quelle option de création de socket.
      </para>
      <note>
       <para>
        Pour les sockets UDP, vous devez utiliser la constante 
        <constant>STREAM_SERVER_BIND</constant> comme valeur
        du paramètre <parameter>flags</parameter>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le flux créé, ou bien &false; en cas d'erreur.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>context</parameter> est désormais nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>stream_socket_server</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("tcp://0.0.0.0:8000", $errno, $errstr);
if (!$socket) {
  echo "$errstr ($errno)<br />\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fputs ($conn, 'L\'heure locale est ' . date('n/j/Y g:i a') . "\n");
    fclose ($conn);
  }
  fclose($socket);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   L'exemple ci-dessous vous montre comment lire la date et l'heure
   sur un service UDP (port 13) sur votre propre machine, tel que présenté avec 
   la fonction <function>stream_socket_client</function> :
   <note>
    <simpara>
     La plupart des systèmes ont besoin d'un accès administrateur
     pour ouvrir un socket sur les ports en dessous de 1024.
    </simpara>
   </note>
   <example>
    <title>Utiliser un serveur de socket UDP</title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("udp://0.0.0.0:13", $errno, $errstr, STREAM_SERVER_BIND);
if (!$socket) {
  echo "ERROR: $errno - $errstr<br />\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fwrite($conn, date("D M j H:i:s Y\r\n"));
    fclose($conn);
  }
  fclose($socket);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &ipv6.brackets;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_socket_client</function></member>
   <member><function>stream_set_blocking</function></member>
   <member><function>stream_set_timeout</function></member>
   <member><function>fgets</function></member>
   <member><function>fgetss</function></member>
   <member><function>fwrite</function></member>
   <member><function>fclose</function></member>
   <member><function>feof</function></member>
   <member><link linkend="ref.curl">Extension Curl</link></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
