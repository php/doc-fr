<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: yannick -->
<refentry xml:id="yaf-route-simple.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yaf_Route_Simple::__construct</refname>
  <refpurpose>Constructeur de la classe Yaf_Route_Simple</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>Yaf_Route_Simple::__construct</methodname>
   <methodparam><type>string</type><parameter>module_name</parameter></methodparam>
   <methodparam><type>string</type><parameter>controller_name</parameter></methodparam>
   <methodparam><type>string</type><parameter>action_name</parameter></methodparam>
  </constructorsynopsis>
  <para>
   <classname>Yaf_Route_Simple</classname> récupère les informations
   sur la route depuis la chaîne de requête. Les paramètres
   de ce constructeur seront utilisés comme clés lors de la recherche
   des informations sur la route dans $_GET.
  </para>

  &warn.undocumented.func;

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>module_name</parameter></term>
    <listitem>
     <para>
      Le nom de la clé dans les informations de module.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>controller_name</parameter></term>
    <listitem>
     <para>
      Le nom de la clé dans les informations du contrôleur.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>action_name</parameter></term>
    <listitem>
     <para>
      Le nom de la clé dans les informations de l'action.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne toujours &true;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>Yaf_Route_Simple::route</function></title>
   <programlisting role="php">
<![CDATA[
<?php
   $route = new Yaf_Route_Simple("m", "controller", "act");
   Yaf_Router::getInstance()->addRoute("simple", $route);
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple avec <function>Yaf_Route_Simple::route</function></title>
   <programlisting role="bash">
<![CDATA[
Request: http://yourdomain.com/path/?controller=a&act=b
=> module = default(index), controller = a, action = b

Request: http://yourdomain.com/path
=> module = default(index), controller = default(index), action = default(index)
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Yaf_Route_Supervar::route</methodname></member>
   <member><methodname>Yaf_Route_Static::route</methodname></member>
   <member><methodname>Yaf_Route_Regex::route</methodname></member>
   <member><methodname>Yaf_Route_Rewrite::route</methodname></member>
   <member><methodname>Yaf_Route_Map::route</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
