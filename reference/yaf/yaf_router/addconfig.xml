<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 22583751fbfdaa3eaa41aeb6470d1343f5cb2c78 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: yannick -->

<refentry xml:id="yaf-router.addconfig" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yaf_Router::addConfig</refname>
  <refpurpose>Ajoute une route définie dans la configuration d'un routeur</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Yaf_Router::addConfig</methodname>
   <methodparam><type>Yaf_Config_Abstract</type><parameter>config</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ajoute une route définie dans la configuration
   dans la pile des routes de la classe <classname>Yaf_Router</classname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une instance de la classe <classname>Yaf_Config_Abstract</classname>
   qui doit contenir une ou plusieurs configurations de routes valides.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>application.ini</function></title>
   <programlisting role="ini">
<![CDATA[
;l'ordre est très important, le premier de la liste sera appelé en premier

;une route de réécriture matchant la requête /product/*/*
routes.route_name.type="rewrite"
routes.route_name.match="/product/:name/:value"
routes.route_name.route.controller=product
routes.route_name.route.action=info

;une route regex matchant la requête /list/*/*
routes.route_name1.type="regex"
routes.route_name1.match="#^list/([^/]*)/([^/]*)#"
routes.route_name1.route.controller=Index
routes.route_name1.route.action=action
routes.route_name1.map.1=name
routes.route_name1.map.2=value

;une route simple matchant /**?c=controller&a=action&m=module
routes.route_name2.type="simple"
routes.route_name2.controller=c
routes.route_name2.module=m
routes.route_name2.action=a

;une route simple matchant /**?r=PATH_INFO
routes.route_name3.type="supervar"
routes.route_name3.varname=r

;une route de type carte matchant n'importe quelle requête du contrôleur
routes.route_name4.type="map"
routes.route_name4.controllerPrefer=TRUE
routes.route_namer.delimiter="#!"
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple avec <function>Yaf_Dispatcher::autoConfig</function></title>
   <programlisting role="php">
<![CDATA[
<?php
class Bootstrap extends Yaf_Bootstrap_Abstract{
    public function _initConfig() {
        $config = Yaf_Application::app()->getConfig();
        Yaf_Registry::set("config", $config);
    }

    public function _initRoute(Yaf_Dispatcher $dispatcher) {
        $router = $dispatcher->getRouter();
        /**
         * Nous pouvons ajouter quelques routes préfédinies dans le
         * fichier de configuration application.ini
         */
        $router->addConfig(Yaf_Registry::get("config")->routes);
    }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Yaf_Router::addRoute</methodname></member>
   <member><classname>Yaf_Route_Static</classname></member>
   <member><classname>Yaf_Route_Supervar</classname></member>
   <member><classname>Yaf_Route_Simple</classname></member>
   <member><classname>Yaf_Route_Regex</classname></member>
   <member><classname>Yaf_Route_Rewrite</classname></member>
   <member><classname>Yaf_Route_Map</classname></member>
  </simplelist>                       
 </refsect1>  
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
