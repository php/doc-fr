<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.yaf-config-ini" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La classe Yaf_Config_Ini</title>
 <titleabbrev>Yaf_Config_Ini</titleabbrev>
 
 <partintro>
  
  <!-- {{{ Yaf_Config_Ini intro -->
  <section xml:id="yaf-config-ini.intro">
   &reftitle.intro;
   <para>
    Yaf_Config_Ini permet aux développeurs de stocker des données
    de configuration au format INI et de les lire dans l'application
    en utilisant une syntaxe interne orientée objet. Le format INI
    est prévu pour fournir à la fois la possibilité d'avoir une
    configuration hiérarchique des clés des données, ainsi qu'un
    héritage entre les sections des données de configuration.
    La hiérarchie des données de configuration est supportée en séparant
    les clés avec un point ou une virgule. Une section peut étendre ou
    hériter d'une autre section en faisant suivre le nom de la section
    avec le caractère ":", suivi du nom de la section depuis laquelles
    les données sont héritées.
    <note>
     <para>
      Yaf_Config_Ini utilise la fonction PHP parse_ini_file(). Reportez-vous
      à la documentation de cette fonction afin de mieux apprécier son
      comportement, ainsi propagé à Yaf_Config_Ini, comme la façon dont
      sont gérées les valeurs spéciales "&true;", "&false;", "yes", "no", et "&null;".
     </para>
    </note>  
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="yaf-config-ini.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Config_Ini</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Config_Ini</classname>
     </ooclass>
     
     <ooclass>
      <modifier>extends</modifier>
      <classname>Yaf_Config_Abstract</classname>
     </ooclass>
     
     <oointerface>
      <interfacename>Iterator</interfacename>
     </oointerface>
     
     <oointerface>
      <interfacename>ArrayAccess</interfacename>
     </oointerface>
     
     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-config-ini')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-config-ini')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
    
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-config-abstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
    
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  
  <!-- {{{ Yaf_Config_Ini properties -->
  <section xml:id="yaf-config-ini.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="yaf-config-ini.props.config">
     <term><varname>_config</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-config-ini.props.readonly">
     <term><varname>_readonly</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->

 <section role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>Yaf_Config_Ini</function></title>
   <para>
    Cet exemple illustre une utilisation basique de Yaf_Config_Ini
    permettant de charger les données de configuration depuis un fichier
    INI. Dans cet exemple, il y a des données de configuration pour à la
    fois un système de production et une système de test. En raison
    du fait que les données de configuration du système de test sont
    très similaires à celles de production, la section de test hérite
    de la section de production. Aussi, cette décision est arbitraire,
    et aurait pu être écrite dans l'autre sens, avec une section de production
    qui hérite de la section de test, mais ce n'aurait pas pu être le cas
    pour des cas plus complexes. On suppose ici que les données
    de configuration suivantes sont contenues dans le chemin
    /path/to/config.ini :
   </para>
   <programlisting role="ini">
<![CDATA[
; Données de configuration pour le site de production
[production]
webhost                  = www.example.com
database.adapter         = pdo_mysql
database.params.host     = db.example.com
database.params.username = dbuser
database.params.password = secret
database.params.dbname   = dbname
 
; Données de configuration pour le site de test, héritées depuis celui de production
; et écrasant les valeurs nécessaires
[staging : production]
database.params.host     = dev.example.com
database.params.username = devuser
database.params.password = devsecret
]]>
   </programlisting>
   <programlisting role="php">
<![CDATA[
<?php
$config = new Yaf_Config_Ini('/path/to/config.ini', 'staging');
 
var_dump($config->database->params->host); 
var_dump($config->database->params->dbname);
var_dump($config->get("database.params.username"));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(15) "dev.example.com"
string(6) "dbname"
string(7) "devuser
]]>
   </screen>
  </example>
  </section>

 </partintro>

 &reference.yaf.entities.yaf-config-ini;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
