<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7418592d82d6cde8d052effd3607e5761d6c4e67 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="yaf-loader.registerlocalnamespace" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yaf_Loader::registerLocalNamespace</refname>
  <refpurpose>Enregistre le préfixe local de la classe</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>Yaf_Loader::registerLocalNamespace</methodname>
   <methodparam><type>mixed</type><parameter>prefix</parameter></methodparam>
  </methodsynopsis>
  <para>
   Enregistre le préfixe local de la classe ; <classname>Yaf_Loader</classname>
   va chercher les classes dans deux dossiers de bibliothèques : celui configuré
   via la directive de configuration <link
    linkend="configuration.yaf.library">application.library.directory</link>(dans
   le fichier application.ini) qui est appelé 'dossier local de bibliothèques' et
   l'autre, configuré via la directive <link linkend="ini.yaf.library">yaf.library</link>
   (dans le fichier php.ini) qui est appelé 'dossier global de bibliothèques',
   vu qu'il peut être partagé par plusieurs applications sur le même serveur.
  </para>
  <para>
   Lorsque l'autochargement est appelé, <classname>Yaf_Loader</classname>
   va déterminer quel dossier de bibliothèques la recherche doit s'effectuer
   en examinant le préfixe du nom de la classe demandée. Si le préfixe est
   enregistré comme local, alors la recherche se fera dans le dossier
   local de bibliothèques, sinon, la recherche se fera dans le dossier
   global de bibliothèques.
   <note>
    <para>
     Si yaf.library n'est pas configuré, alors le dossier global de bibliothèques
     sera le dossier local de bibliothèques. Dans ce cas, tous les
     autochargements rechercheront les classes dans le dossier local de bibliothèques.
     Mais si vous voulez renforcer votre application Yaf, il est conseillé de toujours
     enregistrer vos propres classes comme classes locales.
    </para>
   </note>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>prefix</parameter></term>
    <listitem>
     <para>
      une chaîne ou un tableau de noms de préfixe de classe.
      Toutes les classes dont le préfixe est local seront chargées
      depuis un chemin vers une bibliothèque locale.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un booléen.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>Yaf_Loader::registerLocalNamespace</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$loader = Yaf_Loader::getInstance('/local/library/', '/global/library');
$loader->registerLocalNamespace("Baidu");
$loader->registerLocalNamespace(array("Sina", "Weibo"));

$loader->autoload("Baidu_Name"); // cherche dans '/local/library/'
$loader->autoload("Sina");       // cherche dans '/local/library/'
$loader->autoload("Global_Name");// cherche dans '/global/library/'
$loader->autoload("Foo_Bar");    // cherche dans '/global/library/'

?>
]]>
   </programlisting>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
