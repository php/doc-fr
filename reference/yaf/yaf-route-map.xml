<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<phpdoc:classref xml:id="class.yaf-route-map" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La classe Yaf_Route_Map</title>
 <titleabbrev>Yaf_Route_Map</titleabbrev>
 
 <partintro>
  
  <!-- {{{ Yaf_Route_Map intro -->
  <section xml:id="yaf-route-map.intro">
   &reftitle.intro;
   <para>
    La classe <classname>Yaf_Route_Map</classname> est une route interne ; elle
    va simplement convertir le point final d'une URI (la partie de l'URI qui vient
    après l'URI de base : voir la méthode <methodname>Yaf_Request_Abstract::setBaseUri</methodname>)
    en un nom de contrôleur, ou un nom d'action (suivant le paramètre passé au
    constructeur <methodname>Yaf_Route_Map::__construct</methodname>) en se basant
    sur les règles suivantes :
    A => contrôleur A.
    A/B/C => contrôleur A_B_C.
    A/B/C/D/E => contrôleur A_B_C_D_E.
   </para>
   <para>
    Si le second paramètre du constructeur
    <methodname>Yaf_Route_Map::__construct</methodname> est spécifié,
    alors seule la partie avant le délimiteur de l'URI sera utilisée pour
    le routage, la partie après sera elle utilisée pour router les paramètres
    de la demande (voir l'exemple dans la documentation de la méthode
    <methodname>Yaf_Route_Map::__construct</methodname>).
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="yaf-route-map.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Route_Map</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Route_Map</classname>
     </ooclass>
     
     <oointerface>
      <interfacename>Yaf_Route_Interface</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-route-map.props.ctl-router">_ctl_router</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-route-map.props.delimiter">_delimiter</varname>
    </fieldsynopsis>
    
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-route-map')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-route-map')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  
  <!-- {{{ Yaf_Route_Map properties -->
  <section xml:id="yaf-route-map.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="yaf-route-map.props.ctl-router">
     <term><varname>_ctl_router</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-route-map.props.delimiter">
     <term><varname>_delimiter</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <!-- }}} -->
  
  
 </partintro>
 
 &reference.yaf.entities.yaf-route-map;
 
</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
