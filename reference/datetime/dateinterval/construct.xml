<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: aab7fca69ffc28b60f6f7b08ed48933d41815062 Maintainer: yannick Status: ready -->
<!-- Reviewed: no Maintainer: yannick -->
<refentry xml:id="dateinterval.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateInterval::__construct</refname>
  <refpurpose>Crée un nouvel objet DateInterval</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>DateInterval::__construct</methodname>
   <methodparam><type>string</type><parameter>duration</parameter></methodparam>
  </constructorsynopsis>
  <para>
   Crée un nouvel objet DateInterval.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>duration</parameter></term>
     <listitem>
      <para>
       Une spécification d'intervalle.
      </para>
      <para>
       Le format commence avec la lettre <literal>P</literal>,
       pour <quote>period</quote>.
       Chaque durée de la période est représentée par une
       valeur entière suivie par une désignation de période.
       Si la durée contient des éléments de temps, cette portion
       de la spécification est précédée par la lettre
       <literal>T</literal>.
      </para>
      <para>
       <table>
        <title>
         Désignation de période <parameter>duration</parameter>
        </title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Désignation de période</entry>
           <entry>Description</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><literal>Y</literal></entry>
           <entry>Années</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>Mois</entry>
          </row>
          <row>
           <entry><literal>D</literal></entry>
           <entry>Jours</entry>
          </row>
          <row>
           <entry><literal>W</literal></entry>
           <entry>
            Semaine. Converti en jours.
            Antérieur à PHP 8.0.0, ne peut pas être combiné avec
            <literal>D</literal>.
           </entry>
          </row>
          <row>
           <entry><literal>H</literal></entry>
           <entry>Heures</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>Minutes</entry>
          </row>
          <row>
           <entry><literal>S</literal></entry>
           <entry>Secondes</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Voici quelques exemples simples :
       2 jours sera <literal>P2D</literal> ;
       2 secondes sera <literal>PT2S</literal> ;
       6 années et 5 minutes sera <literal>P6YT5M</literal>.
      </para>
      <note>
       <para>
        Les types d'unité doivent être entrés des plus
        grands aux plus petits. Ainsi, les années doivent
        être présentes avant les mois, les mois avant les jours,
        les jours avant les minutes, etc.
        Aussi, une année et 4 jours doit être représenté comme
        <literal>P1Y4D</literal>, et non <literal>P4D1Y</literal>.
       </para>
      </note>
      <para>
       Cette spécification peut également être représentée sous
       la forme d'une durée. Aussi, une année et 4 jours peut
       être <literal>P0001-00-04T00:00:00</literal>.
       Mais les valeurs de ce format ne peuvent pas excéder
       une période donnée (i.e. <literal>25</literal> heures est invalide).
      </para>
      <para>
       Ces formats sont basés sur la <link xlink:href="&url.iso-8601.duration;">spécification de durée
       ISO 8601</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>Exception</classname> lorsque le paramètre
   <parameter>duration</parameter> ne peut être analysé comme un intervalle.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.2.0</entry>
      <entry>
       Seules les propriétés <literal>y</literal> à <literal>f</literal>,
       <literal>invert</literal>, et <literal>days</literal> seront visibles,
       y compris une nouvelle propriété booléenne <literal>from_string</literal>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <literal>W</literal> peut être combiné avec <literal>D</literal>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Construction et utilisation des objets <classname>DateInterval</classname></title>
    <programlisting role="php">
<![CDATA[
<?php
// Créer une date spécifique
$someDate = \DateTime::createFromFormat("Y-m-d H:i", "2022-08-25 14:18");

// Créer un intervalle
$interval = new \DateInterval("P7D");

// Ajouter un intervalle
$someDate->add($interval);

// Convertir l'intervalle en chaîne de caractères
echo $interval->format("%d");
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
     7
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <classname>DateInterval</classname></title>
    <programlisting role="php">
<![CDATA[
<?php

$interval = new DateInterval('P1W2D');
var_dump($interval);

?>
]]>
    </programlisting>
    &example.outputs.82;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (10) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["from_string"]=>
  bool(false)
}
]]>
    </screen>
    &example.outputs.8;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
    &example.outputs.7;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(2)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>DateInterval::format</function></member>
    <member><function>DateTime::add</function></member>
    <member><function>DateTime::sub</function></member>
    <member><function>DateTime::diff</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
