<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e6849e1e63c206f34d25378ea2f1d0bde4e9a396 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.imagecropauto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagecropauto</refname>
  <refpurpose>Recadre une image automatiquement en utilisant un des modes disponibles</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdImage</type><type>false</type></type><methodname>imagecropauto</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>IMG_CROP_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>float</type><parameter>threshold</parameter><initializer>0.5</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Rogne automatiquement une image selon le <parameter>mode</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &gd.image.description;
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
     <para>
      Une constante parmi :
     </para>
     <variablelist>
      <varlistentry>
       <term><constant>IMG_CROP_DEFAULT</constant></term>
       <listitem>
        <simpara>
         Identique à <constant>IMG_CROP_TRANSPARENT</constant>.
         Antérieur à PHP 7.4.0, la bibliothèque libgd intégré utilisait
         <constant>IMG_CROP_SIDES</constant> en tant que solution de replis,
         si l'image n'avait pas de couleur de transparance.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_TRANSPARENT</constant></term>
       <listitem>
        <simpara>
         Rogne le fond transparent.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_BLACK</constant></term>
       <listitem>
        <simpara>
         Rogne le fond noir.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_WHITE</constant></term>
       <listitem>
        <simpara>
          Rogne le fond blanc.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_SIDES</constant></term>
       <listitem>
        <simpara>
         Utilise les 4 coins de l'image pour tenter de détecter l'arrière-plan 
         à rogner.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_THRESHOLD</constant></term>
       <listitem>
        <simpara>
         Rogne l'image en utilisant le seuil <parameter>threshold</parameter> et 
         <parameter>color</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>threshold</parameter></term>
    <listitem>
     <para>
      Spécifie la tolérance en pourcentage à utiliser lors de la comparaison de 
      la couleur d'image et de la couleur à rogner. La méthode utilisée pour 
      calculer la différence de couleur est basée sur la distance des couleurs 
      dans le cube RVB(a).
     </para>
     <para>
      Utilisé uniquement en mode <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
     <note>
      <simpara>
       Antérieur à PHP 7.4.0, la bibliothèque libgd intégré utilisait un algorithme
       quelque peu différent, donc le même <parameter>threshold</parameter> produisait
       des résultats différents pour libgd système et intégré.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>color</parameter></term>
    <listitem>
     <para>
      Soit une valeur de couleur RVB, soit un index de palette.
     </para>
     <para>
      Utilisé uniquement en mode <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne l'objet de l'image rognée en cas de succès&return.falseforfailure;.
   &false; sera aussi retourné si toute l'image a été rognée.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
     <row>
      <entry>8.0.0</entry>
      <entry>
       En cas de succès, cette fonction retourne désormais une instance de
       <classname>GDImage</classname> ; auparavant,
       une <type>resource</type> était retournée.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       Le comportement de imagecropauto de la bibliothèque libgd intégré a été
       syncrhonisé avec celle de libgd système : <constant>IMG_CROP_DEFAULT</constant>
       n'utilise plus <constant>IMG_CROP_SIDES</constant> comme solution de replis et
       la tolérance de rognage utilise désormais le même algorithme que libgd système.     
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       La valeur par défaut de <parameter>mode</parameter> a été modifié en
       <constant>IMG_CROP_AUTO</constant>. Auparavant, la valeur par défaut était
       <literal>-1</literal> qui correspond à <constant>IMG_CROP_DEFAULT</constant>,
       mais passer <literal>-1</literal> est désormais obsolète.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Rognage automatique correcte</title>
    <para>
     Comme indiqué dans la section valeur de retour, <function>imagecropauto</function>
     retourne &false; si l'image entière a été rognée. Dans cet exemple, nous 
     avons un objet d'image <literal>$im</literal> qui ne devrait être
     automatiquement rognée que s'il ya quelque chose à rogner; Sinon, nous 
     voulons conserver à l'image originale.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cropped = imagecropauto($im, IMG_CROP_DEFAULT);
if ($cropped !== false) { // Si un nouveau objet d'image a été retournée
    imagedestroy($im);    // nous détruisons l'image originale
    $im = $cropped;       // et assignons l'image rognée à $im
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecrop</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
