<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.imagepalettetotruecolor" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagepalettetotruecolor</refname>
  <refpurpose>Convertit une image basée sur une palette en couleur vraie</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagepalettetotruecolor</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
  </methodsynopsis>
  <para>
   Convertit une image basée sur une palette, créée par une fonction
   comme <function>imagecreate</function>, en une image en couleur
   vraie, comme <function>imagecreatetruecolor</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la conversion a été un succès, ou si l'image
   source est déjà en couleur vraie, sinon, retourne &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Convertit n'importe quelle objet image en couleur vraie
    </title>
    <programlisting role="php">
<![CDATA[
<?php
// Compatibilité ascendante
if(!function_exists('imagepalettetotruecolor'))
{
    function imagepalettetotruecolor(&$src)
    {
        if(imageistruecolor($src))
        {
            return(true);
        }

        $dst = imagecreatetruecolor(imagesx($src), imagesy($src));

        imagecopy($dst, $src, 0, 0, 0, 0, imagesx($src), imagesy($src));
        imagedestroy($src);

        $src = $dst;

        return(true);
    }
}

// Utilisation d'une Closure
$typeof = function() use($im)
{
    echo 'typeof($im) = ' . (imageistruecolor($im) ? 'true color' : 'palette'), PHP_EOL;
};

// Crée une image basée sur une palette
$im = imagecreate(100, 100);
$typeof();

// On la convertit en couleur vraie
imagepalettetotruecolor($im);
$typeof();

// Libération de la mémoire
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
typeof($im) = palette
typeof($im) = true color
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecreatetruecolor</function></member>
   <member><function>imageistruecolor</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
