<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 213fbd9440a224f9c1da4942c85124ce0c120c52 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.imagecreatefromgif" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecreatefromgif</refname>
  <refpurpose>&gd.image.new;</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdImage</type><type>false</type></type><methodname>imagecreatefromgif</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecreatefromgif</function> retourne un identifiant d'image qui
   représente l'image obtenue à partir du fichier dont le nom est
   donné par <parameter>filename</parameter>.
  </para>
  <caution>
   <para>
    Lors de la lecture en mémoire de fichiers GIF animés, seule la première frame
    est retournée par l'objet de l'image. La taille de l'image n'est
    pas forcément ce qui est rapporté par <function>getimagesize</function>.
   </para>
  </caution>
  &tip.fopen-wrapper;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Chemin vers l'image GIF.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>&gd.return.identifier;</para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       En cas de succès, cette fonction retourne désormais une instance de
       <classname>GDImage</classname> ; auparavant,
       une <type>resource</type> était retournée.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple de prise en charge d'une erreur lors du chargement d'une
    image GIF</title>
   <programlisting role="php">
<![CDATA[
<?php
function LoadGif($imgname)
{
    /* Tente d'ouvrir l'image */
    $im = @imagecreatefromgif($imgname);

    /* Traitement si l'ouverture a échoué */
    if(!$im)
    {
        /* Création d'une image vide */
        $im = imagecreatetruecolor (150, 30);
        $bgc = imagecolorallocate ($im, 255, 255, 255);
        $tc = imagecolorallocate ($im, 0, 0, 0);

        imagefilledrectangle ($im, 0, 0, 150, 30, $bgc);

        /* Affiche un message d'erreur dans l'image */
        imagestring ($im, 1, 5, 5, 'Error loading ' . $imgname, $tc);
    }

    return $im;
}

header('Content-Type: image/gif');

$img = LoadGif('bogus.image');

imagegif($img);
imagedestroy($img);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <mediaobject>
    <alt>Affichage de l'exemple : imagecreatefromgif()</alt>
    <imageobject>
     <imagedata fileref="en/reference/image/figures/imagecreatefromgif.gif"/>
    </imageobject>
   </mediaobject>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
