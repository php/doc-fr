<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<chapter  xml:id="eventbufferevent.about.callbacks" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>A propos des fonctions de rappel du buffer d'événements</title>
 <para>
  Un objet de la classe <classname>EventBufferEvent</classname>
  représente un <emphasis>buffer d'événements</emphasis>.
  La nature asynchrone d'I/O réalisée par Libevent implique qu'un socket
  (ou tout autre type de descripteur de fichiers) n'est pas toujours
  disponible. Event invoque les fonctions de rappel correspondant lorsque
  la ressource devient disponible pour une lecture ou une écriture,
  ou lorsque des événements surviennent (i.e. une erreur, une fin de ligne,
  etc.).
 </para>
 <para>
  Les fonctions de rappel de lecture et d'écriture doivent correspondre
  au prototype suivant :
 </para>
 <methodsynopsis>
  <type>void</type>
  <methodname>callback</methodname>
  <methodparam
   choice="opt">
   <type>EventBufferEvent</type>
   <parameter>bev</parameter>
   <initializer>&null;</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>mixed</type>
   <parameter>arg</parameter>
   <initializer>&null;</initializer>
  </methodparam>
 </methodsynopsis>
 <para>
  <variablelist>
   <varlistentry>
    <term>
     <parameter>bev</parameter>
    </term>
    <listitem>
     <para>
      Objet <classname>EventBufferEvent</classname> associé.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>arg</parameter>
    </term>
    <listitem>
     <para>
      Variable personnalisée attachée à toutes les fonctions de rappel
      via la méthode <methodname>EventBufferEvent::__construct</methodname>
      ou la méthode <methodname>EventBufferEvent::setCallbacks</methodname>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  Une fonction de rappel d'événement doit correspondante au prototype suivant :
 </para>
 <methodsynopsis>
  <type>void</type>
  <methodname>callback</methodname>
  <methodparam
   choice="opt">
   <type>EventBufferEvent</type>
   <parameter>bev</parameter>
   <initializer>&null;</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>int</type>
   <parameter>events</parameter>
   <initializer>0</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>mixed</type>
   <parameter>arg</parameter>
   <initializer>&null;</initializer>
  </methodparam>
 </methodsynopsis>
 <para>
  <variablelist>
   <varlistentry>
    <term>
     <parameter>bev</parameter>
    </term>
    <listitem>
     <para>
      Objet <classname>EventBufferEvent</classname> associé.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>events</parameter>
    </term>
    <listitem>
     <para>
      Masque d'octets d'événements :
      <constant>EventBufferEvent::READING</constant>,
      <constant>EventBufferEvent::WRITING</constant>,
      <constant>EventBufferEvent::EOL</constant>,
      <constant>EventBufferEvent::ERROR</constant> et
      <constant>EventBufferEvent::TIMEOUT</constant>. Voir les
      <link linkend="eventbufferevent.constants">constantes EventBufferEvent</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>arg</parameter>
    </term>
    <listitem>
     <para>
      Variable personnalisée attachée à toutes les fonctions de rappel via
      la méthode <methodname>EventBufferEvent::__construct</methodname> ou
      la méthode <methodname>EventBufferEvent::setCallbacks</methodname>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
