<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f80105b4fc1196bd8d5fecb98d686b580b1ff65d Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.eventbuffer" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La classe EventBuffer</title>
 <titleabbrev>EventBuffer</titleabbrev>
 <partintro>
<!-- {{{ EventBuffer intro -->
  <section xml:id="eventbuffer.intro">
   &reftitle.intro;
   <para>
    La classe <classname>EventBuffer</classname> représente
    "evbuffer" de Libevent, un utilitaire pour les I/O bufferisés.
   </para>
   <para>
    Les buffers d'événements sont générallement utiles pour réaliser la
    partie buffer d'un réseau I/O bufferisé.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="eventbuffer.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EventBuffer</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EventBuffer</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-any">EventBuffer::EOL_ANY</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-crlf">EventBuffer::EOL_CRLF</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-crlf-strict">EventBuffer::EOL_CRLF_STRICT</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.eol-lf">EventBuffer::EOL_LF</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.ptr-set">EventBuffer::PTR_SET</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.constants.ptr-add">EventBuffer::PTR_ADD</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.props.length">length</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="eventbuffer.props.contiguous-space">contiguous_space</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.eventbuffer')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EventBuffer properties -->
  <section xml:id="eventbuffer.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="eventbuffer.props.length">
     <term>
      <varname>length</varname>
     </term>
     <listitem>
      <para>
       Le nombre d'octets stockés dans un buffer d'événement.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.props.contiguous-space">
     <term>
      <varname>contiguous_space</varname>
     </term>
     <listitem>
      <para>
       Le nombre d'octets stockés de façon contigues au début du buffer.
       Les octets dans un buffer peuvent être stockés dans plusieurs parties
       séparées de la mémoire ; cette propriété retourne le nombre d'octets
       actuellement stockés dans la première partie.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
<!-- {{{ EventBuffer constants -->
  <section xml:id="eventbuffer.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="eventbuffer.constants.eol-any">
     <term>
      <constant>EventBuffer::EOL_ANY</constant>
     </term>
     <listitem>
      <para>
       La fin de ligne est une séquence de nombre représentent un retour charriot
       et une nouvelle ligne. Ce format n'est pas très utile ; il existe encore
       seulement pour des raisons de compatibilité ascendante.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-crlf">
     <term>
      <constant>EventBuffer::EOL_CRLF</constant>
     </term>
     <listitem>
      <para>
       La fin de ligne est un retour charriot optionnel, suivi par une nouvelle
       ligne. (En d'autres termes, c'est soit <literal>"\r\n"</literal>,
       soit <literal>"\n"</literal>). Ce format est utile pour analyser
       les protocoles Internet basés sur du texte ; le standard veut qu'on
       utilise <literal>"\r\n"</literal> mais quelques clients fournissent
       seulement <literal>"\n"</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-crlf-strict">
     <term>
      <constant>EventBuffer::EOL_CRLF_STRICT</constant>
     </term>
     <listitem>
      <para>
       La fin de ligne est un simple retour charriot, suivant par une
       simple nouvelle ligne (aussi connu comme <literal>"\r\n"</literal>.
       Les valeurs ASCII sont <literal>0x0D</literal> <literal>0x0A</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.eol-lf">
     <term>
      <constant>EventBuffer::EOL_LF</constant>
     </term>
     <listitem>
      <para>
       La fin de ligne est un simple caractère de nouvelle ligne (aussi connu
       comme <literal>"\n"</literal>. La valeur ASCII est <literal>0x0A</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.ptr-set">
     <term>
      <constant>EventBuffer::PTR_SET</constant>
     </term>
     <listitem>
      <para>
       Drapeau utilisé comme argument de la méthode
       <methodname>EventBuffer::setPosition</methodname>. Si ce drapeau est spécifié,
       la position du pointeur est déplacé à une position absolue du buffer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventbuffer.constants.ptr-add">
     <term>
      <constant>EventBuffer::PTR_ADD</constant>
     </term>
     <listitem>
      <para>
       Identique à <constant>EventBuffer::PTR_SET</constant>,
       sauf que ce drapeau fait que la méthode
       <methodname>EventBuffer::setPosition</methodname>
       se déplace à une position en arrière par rapport au numéro
       d'octers spécifié (au lieu de définir une position absolue).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.event.entities.eventbuffer;

</phpdoc:classref>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
