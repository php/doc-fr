<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d548d52e97e8e4e4454842439cd70f521b61fcc4 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="eventbufferevent.sslsocket" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EventBufferEvent::sslSocket</refname>
  <refpurpose>Crée un nouveau tampon SSL dont ces données seront envoyées via un socket SSL</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <modifier>static</modifier>
   <type>EventBufferEvent</type>
   <methodname>EventBufferEvent::sslSocket</methodname>
   <methodparam>
    <type>EventBase</type>
    <parameter>base</parameter>
   </methodparam>
   <methodparam>
    <type>mixed</type>
    <parameter>socket</parameter>
   </methodparam>
   <methodparam>
    <type>EventSslContext</type>
    <parameter>ctx</parameter>
   </methodparam>
   <methodparam>
    <type>int</type>
    <parameter>state</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>int</type>
    <parameter>options</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Crée un nouveau tampon SSL dont ces données seront
   envoyées via un socket SSL.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>base</parameter>
    </term>
    <listitem>
     <para>
      Evenement de base associé.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>socket</parameter>
    </term>
    <listitem>
     <para>
      Socket à utiliser pour ce SSL. Peut-être un flux, une ressource
      de socket, un descripteur numérique de fichier, ou &null;. Si le
      paramètre <parameter>socket</parameter> vaut &null;, on imagine
      que le descripteur de fichier pour ce socket sera sssigné ultérieurement
      via la méthode <methodname>EventBufferEvent::connectHost</methodname>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>ctx</parameter>
    </term>
    <listitem>
     <para>
      Objet de la classe <classname>EventSslContext</classname>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>state</parameter>
    </term>
    <listitem>
     <para>
      Le statut courant de la connexion SSL :
      <constant>EventBufferEvent::SSL_OPEN</constant>,
      <constant>EventBufferEvent::SSL_ACCEPTING</constant> ou
      <constant>EventBufferEvent::SSL_CONNECTING</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>options</parameter>
    </term>
    <listitem>
     <para>
      Les options du tampon d'événement.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet <classname>EventBufferEvent</classname>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <methodname>EventBufferEvent::sslFilter</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
