<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: da9d81816187b87c03a6cd92a3c3b833f039485c Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="eventconfig.setmaxdispatchinterval" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EventConfig::setMaxDispatchInterval</refname>
  <refpurpose>Evite l'inversion des priorités</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>void</type>
   <methodname>EventConfig::setMaxDispatchInterval</methodname>
   <methodparam>
    <type>int</type>
    <parameter>max_interval</parameter>
   </methodparam>
   <methodparam>
    <type>int</type>
    <parameter>max_callbacks</parameter>
   </methodparam>
   <methodparam>
    <type>int</type>
    <parameter>min_priority</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Evite l'inversion des priorités en limitant le nombre
   de fonctions de rappel d'événements en basse priorité qui peuvent
   être invoquées avant de vérifier la présence d'événements de haute
   priorité.
  </para>
  <note>
   <para>
    Disponible depuis <literal>libevent 2.1.0-alpha</literal>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>max_interval</parameter>
    </term>
    <listitem>
     <para>
      Un intervalle après lequel Libevent va arrêter l'exécution des
      fonctions de rappel et vérifier la présence d'autres événements, ou
      <constant>0</constant> s'il ne doit pas y avoir de tel intervalle.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>max_callbacks</parameter>
    </term>
    <listitem>
     <para>
      Un nombre de fonctions de rappel après lequel Libevent doit arrêter
      l'exécution des fonctions de rappel et vérifier la présence d'autres
      événements, ou <constant>-1</constant> s'il ne doit pas y avoir
      de telle limite.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>min_priority</parameter>
    </term>
    <listitem>
     <para>
      Une priorité en dessous de laquelle <parameter>max_interval</parameter>
      et <parameter>max_callbacks</parameter> ne doivent pas être pris
      en compte. Si défini à <constant>0</constant>, ils seront pris
      en compte pour les événements de n'importe quelle priorité ;
      si défini à <constant>1</constant>, ils seront pris en compte
      pour les événements de priorité <constant>1</constant> et ainsi
      de suite.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
