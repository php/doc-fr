<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.array-intersect-key">
 <refnamediv>
  <refname>array_intersect_key</refname>
  <refpurpose>Calcule l'intersection de deux tableaux en utilisant les clés pour comparaison</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect_key</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_intersect_key</function> retourne un tableau contenant
   toutes les entrées du tableau <parameter>array</parameter>
   qui contiennent des clés présentes dans tous les tableaux passés en arguments.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau contenant les clés maîtresses à vérifier.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       Tableaux à comparer contre
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif contenant toutes les entrées du
   tableau <parameter>array</parameter> dont les clés sont présentes
   dans tous les arguments.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &array.changelog.require-only-one;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_intersect_key</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array('bleu'  => 1, 'rouge'  => 2, 'vert'  => 3, 'violet' => 4);
$array2 = array('vert' => 5, 'bleu' => 6, 'jaune' => 7, 'cyan'   => 8);

var_dump(array_intersect_key($array1, $array2));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["bleu"]=>
  int(1)
  ["vert"]=>
  int(3)
}
]]>
    </screen>
   </example>
  </para>
  <para>
   Dans cet exemple, vous pouvez voir que seules les clés <literal>'bleu'</literal>
   et <literal>'vert'</literal> sont présentes dans les deux tableaux et donc, 
   elles sont retournées. Notez également que les valeurs pour les clés
   <literal>'bleu'</literal> et <literal>'vert'</literal> diffèrent
   entre les deux tableaux. Néanmoins, elles correspondent toujours car
   uniquement les clés sont vérifiées.
   Les valeurs retournées sont celles du tableau <parameter>array1</parameter>.
  </para>
  <para>
   Les deux clés depuis les paires <literal>clé =&gt; valeur</literal>
   sont considérées comme égales uniquement si 
   <literal>(string) $cle1 === (string) $cle2 </literal>. En d'autres mots, 
   une analyse stricte du type est exécutée, donc la représentation sous forme de
   chaine doit être exactement la même.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_diff_key</function></member>
    <member><function>array_diff_ukey</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_intersect_uassoc</function></member>
    <member><function>array_intersect_ukey</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
