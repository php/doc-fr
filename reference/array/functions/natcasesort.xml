<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2ca090342977839edca2f7f4e52305a1b5da6095 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.natcasesort" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>natcasesort</refname>
  <refpurpose>Trie un tableau avec l'algorithme à "ordre naturel" insensible à la casse</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>true</type><methodname>natcasesort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>natcasesort</function> est la version insensible à la
   casse de <function>natsort</function>.
  </para>
  <para>
   Cette fonction implémente un algorithme de tri qui traite les
   chaînes alphanumériques du tableau <parameter>array</parameter>
   comme un être humain tout en conservant la relation clé/valeur.
   C'est ce qui est appelé l'"ordre naturel".
  </para>
  &note.sort-unstable;
  &note.reset-index;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau d'entrée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &return.type.true;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>natcasesort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = $array2 = array('IMG0.png', 'img12.png', 'img10.png', 'img2.png', 'img1.png', 'IMG3.png');

sort($array1);
echo "Tri standard\n";
print_r($array1);

natcasesort($array2);
echo "\nTri en ordre naturel (insensible à la casse)\n";
print_r($array2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Tri standard
Array
(
    [0] => IMG0.png
    [1] => IMG3.png
    [2] => img1.png
    [3] => img10.png
    [4] => img12.png
    [5] => img2.png
)

Tri en ordre naturel (insensible à la casse)
Array
(
    [0] => IMG0.png
    [4] => img1.png
    [3] => img2.png
    [5] => IMG3.png
    [2] => img10.png
    [1] => img12.png
)
]]>
    </screen>
    <para>
     Pour plus de détails, rendez-vous sur le site de Martin Pool sur
     <link xlink:href="&url.strnatcmp;">la comparaison de chaînes en ordre naturel</link>.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>natsort</function></member>
    <member>&seealso.array.sorting;</member>
    <member><function>strnatcmp</function></member>
    <member><function>strnatcasecmp</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
