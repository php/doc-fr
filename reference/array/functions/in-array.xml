<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8cd7c0d8c574903e149c1da0689a8728cdf909d4 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.in-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>in_array</refname>
  <refpurpose>Indique si une valeur appartient à un tableau</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>in_array</methodname>
   <methodparam><type>mixed</type><parameter>needle</parameter></methodparam>
   <methodparam><type>array</type><parameter>haystack</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>strict</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Recherche <parameter>needle</parameter> dans <parameter>haystack</parameter> en utilisant une comparaison
   souple à moins que <parameter>strict</parameter> ne soit utilisé.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       La valeur recherchée.
      </para>
      <note>
       <para>
        Si <parameter>needle</parameter> est une &string;, la comparaison
        est faite en tenant compte de la casse.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       Le tableau.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strict</parameter></term>
     <listitem>
      <para>
       Si le troisième paramètre <parameter>strict</parameter> est définit à
       &true; alors la fonction <function>in_array</function> vérifiera aussi que le <link linkend="language.types">type</link>
       du paramètre <parameter>needle</parameter>
       correspond au type de la valeur trouvée dans <parameter>haystack</parameter>.
      </para>
      <note>
       <para>
        Avant PHP 8.0.0, un <literal>string</literal> <parameter>needle</parameter> correspondra
        à une valeur de tableau de <literal>0</literal> en mode non strict et vice versa.
        Cela peut conduire à des résultats non souhaitables.
        Des cas particuliers similaires existent également pour d'autres types.
        Si vous n'êtes pas absolument certain des types de valeurs concernés,
        utilisez toujours le drapeau <parameter>strict</parameter> pour éviter tout comportement inattendu.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si <parameter>needle</parameter> est trouvé dans le tableau,
   &false; sinon.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>in_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$os = array("Mac", "NT", "Irix", "Linux");
if (in_array("Irix", $os)) {
    echo "Got Irix";
}
if (in_array("mac", $os)) {
    echo "Got mac";
}
?>
]]>
    </programlisting>
    <para>
     La seconde condition échoue, car <function>in_array</function>
     est sensible à la casse. Le script retourne :
    </para>
    <screen>
<![CDATA[
Got Irix
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>in_array</function> et le mode strict</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array('1.10', 12.4, 1.13);

if (in_array('12.4', $a, true)) {
    echo "'12.4' est trouvé avec le mode strict\n";
}

if (in_array(1.13, $a, true)) {
    echo "1.13 est trouvé avec le mode strict\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1.13 est trouvé avec le mode strict
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>in_array</function> et un tableau en paramètre</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array(array('p', 'h'), array('p', 'r'), 'o');

if (in_array(array('p', 'h'), $a)) {
    echo "'ph' a été trouvé\n";
}

if (in_array(array('f', 'i'), $a)) {
    echo "'fi' was found\n";
}

if (in_array('o', $a)) {
    echo "'o' a été trouvé\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
  'ph' a été trouvé
  'o' a été trouvé
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_search</function></member>
    <member><function>isset</function></member>
    <member><function>array_key_exists</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
