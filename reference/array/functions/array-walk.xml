<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 41f8ef55405db33f5b63d2a7856dddcab0fbf135 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: DavidA. -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Exécute une fonction fournie par l'utilisateur sur chacun des éléments d'un tableau</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Exécute la fonction <parameter>callback</parameter> définie par l'utilisateur
   sur chaque élément du tableau <parameter>array</parameter>.
  </simpara>
  <para>
   <function>array_walk</function> n'est pas affecté par le pointeur interne
   du tableau <parameter>array</parameter>.
   <function>array_walk</function> traversera le tableau en totalité
   sans se soucier de la position du pointeur.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Typiquement, <parameter>callback</parameter> prend deux paramètres.
       La valeur du paramètre <parameter>array</parameter>
       étant le premier et la clé/index, le second.
      </para>
      <note>
       <para>
        Si <parameter>callback</parameter> doit travailler avec les véritables
        valeurs du tableau, spécifiez que le premier paramètre de
        <parameter>callback</parameter> doit être passé par
        <link linkend="language.references">référence</link>. Alors, les
        éléments seront directement modifiés dans le tableau.
       </para>
      </note>
      <note>
       <para>
        Plusieurs fonctions internes (par exemple, <function>strtolower</function>)
        émettent une alerte si plus d'arguments que ceux attendus sont passés
        à la fonction et ne sont pas utilisables directement comme
        <parameter>callback</parameter>.
       </para>
      </note>
      <para>
       Seules les valeurs du <parameter>array</parameter> peuvent être modifiées ;
       sa structure ne peut pas, c'est-à-dire que vous ne pouvez ajouter, supprimer
       ou réordonner des éléments. Si la fonction de callback ne respecte pas cette
       règle, le comportement va devenir indéfini et imprévisible.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg</parameter></term>
     <listitem>
      <para>
       Si le paramètre optionnel <parameter>arg</parameter>
       est fourni, il sera passé comme troisième paramètre à la
       fonction définie par l'utilisateur <parameter>callback</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   À partir de PHP 7.1.0, un <classname>ArgumentCountError</classname>
   sera levé si la fonction <parameter>callback</parameter> requiert plus
   de 2 paramètres (la valeur et la clé de l'élément du tableau),
   ou plus de 3 si <parameter>arg</parameter> est aussi fournit.
   Précédemment, dans ce cas une erreur de niveau
   <link linkend="errorfunc.constants">E_WARNING</link>
   aurait été générée à chaque fois que la fonction
   <function>array_walk</function> appelle <parameter>callback</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Si <parameter>callback</parameter> attend que le deuxième ou troisième
       paramètre soit passé par référence, cette fonction émet désormais
       une <constant>E_WARNING</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_walk</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print($item2, $key)
{
    echo "$key. $item2\n";
}

echo "Avant ...:\n";
array_walk($fruits, 'test_print');

array_walk($fruits, 'test_alter', 'fruit');
echo "... et après :\n";

array_walk($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Avant ...:
d. lemon
a. orange
b. banana
c. apple
... et après :
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
