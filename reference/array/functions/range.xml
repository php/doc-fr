<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 62421b98a97fe576987878055e17cf755eb395af Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.range" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>range</refname>
  <refpurpose>Crée un tableau contenant un intervalle d'éléments</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>range</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type><type>float</type></type><parameter>start</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>int</type><type>float</type></type><parameter>end</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>float</type></type><parameter>step</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crée un tableau contenant un intervalle d'éléments.
  </para>
  <para>
   Si à la fois <parameter>start</parameter> et <parameter>end</parameter> sont des
   <type>string</type>, et que <parameter>step</parameter> est de type
   <type>int</type>, le tableau produit sera une séquence d'octets.
   Sinon, le tableau produit sera une séquence de nombres.
  </para>
  <para>
   La séquence est croissante si <parameter>start</parameter> est inférieur ou égal à
   <parameter>end</parameter>.
   Sinon, la séquence est décroissante.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Première valeur de la séquence.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end</parameter></term>
     <listitem>
      <para>
       Dernière valeur possible de la séquence.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>step</parameter></term>
     <listitem>
      <para>
       <parameter>step</parameter> indique de combien la séquence produite progresse
       entre les valeurs de la séquence.
      </para>
      <para>
       <parameter>step</parameter> peut être négatif pour les séquences décroissantes.
      </para>
      <para>
       Si <parameter>step</parameter> est un <type>float</type> sans partie
       fractionnaire, il est interprété comme un <type>int</type>.
      </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une séquence d'éléments sous forme d'un tableau <type>array</type> avec le premier
   élément étant <parameter>start</parameter> allant jusqu'à
   <parameter>end</parameter>, chaque valeur de la séquence étant
   séparée de <parameter>step</parameter> valeurs.
  </para>
  <para>
   Le dernier élément du tableau retourné est soit <parameter>end</parameter>
   soit l'élément précédent de la séquence,
   en fonction de la valeur de <parameter>step</parameter>.
  </para>
  <para>
   Si à la fois <parameter>start</parameter> et <parameter>end</parameter> sont
   des <type>string</type>, et que <parameter>step</parameter> est de type <type>int</type>
   le tableau produit sera une séquence d'octets,
   généralement des caractères <abbrev>ASCII</abbrev> latins.
  </para>
  <para>
   Si au moins l'un des <parameter>start</parameter>, <parameter>end</parameter>
   ou <parameter>step</parameter> est de type <type>float</type>,
   le tableau produit sera une séquence de <type>float</type>.
  </para>
  <para>
   Sinon, le tableau produit sera une séquence de <type>int</type>.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Si <parameter>step</parameter> est égal à <literal>0</literal>,
     une <classname>ValueError</classname> est générée.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>start</parameter>, <parameter>end</parameter>,
     ou <parameter>step</parameter> ne sont pas <function>is_finite</function>,
     une <classname>ValueError</classname> est générée.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>step</parameter> est négatif,
     mais la plage produite est croissante
     (c'est-à-dire <code>$start &lt;= $end</code>),
     une <classname>ValueError</classname> est générée.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>start</parameter> ou <parameter>end</parameter>
     est la chaîne vide <literal>''</literal>,
     un <constant>E_WARNING</constant> est émis et
     la chaîne vide sera interprétée comme <literal>0</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>start</parameter> ou <parameter>end</parameter>
     est une chaîne non-<link linkend="language.types.numeric-strings">numérique</link>
     avec plus d'un octet, un <constant>E_WARNING</constant> est émis.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>start</parameter> ou <parameter>end</parameter> est une chaîne
     qui est implicitement convertie en <type>int</type> parce que l'autre valeur
     de limite est un nombre, un <constant>E_WARNING</constant> est émis.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>step</parameter> est de type <type>float</type>,
     et que <parameter>start</parameter> et <parameter>end</parameter> sont
     des chaînes non-<link linkend="language.types.numeric-strings">numériques</link>,
     un <constant>E_WARNING</constant> est émis.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Si à la fois <parameter>start</parameter> et <parameter>end</parameter>
       sont des chaînes, alors <function>range</function> produira désormais
       systématiquement un tableau de <type>string</type>.
       Auparavant, si l'une des valeurs limites était une chaîne numérique,
       l'autre valeur limite était implicitement convertie en <type>int</type>.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Un <constant>E_WARNING</constant> est désormais émis si
       <parameter>start</parameter> ou <parameter>end</parameter>
       est une chaîne qui est implicitement convertie en <type>int</type>
       parce que l'autre valeur limite est un nombre.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Un <constant>E_WARNING</constant> est désormais émis si
       <parameter>start</parameter> ou <parameter>end</parameter>
       est une chaîne non-<link linkend="language.types.numeric-strings">numérique</link>
       avec plus d'un octet.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Un <constant>E_WARNING</constant> est désormais émis si
       <parameter>start</parameter> ou <parameter>end</parameter>
       est la chaîne vide.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Si <parameter>step</parameter> est de type <type>float</type> sans
       partie fractionnaire, il sera interprété comme un <type>int</type>.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Une <classname>ValueError</classname> est désormais générée si
       <parameter>step</parameter> est négatif lors de la production d'une plage croissante.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Une <classname>ValueError</classname> est désormais générée si
       <parameter>step</parameter> n'est pas fini.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Une <classname>TypeError</classname> est désormais générée si
       <parameter>start</parameter> ou <parameter>end</parameter>
       est un tableau, un objet, ou une ressource.
       Auparavant, elles étaient implicitement converties en <type>int</type>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>range</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo implode(', ', range(0, 12)), PHP_EOL;

echo implode(', ', range('a', 'i')), PHP_EOL;

echo implode(', ', range('c', 'a')), PHP_EOL;

echo implode(', ', range('A', 'z')), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100
a, b, c, d, e, f, g, h, i
c, b, a
A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, [, \, ], ^, _, `, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shuffle</function></member>
    <member><function>array_fill</function></member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
