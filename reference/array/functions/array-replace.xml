<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a51ec6735093d3f71d8b2139967851a7b6df3d65 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace</refname>
  <refpurpose>Remplace les éléments d'un tableau par ceux d'autres tableaux</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>replacements</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace</function> remplace les valeurs du tableau
   <parameter>array</parameter> avec les valeurs ayant les mêmes clés
   dans les tableaux fournis. Si une clé du premier tableau existe dans un des
   tableaux suivants, sa valeur sera remplacée. Si la clé n'existe pas 
   dans le premier tableau, elle sera créée. Si la clé n'existe que dans 
   le premier tableau, elle sera laissée intacte. Si plusieurs tableaux
   sont passés comme arguments de remplacement, ils seront traités dans l'ordre.
  </para>
  <para>
   <function>array_replace</function> n'est pas récursif : il remplace les valeurs
   du premier tableau par la valeur des tableaux suivants, quel que soit leur type.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau dans lequel les éléments sont remplacés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacements</parameter></term>
     <listitem>
      <para>
       Tableaux depuis lesquels les éléments seront 
       extraits. Les valeurs des futurs tableaux
       écraseront les valeurs précédentes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un &array;.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array("orange", "banana", "apple", "raspberry");
$replacements = array(0 => "pineapple", 4 => "cherry");
$replacements2 = array(0 => "grape");

$basket = array_replace($base, $replacements, $replacements2);
print_r($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => grape
    [1] => banana
    [2] => apple
    [3] => raspberry
    [4] => cherry
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace_recursive</function></member>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
