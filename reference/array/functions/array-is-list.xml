<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2e60c5134e7a847c99f81eb3f7ecee1f5efeeace Maintainer: pierrick Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.array-is-list" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_is_list</refname>
  <refpurpose>Vérifie si un <parameter>array</parameter> donné est une liste</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_is_list</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Détermine si l'<parameter>array</parameter> donné est une liste.
   Un &array; est considéré comme une liste si ses clés sont constituées de nombres consécutifs
   de <literal>0</literal> à <literal>count($array)-1</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le &array; en cours d'évaluation. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   retourne &true; si <parameter>array</parameter> est une liste, sinon &false;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple de <function>array_is_list</function></title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(array_is_list([])); // true
var_dump(array_is_list(['apple', 2, 3])); // true
var_dump(array_is_list([0 => 'apple', 'orange'])); // true

// Le tableau ne commence pas à 0
var_dump(array_is_list([1 => 'apple', 'orange'])); // false

// Les clés ne sont pas dans le bon ordre
var_dump(array_is_list([1 => 'apple', 0 => 'orange'])); // false

// Clés non entières
var_dump(array_is_list([0 => 'apple', 'foo' => 'bar'])); // false

// Clés non consécutives
var_dump(array_is_list([0 => 'apple', 2 => 'bar'])); // false
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cette fonction retourne &true; pour les tableaux vides.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_values</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
