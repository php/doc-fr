<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 767338231c3e14c7be5399b8e2e0c3b60f7ae8dd Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.urlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>urlencode</refname>
  <refpurpose>Encode une chaîne en URL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>urlencode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction est utile lors de l'encodage d'une &string; à utiliser
   dans la partie d'une URL, comme façon simple de passer des variables
   vers la page suivante.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La &string; à encoder.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une chaîne dont les caractères non alphanumériques
   (hormis <literal>-_.</literal>) sont remplacés par des séquences
   commençant par un caractère pourcentage (<literal>%</literal>),
   suivi de deux chiffres hexadécimaux. Les espaces sont
   remplacés par des signes plus (<literal>+</literal>).
   Ce codage est celui qui est utilisé pour poster des
   informations dans les formulaires HTML. Le type MIME est
   <literal>application/x-www-form-urlencoded</literal>.
   Ce codage est différent de celui spécifié
   dans la <link xlink:href="&url.rfc;3986">RFC 3986</link> (voir
   <function>rawurlencode</function>) : pour des raisons historiques,
   les espaces sont remplacés par des signes plus (<literal>+</literal>).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>urlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$userinput = 'Data123!@-_ +';
echo "UserInput: $userinput\n";
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
UserInput: Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>urlencode</function> et <function>htmlentities</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = 'Data123!@-_ +';
$bar = "Not the same content as $foo";
echo "foo: $foo\n";
$query_string = 'foo=' . urlencode($foo) . '&bar=' . urlencode($bar);
echo '<a href="mycgi?' . htmlentities($query_string) . '">';
?>
]]>
    </programlisting>
     &example.outputs;
    <screen role="html">
<![CDATA[
foo: Data123!@-_ +
bar: Not the same content as Data123!@-_ +
<a href="mycgi?foo=Data123%21%40-_+%2B&amp;bar=Not+the+same+content+as+Data123%21%40-_+%2B">
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Faites bien attention aux variables qui ressemblent à
    des entités HTML, comme &amp;amp;, &amp;copy; et &amp;pound;,
    qui sont analysées par le client web et remplacées par leur
    valeur. C'est un vrai problème qui a été montré par le W3C
    depuis longtemps. La référence est ici :
    <link xlink:href="&url.argsep;">&url.argsep;</link>.
   </para>
   <para>
    PHP supporte le remplacement de séparateur d'arguments par un
    point-virgule, comme recommandé par le W3C, grâce à
    la directive <option>arg_separator</option> du fichier &php.ini;.
    Malheureusement, la plupart des clients web
    n'envoient pas leurs données de formulaire avec des points-virgules. Une
    solution plus portable est d'utiliser <literal>&amp;amp;</literal>
    à la place de <literal>&amp;</literal> comme
    séparateur. Vous n'avez alors pas à changer la directive
    <option>arg_separator</option>. Laissez-la à &amp;, mais encodez vos URL
    en utilisant <function>htmlentities</function> ou
    <function>htmlspecialchars</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>urldecode</function></member>
    <member><function>htmlentities</function></member>
    <member><function>rawurlencode</function></member>
    <member><function>rawurldecode</function></member>
    <member><link xlink:href="&url.rfc;3986">RFC 3986</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
