<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 552b2b938cc6f2e33001916ec6391931a663936f Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="gearmanworker.wait" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanWorker::wait</refname>
  <refpurpose>Attente une activité d'un ou plusieurs serveurs de travaux</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>GearmanWorker::wait</methodname>
   <void />
  </methodsynopsis>
  <para>
   Met à attente l'agent d'une activité d'un ou plusieurs serveurs de travaux lors
   d'un fonctionnement en mode I/O non bloquant. En cas d'échec, une alerte de niveau
   <constant>E_WARNING</constant> sera émise avec le contenu de la dernière erreur Gearman
   survenue.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exécution d'un agent en mode non bloquant</title>
    <programlisting role="php">
<![CDATA[
<?php

echo "Début\n";

# Crée un nouvel agent
$worker= new GearmanWorker();

# Rend l'agent non bloquant
$worker->addOptions(GEARMAN_WORKER_NON_BLOCKING); 

# Ajoute un serveur par défaut (localhost, port 4730)
$worker->addServer(); 

# Ajoute une fonction "reverse"
$worker->addFunction('reverse', 'reverse_fn');

# Tente de récupérer un travail
while (@$worker->work() ||
       $worker->returnCode() == GEARMAN_IO_WAIT ||
       $worker->returnCode() == GEARMAN_NO_JOBS)
{
  if ($worker->returnCode() == GEARMAN_SUCCESS)
    continue;

  echo "Attente du premier travail...\n";
  if (!@$worker->wait()) 
  { 
    if ($worker->returnCode() == GEARMAN_NO_ACTIVE_FDS) 
    { 
      # Nous ne sommes connectés à aucun serveur ; nous attendons donc un peu
      # avant de tenter une reconnexion.
      sleep(5); 
      continue; 
    } 
    break; 
  } 
} 

echo "Erreur de l'agent : " . $worker->error() . "\n";

function reverse_fn($job)
{
  return strrev($job->workload());
}


?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanWorker::work</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
