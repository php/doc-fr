<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 826073522514072830b63bee2b6135dc675ea45d Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mt-rand" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mt_rand</refname>
  <refpurpose>Génère une valeur aléatoire via le générateur de nombre aléatoire Mersenne Twister</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <void/>
  </methodsynopsis>
  <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <methodparam><type>int</type><parameter>min</parameter></methodparam>
   <methodparam><type>int</type><parameter>max</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   De nombreux générateurs de nombres aléatoires
   provenant de vieilles bibliothèques libcs ont des comportements
   douteux et sont très lents. <function>mt_rand</function> est une 
   fonction de remplacement pour <function>rand</function>. Elle utilise un
   générateur de nombres aléatoire de caractéristique
   connue, le " <link xlink:href="&url.mersenne;">Mersenne Twister</link> " qui
   est 4 fois plus rapide que la fonction standard libc.
  </simpara>
  <simpara>
   Appelée sans les arguments optionnels <parameter>min</parameter> et
   <parameter>max</parameter>, <function>mt_rand</function> retourne un nombre
   pseudoaléatoire, entre 0 et <function>mt_getrandmax</function>.
   Pour obtenir un nombre entre 5 et 15 inclus, il faut utiliser
   <literal>mt_rand(5,15)</literal>.
  </simpara>
  &caution.cryptographically-insecure;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>min</parameter></term>
     <listitem>
      <para>
       Valeur la plus basse qui peut être retournée (par défaut : 0)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max</parameter></term>
     <listitem>
      <para>
       Valeur la plus haute qui peut être retournée (par défaut : <function>mt_getrandmax</function>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un &integer; aléatoire compris entre <parameter>min</parameter> (ou 0)
   et <parameter>max</parameter> (ou <function>mt_getrandmax</function>, inclusif),
   ou &false; si le paramètre <parameter>max</parameter> est inférieur à
   <parameter>min</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <function>mt_rand</function> <link linkend="migration72.incompatible.rand-mt_rand-output">a reçu une correction de bogue</link> pour un bug de polarisation modulo. Cela signifie que les séquences générées avec une valeur d'initialisation spécifique peuvent différer de php 7.1 sur les machines 64-bit.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        <function>rand</function> <link linkend="migration71.incompatible.rand-srand-aliases">est devenu</link> un alias de <function>mt_rand</function>.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        <function>mt_rand</function> 
        <link linkend="migration71.incompatible.fixes-to-mt_rand-algorithm">a été mis à jour</link> 
        pour utiliser la version corrigée, correcte, de l'algorithme Twister 
        Mersenne. Pour revenir à l'ancien comportement, utilisez 
        <function>mt_srand</function> avec <constant>MT_RAND_PHP</constant> 
        comme deuxième paramètre.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mt_rand</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo mt_rand(), "\n";
echo mt_rand(), "\n";

echo mt_rand(5, 15), "\n";
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
1604716014
1478613278
6
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    La plage <parameter>min</parameter> <parameter>max</parameter> doit se situer 
    dans la plage <function>mt_getrandmax</function>. i.e. 
    <parameter>max</parameter> - <parameter>min</parameter>) &lt;= 
    <function>mt_getrandmax</function> sinon, <function>mt_rand</function> peut 
    retourner des nombres aléatoires plus pauvres qu'il ne le devrait.
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mt_srand</function></member>
    <member><function>mt_getrandmax</function></member>
    <member><function>random_int</function></member>
    <member><function>random_bytes</function></member>
    <member><function>rand</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
