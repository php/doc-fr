<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9e2d8231b5d8a3795b365c6770fab288e59e6249 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Installation d'extensions PECL</title>
 
 <sect1 xml:id="install.pecl.intro">
  <title>Introduction aux installations PECL</title>
  <simpara>
   &link.pecl; est un dépôt d'extensions PHP
   qui est disponibles via le système de paquet
   <link xlink:href="&url.php.pear;">PEAR</link>. Cette section du manuel a pour but de présenter
   la manière d'obtenir et d'installer les extensions de PECL.
  </simpara>
  <simpara>
   Ces instructions supposent que <literal>/path/to/php/src/dir/</literal> est le
   chemin jusqu'aux sources de la distribution PHP, et <literal>extname</literal> est le nom
   de l'extension PECL. Ajuster les commandes qui suivent en conséquence.
   Ces instructions supposent aussi une familiarité avec l'utilisation
   des <link xlink:href="&url.php.pear.cli;">commandes pear</link>.
   Les informations dans le manuel PEAR pour la commande <command>pear</command>
   sont également applicables à la commande <command>pecl</command>.
  </simpara>
  <simpara>
   Une extension partagée doit être compilée, installée et chargée pour être
   utilisée. Les méthodes décrites ci-dessous fournissent diverses
   instructions sur la façon de compiler et d'installer des extensions mais
   ne les chargent pas automatiquement. Les extensions peuvent être chargées
   en ajoutant une directive d'<link linkend="ini.extension">extension</link>
   au fichier &php.ini; ou à l'aide de la fonction <function>dl</function>.
  </simpara>
  <simpara>
   Lors de la compilation de modules PHP, il est important d'avoir les
   outils dans leurs versions appropriées, tels que autoconf, automake, libtool, etc. Se référer aux
   <link xlink:href="&url.php.anongit;">Instructions pour le Git anonyme</link>, afin
   de connaître les utilitaires nécessaires, et leurs versions.
  </simpara>
 </sect1>
 
 <sect1 xml:id="install.pecl.downloads">
  <title>Télécharger des extensions PECL</title>
  <simpara>
   Il existe plusieurs méthodes pour télécharger des extensions PECL :
  </simpara>
  <itemizedlist>
   <simpara>
    La commande <command>pecl install extname</command> télécharge le code
    des extensions automatiquement, ce qui évite de réaliser
    un téléchargement particulier.
   </simpara>
   <listitem>
    <simpara>
     <link xlink:href="&url.pecl;">&url.pecl;</link>
    </simpara>
    <simpara>
     Le site Web de PECL contient diverses informations sur les différentes extensions
     offertes par l'équipe de développement de PHP.
     Plusieurs informations y sont disponibles incluant les modifications
     entre les versions, les notes de versions, ce qui est requis pour faire fonctionner l'extension
     ainsi que d'autres détails similaires.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <command>pecl download extname</command>
    </simpara>
    <simpara>
     Les extensions PECL listées sur le site web de PECL sont disponibles
     et peuvent être téléchargées et installées en utilisant la
     <link xlink:href="&url.php.pear.cli;">commande pecl</link>.
     La version spécifique de l'extension peut également être spécifiée.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>git</acronym>
    </simpara>
    <simpara>
     Beaucoup d'extension PECL demeurent sur GitHub.
     <!-- TODO Expand -->
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>SVN</acronym>
    </simpara>
    <simpara>
     Certaines extensions PECL demeurent sur <acronym>SVN</acronym>.
     Une interface Web est disponible à <link xlink:href="&url.php.svn;pecl/">&url.php.svn;pecl/</link>.
     Pour télécharger directement depuis <acronym>SVN</acronym>, la séquence d'instructions
     ci-dessous peut être utilisée :
    </simpara>
    <para>
     <screen>
$ svn checkout https://svn.php.net/repository/pecl/extname/trunk extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Téléchargements pour Windows : 
    </simpara>
    <simpara>
     Le projet PHP compile et offre des DLLs Windows pour la plupart des 
     extensions PECL disponible sur la page du package.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>
 
 <sect1 xml:id="install.pecl.windows">
  <title>Installer une extension PHP sous Windows</title>
  <para>
   Il existe deux moyens de charger une extension PHP sous Windows : 
   soit la compiler dans PHP, soit charger une DLL. Charger une
   extension précompilée est la méthode la plus pratique et la plus recommandée.
  </para>
  <para>
   Pour charger une extension, son fichier <filename>.dll</filename> doit être disponible sur le système.
   Toutes les extensions sont automatiquement et périodiquement compilées par le groupe PHP
   (voir la section de téléchargements).
  </para>
  <para>
   Pour compiler une extension dans PHP, se référer à la 
   documentation sur <link linkend="install.windows.building">
   la compilation des sources</link>.
  </para>
  <para>
   Pour compiler une extension autonome, (c'est-à-dire un fichier DLL), se référer à la
   documentation sur <link linkend="install.windows.building">
   la compilation des sources</link>. Si le fichier DLL est absent de la distribution
   PHP et de PECL, il pourrait être necessaire de le compiler avant de pouvoir l'utiliser.
  </para>
  
  <sect2 xml:id="install.pecl.windows.find">
   <title>Où trouver une extension ?</title>
   <para>
    Les extensions PHP sont généralement appelées <filename>php_*.dll</filename> (où les astérisques
    représentent le nom de l'extension) et elles sont rangées dans le dossier 
    <filename>PHP\ext</filename>.
   </para>
   <para>
    PHP est livré avec les extensions qui sont les plus utiles à la majorité des utilisateurs.
    Elles sont appelées des extensions <emphasis>intégrées</emphasis>, ou <emphasis>bundled</emphasis>.
   </para>
   <para>
    Cependant, si les extensions intégrées ne fournissent pas la fonctionnalité nécessaire,
    une extension qui le fait peut être trouvée dans &link.pecl;.
    Le PHP Extension Community Library (PECL, aussi dit Bibliothèque d'Extensions Communautaires de PHP)
    est un dépôt pour les extensions PHP, fournissant un répertoire de toutes les extensions connues et
    des facilités d'hébergement pour le téléchargement et le développement d'extensions PHP.
   </para>
   <para>
    Si une extension a été développée pour un usage particulier, elle peut être hébergée sur PECL afin
    que d'autres personnes ayant les mêmes besoins puissent en bénéficier.
    Un effet secondaire intéressant est que c'est une bonne occasion de recevoir des commentaires,
    (avec un peu de chance) des remerciements, des rapports de bogues et même des correctifs. Avant de
    soumettre une extension pour hébergement sur PECL, merci de lire
    <link xlink:href="&url.pecl.submit;">PECL submit</link>.
   </para>
  </sect2>
  
  <sect2 xml:id="install.pecl.windows.which">
   <title>Quelles extensions télécharger ?</title>
   <para>
    <emphasis>Il existe souvent plusieurs versions de chaque DLL : </emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
       Différents numéros de versions (au moins, les deux premiers chiffres doivent être les mêmes)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Différentes configurations de sécurité de threads
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Différentes architectures de processeurs (x86, x64...)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Différentes configurations de débogage
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>etc.</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Il est recommandé de choisir les extensions pour qu'elles soient adaptées
    à la machine serveur sur laquelle PHP est utilisé. Le script suivant 
    va afficher <emphasis>toutes</emphasis> les configurations PHP : 
   </para>
   <para>
    <example>
     <title>Appel de la fonction <function>phpinfo</function></title>
     <programlisting role="php">
<![CDATA[
<?php
phpinfo();
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Ou bien, en ligne de commande : 
    <screen>
<![CDATA[
drive:\path\to\php\executable\php.exe -i
]]>
    </screen>
   </para>
  </sect2>
  
  <sect2 xml:id="install.pecl.windows.loading">
   <title>Charger une extension</title>
   <para>
    Le moyen le plus courant pour charger une extension PHP est de l'inclure dans le
    fichier de configuration &php.ini;. Il est à noter que de nombreuses extensions
    sont déjà présentes dans le fichier &php.ini; et qu'il suffit simplement de
    supprimer le point-virgule pour les activer. 
   </para>
   <para>
    À partir de PHP 7.2.0, le nom de l'extension peut être utilisé à la place
    du nom de l'extension. Comme il est indépendant de l'os et plus facile, en 
    particulier pour les nouveaux arrivants, il devient la manière recommandée 
    de spécifier des extensions à charger. Les noms de fichiers restent pris en 
    charge pour la compatibilité avec les versions antérieures.
   </para>
    <screen>
<![CDATA[
;extension=php_extname.dll
]]>
    </screen>
    <screen>
<![CDATA[
extension=php_extname.dll
]]>
    </screen>
    <screen>
<![CDATA[
; À partir de PHP 7.2, favoriser :
extension=extname
zend_extension=another_extension
]]>
    </screen>
   <para>
    Cependant, certains serveurs Web sont déroutants, car ils n'utilisent pas le fichier 
    &php.ini; rangé avec l'exécutable PHP. Pour en savoir plus sur le véritable 
    &php.ini; utilisé, il est possible de rechercher son emplacement à l'aide de <function>phpinfo</function>:
   </para>
    <screen>
<![CDATA[
Configuration File (php.ini) Path   C:\WINDOWS
]]>
    </screen>
    <screen>
<![CDATA[
Loaded Configuration File   C:\Program Files\PHP\8.2\php.ini
]]>
    </screen>
   <para>
    Après activation d'une extension, sauvegardez le fichier &php.ini;, et
    relancez le serveur Web, puis vérifiez à nouveau le fichier <function>phpinfo</function>.
    La nouvelle extension devrait y avoir sa section.
   </para>
  </sect2>
  
  <sect2 xml:id="install.pecl.windows.problemsolving">
   <title>Résolution de problèmes</title>
   <para>
    Si l'extension n'apparaît pas dans <function>phpinfo</function>,
    il convient de vérifier les logs pour savoir d'où vient le problème.
   </para>
   <para>
    Si PHP est utilisé en ligne de commande (CLI), l'erreur de chargement de l'extension
    devrait être lisible directement sur l'écran.
   </para>
   <para>
    Si PHP est utilisé sur un serveur Web, la position et le format des logs 
    varient grandement d'un serveur à l'autre. Lire la documentation du
    serveur Web pour savoir où ils sont : PHP n'a aucun control sur cet emplacement.
   </para>
   <para>
    Les problèmes les plus courants sont la localisation du fichier DLL et
    les DLLs dont il dépend, la valeur de la directive
    "<link linkend="ini.extension-dir">extension_dir</link>"
    dans le &php.ini; et les incohérences de compilations.
   </para>
   <para>
    Si le problème est une incohérence de compilation, la DLL téléchargée n'est
    probablement pas la bonne. Essayez d'en télécharger une nouvelle, avec les bonnes
    configurations du serveur. <function>phpinfo</function> sera fortement utile.
   </para>
  </sect2>
  
 </sect1>
 
 <sect1 xml:id="install.pecl.pear">
  <title>Compilation d'extensions PECL partagées avec la commande pecl</title>
  <simpara>
   PECL facilite la création d'extensions PHP partagées. En utilisant la
   <link xlink:href="&url.php.pear.cli;">commande pecl</link>, faites ceci :
  </simpara>
  <para>
   <screen>
$ pecl install extname
   </screen>
  </para>
  <simpara>
   Ceci va télécharger le fichier source de l'extension <emphasis>extname</emphasis>,
   le compiler et installer le fichier <filename>extname.so</filename> dans le
   dossier <link linkend="ini.extension-dir">extension_dir</link>.
   <filename>extname.so</filename> doit ensuite être chargé via &php.ini;.
  </simpara>
  <simpara>
   Par défaut, la commande <command>pecl</command> n'installera pas les paquets
   marqués comme étant <literal>alpha</literal> ou
   <literal>beta</literal>. Si aucun paquet <literal>stable</literal> n'est disponible,
   il est possible d'installer un paquet <literal>beta</literal> en utilisant la commande suivante :
  </simpara>
  <para>
   <screen>
$ pecl install extname-beta
   </screen>
  </para>
  <para>
   Il est également possible d'installer une version spécifique en utilisant la commande :
  </para>
  <para>
   <screen>
$ pecl install extname-0.1
   </screen>
  </para>
  <note>
   <para>
    Après avoir activé l'extension dans le &php.ini;, il est requis de relancer le serveur Web
    afin de la prendre en compte.
   </para>
  </note>
 </sect1>
 
 <sect1 xml:id="install.pecl.phpize">
  <title>Compilation des extensions partagées avec phpize</title>
  <simpara>
   Parfois, l'utilisation de l'installeur <command>pecl</command> n'est pas une option.
   Cela peut être dû à la présence d'un pare-feu ou au fait que l'extension en cours
   d'installation n'est pas disponible en tant que paquet PECL compatible, comme les
   extensions non publiées provenant de git. Si une telle extension doit être construite,
   les outils de construction de niveau inférieur peuvent être utilisés pour effectuer
   la construction manuellement.
  </simpara>
  <simpara>
   La commande <command>phpize</command> est utilisée pour préparer
   l'environnement de compilation pour une extension PHP. Dans l'exemple suivant, les
   sources de l'extension sont dans un dossier appelé <filename>extname</filename> :
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   Une installation réussie créera un fichier <filename>extname.so</filename>
   et le placera dans le <link linkend="ini.extension-dir">dossier des extensions</link>
   de PHP. Le &php.ini; devra être ajusté, et la ligne <literal>extension=extname.so</literal>
   ajoutée avant de pouvoir utiliser l'extension.
  </simpara>
  <simpara>
   Si le système ne possède pas la commande <command>phpize</command> et que
   des paquets précompilés (comme des RPM) sont utilisés, il faut s'assurer d'installer
   également la version de développement appropriée des paquets PHP car
   elle inclut également la commande <literal>phpize</literal> ainsi que les en-têtes
   appropriés pour construire PHP et ses extensions.
  </simpara>
  <simpara>
   Exécuter la commande <command>phpize --help</command> pour afficher des informations
   d'utilisation supplémentaires.
  </simpara>
 </sect1>
 
 <sect1 xml:id="install.pecl.php-config">
  <title>
   <command>php-config</command>
  </title>
  
  <para>
   <command>php-config</command> est un petit script shell pour obtenir des informations
   sur la configuration installée de PHP.
  </para>
  
  <para>
   Lors de la compilation des extensions, si plusieurs versions de PHP sont installées,
   l'installation pour laquelle il faut construire peut être spécifiée en utilisant l'option
   <option role="configure">--with-php-config</option> lors de la configuration, en définissant
   le chemin du script <command>php-config</command> correspondant.
  </para>
  
  <para>
   La liste des options de ligne de commande fournies par le script
   <command>php-config</command> peut être obtenue en exécutant le script <command>php-config</command>
   avec l'option <option>-h</option> :
   <screen>
<![CDATA[
Usage: /usr/local/bin/php-config [OPTION]
Options:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
]]>
   </screen>
  </para>
  
  <para>
   <table>
    <title>Options de ligne de commande</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Option</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>--prefix</entry>
       <entry>Préfixe du dossier où PHP est installé, i.e. /usr/local</entry>
      </row>
      <row>
       <entry>--includes</entry>
       <entry>Liste des options <literal>-I</literal> avec tous les fichiers inclus</entry>
      </row>
      <row>
       <entry>--ldflags</entry>
       <entry>Drapeaux <literal>LD</literal> qui ont été compilés avec PHP</entry>
      </row>
      <row>
       <entry>--libs</entry>
       <entry>Bibliothèques additionnelles qui ont été compilées avec PHP</entry>
      </row>
      <row>
       <entry>--extension-dir</entry>
       <entry>Dossiers où les extensions sont recherchées par défaut</entry>
      </row>
      <row>
       <entry>--include-dir</entry>
       <entry>Préfixe du dossier où les en-têtes de fichiers sont
        installés par défaut</entry>
      </row>
      <row>
       <entry>--php-binary</entry>
       <entry>Chemin complet vers le CLI PHP ou le binaire CGI</entry>
      </row>
      <row>
       <entry>--php-sapis</entry>
       <entry>Affiche tous les modules SAPI disponibles</entry>
      </row>
      <row>
       <entry>--configure-options</entry>
       <entry>Options de configuration pour recréer la configuration
        de l'installation courante de PHP</entry>
      </row>
      <row>
       <entry>--version</entry>
       <entry>Version de PHP</entry>
      </row>
      <row>
       <entry>--vernum</entry>
       <entry>Version de PHP sous la forme d'un entier</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>
 
 <sect1 xml:id="install.pecl.static">
  <title>Compilation des extensions PECL statiquement dans PHP</title>
  <simpara>
   Il peut être nécessaire de construire une extension PECL statiquement dans le binaire PHP.
   Pour ce faire, les sources de l'extension doivent être placées dans le répertoire
   <filename>/path/to/php/src/dir/ext/</filename>, et le système de compilation de PHP doit
   régénérer son script de configuration.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /path/to/php/src/dir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   Cela générera le dossier suivant :
  </simpara>
  <para>
   <screen>
    /path/to/php/src/dir/ext/extname
   </screen>
  </para>
  <simpara>
   À partir de là, PHP doit être forcé à reconstruire le script de configuration,
   et ensuite il peut être construit normalement :
  </simpara>
  <para>
   <screen>
$ cd /path/to/php/src/dir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
   </screen>
  </para>
  <note>
   <simpara>
    Pour exécuter le script <command>buildconf</command>, 
    <command>autoconf</command>
    <literal>2.68</literal>
    et
    <command>automake</command>
    <literal>1.4+</literal>
    seront nécessaires.
    Les versions plus récentes de <command>autoconf</command> peuvent fonctionner mais ne sont pas supportées.
   </simpara>
  </note>
  <simpara>
   L'utilisation de
   <option role="configure">--enable-extname</option>
   ou
   <option role="configure">--with-extname</option>
   dépend de l'extension.
   En général, une extension qui ne nécessite pas de bibliothèques externes utilise
   <option role="configure">--enable</option>.
   Pour s'en assurer, exécuter la commande suivante après <command>buildconf</command> :
  </simpara>
  <para>
   <screen>
$ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
