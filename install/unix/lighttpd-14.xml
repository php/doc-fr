<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7006df7c1fbc64457ac4011ae33309c3f3e5b202 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="install.unix.lighttpd-14" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Lighttpd 1.4 sur les systèmes Unix</title>

 <para>
  Cette section contient des informations spécifiques sur l'installation
  de PHP avec Lighttpd 1.4 sur les systèmes Unix.
 </para>

 <para>
  Reportez-vous à <link xlink:href="&url.lighttpd.doc;">Lighttpd</link>
  pour une installation correcte de Lighttpd avant de continuer.
 </para>
 
 <para>
  FastCGI est le SAPI préféré pour connecter PHP et Lighttpd. FastCGI active
  automatiquement php-cgi.
 </para>
 
 <sect2 xml:id="install.unix.lighttpd-14.lighttpd-spawn">
  <title>Appel de PHP par Lighttpd</title>

  <para>
   Pour configurer Lighttpd afin qu'il se connecte à PHP et appelle le processus
   FastCGI, vous devez éditez le fichier <filename>lighttpd.conf</filename>. Une connexion par sockets
   est la solution préférée pour les systèmes locaux.
  </para>

  <example>
   <title>Portion du fichier lighttpd.conf</title>
   <screen>
<![CDATA[
server.modules += ( "mod_fastcgi" )

fastcgi.server = ( ".php" =>
  ((
    "socket" => "/tmp/php.socket",
    "bin-path" => "/usr/local/bin/php-cgi",
    "bin-environment" => (
      "PHP_FCGI_CHILDREN" => "16",
      "PHP_FCGI_MAX_REQUESTS" => "10000"
    ),
    "min-procs" => 1,
    "max-procs" => 1,
    "idle-timeout" => 20
  ))
)
]]>

   </screen>
  </example>

  <para>
   La directive <filename>bin-path</filename> permet à lighttpd d'appeler le processus FastCGI
   dynamiquement. PHP appellera les fils suivant la variable d'environnement
   <envar>PHP_FCGI_CHILDREN</envar>. La directive <literal>bin-environment</literal> définit l'environnement
   pour les processus appelés. PHP terminera un processus fils lorsque le
   nombre de requêtes spécifié par <envar>PHP_FCGI_MAX_REQUESTS</envar> a été atteint.
   Les directives <literal>min-procs</literal> et <literal>max-procs</literal> peuvent généralement être ignorées
   avec PHP. PHP gère ces propres fils et caches opcode comme APC qui partage
   uniquement les fils gérés par PHP. Si <literal>min-procs</literal> est défini à quelque chose
   de supérieur à 1, le nombre total de réponses PHP sera multiplié par
   <envar>PHP_FCGI_CHILDREN</envar> (2 min-procs * 16 fils, donne 32 réponses).
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-fcgi">
  <title>Appel avec spawn-fcgi</title>

  <para>
   Lighttpd fournit un programme appelé spawn-fcgi afin de rendre plus facile
   les appels des processus FastCGI.
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-php">
  <title>Appel de php-cgi</title>

  <para>
   Il est possible d'appeler des processus sans spawn-fcgi, avec un
   minimum de configuration. La variable d'environnement <envar>PHP_FCGI_CHILDREN</envar>
   contrôle le nombre de fils que PHP appelle pour gérer les demandes.
   La variable d'environnement <envar>PHP_FCGI_MAX_REQUESTS</envar> détermine la durée de
   vie, en nombre de requêtes, de chaque fils. Voici un script bash simple
   qui permet d'aider les appels aux répondeurs PHP.
  </para>
     
  <example>
   <title>Appel des répondeurs FastCGI</title>
   <screen>
<![CDATA[
#!/bin/sh

# Localisation du binaire php-cgi
PHP=/usr/local/bin/php-cgi

# Localisation  du fichier PID
PHP_PID=/tmp/php.pid

# Liaison à une adresse
#FCGI_BIND_ADDRESS=10.0.1.1:10000
# Liaison à un socket du domaine
FCGI_BIND_ADDRESS=/tmp/php.sock

PHP_FCGI_CHILDREN=16
PHP_FCGI_MAX_REQUESTS=10000

env -i PHP_FCGI_CHILDREN=$PHP_FCGI_CHILDREN \
       PHP_FCGI_MAX_REQUESTS=$PHP_FCGI_MAX_REQUESTS \
       $PHP -b $FCGI_BIND_ADDRESS &

echo $! > "$PHP_PID"

]]>
   </screen>
  </example>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.remote-fcgi">
  <title>Connexion à des instances FCGI distantes</title>

  <para>
   Les instances FastCGI peuvent être appelées sur plusieurs machines distantes
   afin de répartir les applications.
  </para>
   
  <example>
   <title>Connexion à des instances distantes de php-fastcgi</title>
   <screen>
<![CDATA[
fastcgi.server = ( ".php" =>
   (( "host" => "10.0.0.2", "port" => 1030 ),
    ( "host" => "10.0.0.3", "port" => 1030 ))
)
]]>
   </screen>
  </example>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
