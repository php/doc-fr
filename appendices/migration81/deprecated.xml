<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7d6c8735cc1adb853081ceb854931dc1cc41dfb7 Maintainer: happytodev Status: ready -->

<sect1 xml:id="migration81.deprecated">
 <title>Fonctionnalités dépréciées</title>

 <sect2 xml:id="migration81.deprecated.core">
  <title>Cœur de PHP</title>

  <sect3 xml:id="migration81.deprecated.core.serialize-interface">
   <title>
    Mise en oeuvre de <interfacename>Serializable</interfacename> sans
    <function>__serialize</function> et <function>__unserialize</function>
   </title>

   <para>
    Soit seules les nouvelles méthodes doivent être implémentées, si aucun support de
    PHP antérieur à la version 7.4 n'est fourni, soit les deux doivent être implémentées.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.null-not-nullable-internal">
   <title>Passage de &null; aux paramètres non-nullabes des fonctions intégrées</title>

   <para>
    Les types scalaires des fonctions intégrées sont nullables par défaut,
    ce comportement est déprécié pour s'aligner sur celui des fonctions définies par l'utilisateur
    où les types scalaires doivent être marqués comme nullables explicitement.

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
var_dump(str_contains("foobar", null));
// Deprecated: Passing null to parameter #2 ($needle) of type string
//             is deprecated
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.implicit-float-conversion">
   <title>Conversions implicites incompatibles entre &float; et &integer;</title>

   <para>
    La conversion implicite de &float; en &integer; qui 
    conduit à une perte de précision est maintenant dépréciée.
    Ceci affecte les clés de &array;, les déclarations de type &integer; en mode coercitif,
    et les opérateurs travaillant sur les &integer;s.

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$a = [];
$a[15.5]; // deprecated, as key value loses the 0.5 component
$a[15.0]; // ok, as 15.0 == 15
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.static-trait">
   <title>Appel d'un élément <modifier>static</modifier> sur un trait</title>

   <para>
    Appeler une méthode <modifier>static</modifier> , ou accéder à une propriété 
    <modifier>static</modifier> directement sur un trait est déprécié.
    Les méthodes et propriétés statiques ne doivent être accessibles que sur une classe utilisant le trait.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.magic-sleep">
   <title>Returner un non-&array; depuis <function>__sleep</function></title>

   <para>
    Returner une valeur qui n'est pas un &array; depuis
    <link linkend="object.sleep">__sleep()</link> générera à présent un diagnostic.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.void-by-ref">
   <title>Retour par référence à partir d'une fonction <type>void</type></title>

   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function &test(): void {}
?>
]]>
     </programlisting>
    </informalexample>
    Une telle fonction est contradictoire, et émet déjà une
    <constant>E_NOTICE</constant> lorsqu'elle est appelée:
    <literal>Seules les références de variables doivent être renvoyées par référence</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.autovivification-false">
   <title>Autovivification depuis &false;</title>
   <para>
    L'autovivification est le processus de création d'un nouveau &array; lors 
    de l'ajout à une valeur.
    L'autovivification est interdite pour les valeurs scalaires, &false; étant toutefois 
    une exception. Elle est maintenant dépréciée.

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$arr = false;
$arr[] = 2;   // deprecated
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <note>
    <para>
     Autovivification from &null; and undefined values is still allowed:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// From undefined
$arr[] = 'some value';
$arr['doesNotExist'][] = 2;
// From null
$arr = null;
$arr[] = 2;
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </sect3>

 </sect2>

 <sect2 xml:id="migration81.deprecated.ctype">
  <title>ctype</title>

  <sect3 xml:id="migration81.deprecated.ctype.nonstring-arguments">
   <title>Vérification des arguments autres que des chaînes de caractères</title>

   <para>
    Le passage d'un argument qui n'est pas une chaîne de caractères est déprécié.
    Dans le futur, l'argument sera interprété comme une chaîne de caractères au lieu de
    d'un point de code ASCII.
    Selon le comportement souhaité, l'argument doit être soit
    de caster en &string; soit de faire un appel explicite à
    <fonction>chr</function>.
    Toutes les fonctions <literal>ctype_*()</literal> fsont affectés.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.deprecated.date">
  <title>Date</title>

  <para>
   <function>date_sunrise</function> et <function>date_sunset</function>
   ont étés dépréciés en faveur de <function>date_sun_info</function>.
  </para>

  <para>
   <function>strptime</function> a été dépréciée.
   Utilisez <function>date_parse_from_format</function> à la place (pour une analyse syntaxique indépendante de la locale),
   ou <methodname>IntlDateFormatter::parse</methodname> (pour une analyse syntaxique dépendante de la locale).
  </para>

  <para>
   <function>strftime</function> et <function>gmstrftime</function> ont été dépréciées.
   Utilisez <function>date</function> à la place (pour un formatage indépendant de la locale),
   ou <methodname>IntlDateFormatter::format</methodname> (pour un formatage indépendant de la locale).
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.filter">
  <title>Filtre</title>

  <para>
   Les constantes de filtres <constant>FILTER_SANITIZE_STRING</constant> et
   <constant>FILTER_SANITIZE_STRIPPED</constant> sont dépréciées.
  </para>
  <para>
   La directive INI <link linkend="ini.filter.default">filter.default</link>
   est dépréciée.
   <!-- TODO Check that filter.default_flags -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.gd">
  <title>GD</title>

  <para>
   <parameter>num_points</parameter> de <function>imagepolygon</function>,
   <function>imageopenpolygon</function> et <function>imagefilledpolygon</function>
   ont étés dépréciés.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.hash">
  <title>Hash</title>

  <para>
   <function>mhash</function>,
   <function>mhash_keygen_s2k</function>,
   <function>mhash_count</function>,
   <function>mhash_get_block_size</function>,
   et <function>mhash_get_hash_name</function> ont étés dépréciés.
   Uilisez les fonctions <literal>hash_*()</literal> à la place.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.imap">
  <title>IMAP</title>

  <para>
   La constante <constant>NIL</constant> a été dépréciée.
   Utilisez <literal>0</literal> à la place.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.intl">
  <title>Intl</title>

  <para>
   L'appel de <methodname>IntlCalendar::roll</methodname> avec un argument de type 
   &boolean; est déprécié.
   Utilisez respectivement <literal>1</literal> et <literal>-1</literal> à la place de 
   &true; et &false;.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mbstring">
  <title>Chaîne multioctet</title>

  <para>
   L'appel de la fonction <function>mb_check_encoding</function> sans aucun argument 
   est déprécié.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mysqli">
  <title>MySQLi</title>

  <para>
   La propriété <property>mysqli_driver::$driver_version</property> 
   a été dépréciée.
   Il n'avait pas de sens et était dépassé, utilisez <constant>PHP_VERSION_ID</constant>
   à la place
  </para>

  <para>
   L'appel de <methodname>mysqli::get_client_info</methodname> ou
   <function>mysqli_get_client_info</function> avec l'argument
   <parameter>mysqli</parameter> a été déprécié.
   Appelez la <function>mysqli_get_client_info</function> sans aucun argument   
   pour obtenir les informations sur la version de la bibliothèque client.
  </para>

  <para>
   La méthode <methodname>mysqli::init</methodname> a été dépréciée.
   Pemplacez les appels à <methodname>parent::init</methodname> par
   <methodname>parent::__construct</methodname>.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.oci8">
  <title>OCI8</title>

  <para>
   La directive INI <link linkend="ini.oci8.old-oci-close-semantics">oci8.old_oci_close_semantics</link>
   est dépréciée.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.odbc">
  <title>ODBC</title>

  <para>
   <function>odbc_result_all</function> a été dépréciée.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pdo">
  <title>PDO</title>

  <para>
   Le mode de récupération <constant>PDO::FETCH_SERIALIZE</constant> a été déprécié.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pgsql">
  <title>PgSQL</title>

  <para>
   Le fait de ne pas passer l'argument de connexion à toutes les fonctions <literal>pgsql_*()</literal>
   a été déprécié.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.soap">
  <title>SOAP</title>

  <para>
   L'option <literal>ssl_method</literal> de 
   <methodname>SoapClient::__construct</methodname> a été 
   dépréciée  en faveur des options de contexte de flux SSL
   <!-- The direct equivalent would be
    crypto_method, but min_proto_version/max_proto_version are recommended
    instead. -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.standard">
  <title>Standard</title>

  <para>
   L'appel de <function>key</function>, <function>current</function>,
   <function>next</function>, <function>prev</function>,
   <function>reset</function>, ou <function>end</function>
   sur des &object;s est déprécié.
   Utiliser soit la <function>get_mangled_object_vars</function> sur le
   objet en premier, soit <classname>ArrayIterator</classname>.
  </para>

  <para>
   La directive INI <link linkend="ini.auto-detect-line-endings">auto_detect_line_endings</link>
   est dépréciée.
   Si nécessaire, gérez plutôt les sauts de ligne <literal>"\r"</literal> manuellement.
  </para>

  <para>
   Les constantes <constant>FILE_BINARY</constant> and
   <constant>FILE_TEXT</constant> ont été déprécié.
   Elles n'ont jamais eu aucun effet.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
