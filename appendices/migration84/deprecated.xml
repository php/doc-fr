<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1b039696eedcc82e9c1144eeecbfc0a8a1b3859 Maintainer: Fan2Shrek Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration84.deprecated">
 <title>Fonctionnalités dépréciées</title>

 <sect2 xml:id="migration84.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration84.deprecated.core.implicitly-nullable-parameter">
   <!-- RFC: https://wiki.php.net/rfc/deprecate-implicitly-nullable-types -->
   <title>Paramètre implicitement nullable</title>

   <simpara>
    Un paramètre est implicitement élargi pour accepter <type>null</type>
    si la valeur par défaut est &null;.
   </simpara>

   <para>
    Le code suivant : 
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a = null) {}
]]>
     </programlisting>
    </informalexample>
    devrat être converti en :
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1|null $a = null) {}
]]>
     </programlisting>
    </informalexample>
    ou
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(?T1 $a = null) {}
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    Sinon, si une déclaration de paramètre est suivie d'un paramètre
    obligatoire :
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, T2 $b = null, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    Il doit être converti en :
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, T2|null $b, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    ou
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, ?T2 $b, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    car les paramètres optionnels avant les paramètres obligatoires sont dépréciés.
   </para>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/raising_zero_to_power_of_negative_number -->
   <title>Elever zéro à la puissance d'un nombre négatif</title>

   <simpara>
    Elever un nombre à la puissance d'un nombre négatif est équivalent à prendre
    le réciproque du nombre élevé à l'opposé positif de la puissance.
    Par conséquent, élever <literal>0</literal> à la puissance d'un nombre négatif
    correspond à diviser par <literal>0</literal>.
    Ainsi, ce comportement a été déprécié.
   </simpara>

   <simpara>
    Cela affecte l'opérateur d'exponentiation <literal>**</literal>
    et la fonction <function>pow</function>.
   </simpara>

   <simpara>
    Si la sémantique IEEE 754 est désirée, il faut utiliser la nouvelle
    fonction <function>fpow</function>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.deprecated.core.underscore-class-name">
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_using_a_single_underscore_as_a_class_name -->
   <title>Utilisation de l'underscore <literal>_</literal> comme nom de classe</title>

   <para>
    Appeler une classe <literal>_</literal> est désormais déprécié :
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class _ {}
]]>
     </programlisting>
    </informalexample>
   </para>

   <note>
    <para>
     Les classes dont le nom commence par un underscore ne sont <emphasis>pas</emphasis>
     dépréciées :
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
class _MyClass {}
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_e_user_error_to_trigger_error -->
   <title>
    Utiliser <function>trigger_error</function> avec
    <constant>E_USER_ERROR</constant>
   </title>

   <simpara>
    Appeler <function>trigger_error</function> avec
    <parameter>error_level</parameter> égal à
    <constant>E_USER_ERROR</constant> est désormais déprécié.
   </simpara>

   <simpara>
    Une telle utilisation devrait être remplacée par soit lancer une exception,
    soit appeler <function>exit</function>, selon ce qui est le plus approprié.
   </simpara>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#remove_e_strict_error_level_and_deprecate_e_strict_constant -->
   <title>
    La constante <constant>E_STRICT</constant>
   </title>

   <simpara>
    Du fait que le niveau d'erreur <constant>E_STRICT</constant> a été supprimé,
    cette constante est désormais dépréciée.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.curl">
  <title>cURL</title>

  <simpara>
   La constante <constant>CURLOPT_BINARYTRANSFER</constant> est désormais dépréciée.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.date">
  <title>Date</title>

  <simpara>
   La signature <code> DatePeriod::__construct(string $isostr, int $options = 0)</code>
   est désormais dépréciée.
   Utiliser <methodname>DatePeriod::createFromISO8601String</methodname> à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#constants_sunfuncs_ret_string_sunfuncs_ret_double_sunfuncs_ret_timestamp -->
  <simpara>
   Les constantes <constant>SUNFUNCS_RET_TIMESTAMP</constant>,
   <constant>SUNFUNCS_RET_STRING</constant>,
   et <constant>SUNFUNCS_RET_DOUBLE</constant> sont désormais dépréciées.
   Cela suit la dépréciation des fonctions <function>date_sunset</function> et
   <function>date_sunrise</function> dans PHP 8.1.0.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.dba">
  <title>DBA</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_null_and_false_to_dba_key_split -->
  <simpara>
   Passer &null; ou &false; à <function>dba_key_split</function> est désormais
   déprécié.
   Cela retournait toujours &false; dans ces cas.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.dom">
  <title>DOM</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_dom_php_err_constant -->
  <simpara>
   La constante <constant>DOM_PHP_ERR</constant> est désormais dépréciée.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#formally_deprecate_soft-deprecated_domdocument_and_domentity_properties -->
  <para>
   Les propriétés suivantes ont été formellement dépréciées :
   <simplelist>
    <member><property>DOMDocument::$actualEncoding</property></member>
    <member><property>DOMDocument::$config</property></member>
    <member><property>DOMEntity::$actualEncoding</property></member>
    <member><property>DOMEntity::$encoding</property></member>
    <member><property>DOMEntity::$version</property></member>
   </simplelist>
  </para>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.hash">
  <title>Hash</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_incorrect_data_types_for_options_to_exthash_functions -->
  <simpara>
   Passer des options invalides aux fonctions de hachage est désormais déprécié.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.intl">
  <title>Intl</title>

  <simpara>
   Appeler <function>intlcal_set</function> ou
   <methodname>IntlCalendar::set</methodname>
   avec plus de deux arguments est désormais déprécié.
   Utiliser <methodname>IntlCalendar::setDate</methodname> ou
   <methodname>IntlCalendar::setDateTime</methodname> à la place.
  </simpara>

  <simpara>
   Appeler <function>intlgregcal_create_instance</function> ou
   <methodname>IntlGregorianCalendar::__construct</methodname>
   avec plus de deux arguments est désormais déprécié.
   Utiliser <function>intlgregcal_create_instance</function> ou
   <methodname>IntlGregorianCalendar::createFromDateTime</methodname> à la place.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.ldap">
  <title>LDAP</title>

  <simpara>
   Appeler <function>ldap_connect</function>
   avec plus de deux arguments est désormais déprécié.
   Utiliser <function>ldap_connect_wallet</function> à la place.
  </simpara>

  <simpara>
   Appeler <function>ldap_exop</function>
   avec plus de quatre arguments est désormais déprécié.
   Utiliser <function>ldap_exop_sync</function> à la place.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.mysqli">
  <title>MySQLi</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#mysqli_ping_and_mysqliping -->
  <simpara>
   La fonction <function>mysqli_ping</function> et
   la méthode <methodname>mysqli::ping</methodname>
   sont désormais dépréciées car la fonctionnalité de reconnexion a été supprimée en PHP 8.2.0.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_mysqli_kill -->
  <simpara>
   La fonction <function>mysqli_kill</function> et
   la méthode <methodname>mysqli::kill</methodname>
   sont désormais dépréciées.
   Si cette fonctionnalité est nécessaire, une commande SQL <literal>KILL</literal>
   peut être utilisée à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_mysqli_refresh -->
  <simpara>
   La fonction <function>mysqli_refresh</function> et
   la méthode <methodname>mysqli::refresh</methodname>
   sont désormais dépréciées.
   Si cette fonctionnalité est nécessaire, une commande SQL <literal>FLUSH</literal>
   peut être utilisée à la place.
   Toutes les constantes <constant>MYSQLI_REFRESH_<replaceable>*</replaceable></constant>
   ont également été dépréciées.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_the_second_parameter_to_mysqli_store_result -->
  <simpara>
   Passer le paramètre <parameter>mode</parameter> à
   <function>mysqli_store_result</function> explicitement a été déprécié.
   Comme la constante <constant>MYSQLI_STORE_RESULT_COPY_DATA</constant> n'était
   utilisée qu'en conjonction avec cette fonction, elle a également été dépréciée.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.pdo-pgsql">
  <title>PDO_PGSQL</title>

  <simpara>
   Utiliser des points d'interrogation échappés (<literal>??</literal>) à l'intérieur
   des chaînes délimitées par des dollars est désormais déprécié.
   Car PDO_PGSQL dispose désormais de son propre analyseur SQL avec le support des
   chaînes délimitées par des dollars, il n'est plus nécessaire d'échapper les points d'interrogation à l'intérieur.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.pgsql">
  <title>PGSQL</title>

  <simpara>
   Les 2 arguments de la signature de <function>pg_fetch_result</function>,
   <function>pg_field_prtlen</function>, et
   <function>pg_field_is_null</function> sont désormais dépréciés.
   Utiliser la signature à 3 arguments avec <parameter>row</parameter> défini à
   &null; à la place.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.random">
  <title>Random</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_lcg_value -->
  <simpara>
   <function>lcg_value</function> est désormais dépréciée,
   car la fonction est cassée de plusieurs manières.
   Utiliser <methodname>Random\Randomizer::getFloat</methodname> à la place.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.reflection">
  <title>Reflection</title>

  <simpara>
   Appeler <methodname>ReflectionProperty::setValue</methodname>
   avec un seul paramètre est désormais déprécié.
   Utiliser plutôt <methodname>ReflectionMethod::createFromMethodName</methodname>
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.session">
  <title>Session</title>

  <simpara>
   Appeler <function>session_set_save_handler</function>
   avec plus de deux arguments est désormais déprécié.
   Utiliser la signature à deux arguments à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#sessionsid_length_and_sessionsid_bits_per_character -->
  <simpara>
   Changer la valeur des paramètres INI
   <link linkend="ini.session.sid-length"><literal>session.sid_length</literal></link> et
   <link linkend="ini.session.sid-bits-per-character"><literal>session.sid_bits_per_character</literal></link>
   est déprécié.
   Mettre à jour le backend de stockage de session pour accepter des identifiants de session hexadécimaux de 32 caractères
   et arrêter de changer ces deux paramètres INI à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecate-get-post-sessions -->
  <simpara>
   Changer la valuer des paramètres INI
   <link linkend="ini.session.use-only-cookies"><literal>session.use_only_cookies</literal></link>,
   <link linkend="ini.session.use-trans-sid"><literal>session.use_trans_sid</literal></link>,
   <link linkend="ini.session.trans-sid-tags"><literal>session.trans_sid_tags</literal></link>,
   <link linkend="ini.session.trans-sid-hosts"><literal>session.trans_sid_hosts</literal></link>, et
   <link linkend="ini.session.referer-check"><literal>session.referer_check</literal></link>
   est déprécié.
   La constante <constant>SID</constant> est également dépréciée.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.soap">
  <title>SOAP</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_soap_functions_all_constant_and_passing_it_to_soapserveraddfunction -->
  <simpara>
   Passer un <type>int</type> à
   <methodname>SoapServer::addFunction</methodname> est désormais déprécié.
   Si toutes les fonctions PHP doivent être fournies, aplatir le tableau retourné par
   <function>get_defined_functions</function>.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_soap_functions_all_constant_and_passing_it_to_soapserveraddfunction -->
  <simpara>
   La constante <constant>SOAP_FUNCTIONS_ALL</constant> est désormais dépréciée.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.spl">
  <title>SPL</title>

  <simpara>
   La méthode <methodname>SplFixedArray::__wakeup</methodname> est désormais
   dépréciée, car elle implémente
   <methodname>SplFixedArray::__serialize</methodname> et
   <methodname>SplFixedArray::__unserialize</methodname>
   qui doivent être surchargées à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_proprietary_csv_escaping_mechanism -->
  <simpara>
   Utiliser la valeur par défaut du paramètre <parameter>escape</parameter> pour
   <methodname>SplFileObject::setCsvControl</methodname>,
   <methodname>SplFileObject::fputcsv</methodname>, et
   <methodname>SplFileObject::fgetcsv</methodname> est désormais déprécié.
   <!-- TODO: Link to named arguments feature -->
   Sa valeur doit être passée explicitement soit positionnellement soit via des arguments nommés.
   Cela ne s'applique pas à <methodname>SplFileObject::fputcsv</methodname>
   et <methodname>SplFileObject::fgetcsv</methodname> si
   <methodname>SplFileObject::setCsvControl</methodname> a été utilisé pour définir une
   nouvelle valeur par défaut.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.standard">
  <title>Standard</title>

  <simpara>
   Appeler <function>stream_context_set_option</function>
   avec deux arguments est désormais déprécié.
   Utiliser <function>stream_context_set_options</function> à la place.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#unserialize_s_s_tag -->
  <simpara>
   Désérialiser des chaînes en utilisant la balise <literal>S</literal> en majuscule
   avec <function>unserialize</function> est désormais déprécié.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_proprietary_csv_escaping_mechanism -->
  <simpara>
   Utiliser la valeur par défaut du paramètre <parameter>escape</parameter> pour
   <function>fputcsv</function>,
   <function>fgetcsv</function>, et 
   <function>str_getcsv</function> est désormais déprécié.
   <!-- TODO: Link to named arguments feature -->
   Il doit être passé explicitement soit positionnellement soit via des arguments nommés.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.xml">
  <title>XML</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#xml_set_object_and_xml_set_handler_with_string_method_names -->
  <simpara>
   La fonction <function>xml_set_object</function> a été dépréciée.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#xml_set_object_and_xml_set_handler_with_string_method_names -->
  <simpara>
   Passer une chaîne non-<type>callable</type> aux fonctions
   <function>xml_set_<replaceable>*</replaceable></function>
   est désormais déprécié.
  </simpara>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
