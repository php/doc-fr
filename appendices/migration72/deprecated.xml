<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 549423df613c7204d64f7c3a8290edd7d7ae6fc8 Maintainer: jbnahan Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration72.deprecated">
 <title>Fonctionnalités devenues obsolètes en PHP 7.2.x</title>

 <sect2 xml:id="migration72.deprecated.unquoted-strings">
  <title>Des chaînes non délimitées</title>

  <para>
   Des chaînes qui sont des constantes globales inexistantes sont considérées 
   comme des chaînes d’elles-mêmes. Ce comportement émettait une 
   <constant>E_NOTICE</constant>, mais maintenant émet une 
   <constant>E_WARNING</constant>. Dans la prochaine version majeure 
   de PHP, une exception sera levée à la place.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(NONEXISTENT);

/* Output:
Warning: Use of undefined constant NONEXISTENT - assumed 'NONEXISTENT' (this will throw an Error in a future version of PHP) in %s on line %d
string(11) "NONEXISTENT"
*/
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration72.deprecated.png2wbmp-jpeg2wbmp">
  <title><function>png2wbmp</function> et <function>jpeg2wbmp</function></title>

  <para>
   Les fonctions <function>png2wbmp</function> et <function>jpeg2wbmp</function>
   de l'extension GD ont maintenant été désapprouvées et seront supprimées dans 
   la prochaine version majeure de PHP.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.INTL_IDNA_VARIANT_2003-variant">
  <title>Variante <constant>INTL_IDNA_VARIANT_2003</constant></title>

  <para>
   L'extension Intl a désapprouvé la variante 
   <constant>INTL_IDNA_VARIANT_2003</constant>,
   qui est actuellement utilisée par <function>idn_to_ascii</function> et
   <function>idn_to_utf8</function>. La valeur par défaut sera changée dans
   PHP 7.4 par <constant>INTL_IDNA_VARIANT_UTS46</constant>, et la valeur
   <constant>INTL_IDNA_VARIANT_2003</constant> sera supprimée dans la 
   prochaine version majeure de PHP.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.__autoload-method">
  <title>Méthode <function>__autoload</function></title>

  <para>
   La méthode <function>__autoload</function> a été déconseillée car inférieure à
   <function>spl_autoload_register</function> (car elle n'est pas capable 
   d'accepter plusieurs chargeurs automatiques), et les deux styles de 
   chargement automatique ne sont pas interopérables.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.track_errors-and-php_errormsg">
  <title>Directive de configuration <parameter>track_errors</parameter> et la variable <literal>$php_errormsg</literal></title>

  <para>
   Lorsque la directive de configuration <parameter>track_errors</parameter>
   est activée, une variable <literal>$php_errormsg</literal> est créée
   dans la portée locale lorsqu'une erreur non fatale se produit.
   Étant donné que le meilleur moyen de récupérer ces informations d’erreur 
   est d'utiliser <function>error_get_last</function>, cette fonctionnalité 
   a été désapprouvée.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.create_function-function">
  <title>Fonction <function>create_function</function></title>

  <para>
   Étant donnés les problèmes de sécurité de cette fonction (qui est une
   enveloppe mince autour de <function>eval</function>) cette ancienne fonction
   est maintenant obsolète. Le meilleur moyen de créer des fermetures est en 
   définissant des <link linkend="functions.anonymous">fonctions anonymes</link>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.mbstringfunc_overload-ini-setting">
  <title>Directive de configuration <parameter>mbstring.func_overload</parameter></title>

  <para>
   Étant donnés les problèmes d’interopérabilité des fonctions basées sur 
   une chaîne utilisées dans les environnements lorsque ce paramètre est 
   activé, il est maintenant obsolète.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.unset-cast">
  <title><literal>(unset)</literal> cast</title>

  <para>
   Casting de n’importe quelle expression à ce type entraînera toujours un 
   résultat &null;, et ce type de cast superflu est maintenant obsolète.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.parse_str-no-second-arg">
  <title><function>parse_str</function> sans second argument</title>

  <para>
   Sans second argument à la fonction <function>parse_str</function>, les
   paramètres de la requête sont alloués dans des variables locales. Étant données les 
   implications de ce fonctionnement sur la sécurité, l'utilisation de 
   <function>parse_str</function> sans un second argument est maintenant obsolète. La 
   fonction doit toujours être utilisée avec deux arguments, car le deuxième argument 
   entraîne l'analyse de la chaîne de requête dans un tableau.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.gmp_random-function">
  <title>Fonction <function>gmp_random</function></title>

  <para>
   Cette fonction génère un nombre aléatoire basé sur une plage qui est 
   calculée par une taille non exposée, spécifique à la plateforme membre. 
   Pour cette raison, la fonction est maintenant obsolète. 
   Le meilleur moyen de générer un nombre aléatoire est l'utilisation de 
   l’extension GMP avec les fonctions <function>gmp_random_bits</function> et
   <function>gmp_random_range</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.each-function">
  <title>Fonction <function>each</function></title>

  <para>
   Cette fonction est beaucoup plus lente à l’itération qu’un classique 
   <literal>foreach</literal> et entraîne des problèmes de mise en 
   œuvre de certains changements de langue. Elle a donc été désapprouvée.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.assert-string-arg">
  <title><function>assert</function> avec un argument texte</title>

  <para>
   Lors de l'utilisation d'<function>assert</function> avec un argument texte, 
   il est nécessaire que le texte soit évalué par la fonction 
   <function>eval</function>. Compte tenu du potentiel pour l’exécution de code
   à distance, avec un argument de chaîne à l’aide de 
   <function>assert</function> a maintenant été désapprouvée en faveur de 
   l’utilisation des expressions booléennes.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.errcontext-arg-of-error-handlers">
  <title><literal>$errcontext</literal> argument de gestionnaires d’erreurs</title>

  <para>
   L’argument <literal>$errcontext</literal> contient toutes les variables 
   locales de l’emplacement de l’erreur. Compte tenu de son utilisation rare 
   et les problèmes qu'elle provoque avec des optimisations internes, il est 
   maintenant devenu obsolète. Au lieu de cela, un débogueur doit être utilisé pour récupérer des 
   informations sur les variables locales à l’emplacement de l’erreur.
  </para>
 </sect2>

 <sect2 xml:id="migration72.deprecated.read_exif_data-function">
  <title>Fonction <function>read_exif_data</function></title>

  <para>
   L'alias <function>read_exif_data</function> a été déconseillé. La fonction <function>exif_read_data</function> peut être utilisée à la place.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
