<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cfaa7659dab118ecf6b420c550a6b8183f4190ad Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="arrayaccess.offsetexists" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ArrayAccess::offsetExists</refname>
  <refpurpose>Indique si une position existe dans un tableau</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>ArrayAccess::offsetExists</methodname>
   <methodparam><type>mixed</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Indique si une position existe.
  </para>
  <para>
   Cette méthode est exécutée lorsque la fonction <function>isset</function> ou
   <function>empty</function> est appliquée à un objet qui implémente 
   l'interface <classname>ArrayAccess</classname>.
  </para>
  <note>
   <para>
    Lors de l'utilisation de <function>empty</function>,
    <function>ArrayAccess::offsetGet</function> est appelé et vérifie si 
    la valeur est vide, uniquement si <function>ArrayAccess::offsetExists</function>
    retourne &true;.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Une position à vérifier.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
  <note>
   <para>
    La valeur retournée sera transtypée en &boolean; si une valeur non booléenne 
    est retournée.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>ArrayAccess::offsetExists</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class obj implements arrayaccess {
    public function offsetSet($offset, $value): void {
        var_dump(__METHOD__);
    }

    public function offsetExists($var): bool {
        var_dump(__METHOD__);
        if ($var == "foobar") {
            return true;
        }
        return false;
    }

    public function offsetUnset($var): void {
        var_dump(__METHOD__);
    }

    #[\ReturnTypeWillChange]
    public function offsetGet($var) {
        var_dump(__METHOD__);
        return "value";
    }
}

$obj = new obj;

echo "Exécute obj::offsetExists()\n";
var_dump(isset($obj["foobar"]));

echo "\nExécute obj::offsetExists() et obj::offsetGet()\n";
var_dump(empty($obj["foobar"]));

echo "\nExécute obj::offsetExists(), *et non pas* obj:offsetGet() car il n'y a rien à lire\n";
var_dump(empty($obj["foobaz"]));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Exécute obj::offsetExists()
string(17) "obj::offsetExists"
bool(true)

Exécute obj::offsetExists() et obj::offsetGet()
string(17) "obj::offsetExists"
string(14) "obj::offsetGet"
bool(false)

Exécute obj::offsetExists(), *et non pas* obj:offsetGet() car il n'y a rien à lire
string(17) "obj::offsetExists"
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
