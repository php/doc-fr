<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cd391e65a613a729f9bbded2b1249e2d7143400c Maintainer: girgias Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.weakreference" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>La classe WeakReference</title>
 <titleabbrev>WeakReference</titleabbrev>

 <partintro>

<!-- {{{ WeakReference intro -->
  <section xml:id="weakreference.intro">
   &reftitle.intro;
   <para>
    Les références faibles permettent au programmeur de conserver une
    référence à un objet sans en empêcher sa destruction.
    Ils sont utiles pour implémenter des structures tel que des caches.
    Si l'objet d'origine a été détruit, &null; sera retourné
    lors de l'appel de la méthode <methodname>WeakReference::get</methodname>.
    L'objet d'origine sera détruit lorsque le
    <link linkend="features.gc.refcounting-basics">compteur de références</link> atteint zéro ;
    la création de références faibles n'augmente pas le <literal>compteur de références</literal> de l'objet référencé.
   </para>
   <para>
    Les <classname>WeakReference</classname>s ne peuvent pas être sérialisées.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="weakreference.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>WeakReference</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.weakreference')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='WeakReference'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.weakreference')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='WeakReference'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="weakreference.examples">
   <title>Exemple avec WeakReference</title>
   <para>
    <example xml:id="weakreference.basic-example">
     <title>Utilisation Simple de WeakReference</title>
     <programlisting role="php">
<![CDATA[
<?php

$obj = new stdClass();
$weakref = WeakReference::create($obj);

var_dump($weakref->get());

unset($obj);

var_dump($weakref->get());

?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
object(stdClass)#1 (0) {
}
NULL
]]>
     </screen>
    </example>
   </para>
  </section>

 </partintro>

 &language.predefined.weakreference.construct;
 &language.predefined.weakreference.create;
 &language.predefined.weakreference.get;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
