<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5e8652131e898cd3d02cd26eeb26da718a6aaf65 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
 <sect1 xml:id="language.oop5.final" xmlns="http://docbook.org/ns/docbook">
  <title>Mot-clé "final"</title>
  <para>
   Le mot-clé <literal>final</literal> empêche les classes enfants de redéfinir
   une méthode ou constante en préfixant la définition avec
   <literal>final</literal>. Si la classe elle-même est
   définie comme finale, elle ne pourra pas être étendue.
  </para>
  
  <para>
   <example>
    <title>Exemple de méthode finale</title>
    <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   public function test() {
       echo "BaseClass::test() appelée\n";
   }
   
   final public function moreTesting() {
       echo "BaseClass::moreTesting() appelée\n";
   }
}

class ChildClass extends BaseClass {
   public function moreTesting() {
       echo "ChildClass::moreTesting() appelée\n";
   }
}
// Résultat : Fatal error: Cannot override final method BaseClass::moreTesting()
?> 
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Exemple de classe finale</title>
    <programlisting role="php">
<![CDATA[
<?php
final class BaseClass {
   public function test() {
       echo "BaseClass::test() appelée\n";
   }

   // Comme la classe est déjà finale, le mot clé final est redondant
   final public function moreTesting() {
       echo "BaseClass::moreTesting() appelée\n";
   }
}

class ChildClass extends BaseClass {
}
// Résultat : Fatal error: Class ChildClass may not inherit from final class (BaseClass)
?> 
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example xml:id="language.oop5.final.example.php81">
    <title>Exemple de constante finale à partir de PHP 8.1.0</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    final public const X = "foo";
}

class Bar extends Foo
{
    public const X = "bar";
}

// Fatal error: Bar::X cannot override final constant Foo::X
?>
]]>
    </programlisting>
   </example>
  </para>

  <note>
   <simpara>
    Les propriétés ne peuvent être déclarées comme finales :
    seules les méthodes, classes, constantes (à partir de PHP 8.1.0) peuvent
    être défini comme finale.
   </simpara>
   <simpara>
    À partir de PHP 8.0.0, les méthodes privées ne peuvent pas être déclaré
    finale à l'exception du constructeur.
   </simpara>
  </note>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
