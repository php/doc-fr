<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9fe810352095922a68ce2807745a9bc35c0afe1f Maintainer: pierrick Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.types.enumerations">
 <title>Les énumérations</title>

 <sect2 xml:id="language.types.enumerations.basics">
  <title>Les énumérations de base</title>

  <para>
   Les énumérations constituent une couche restrictive au-dessus des classes et des constantes de classe,
   Elles permettent de définir un ensemble fermé de valeurs possibles pour un type.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
enum Suit
{
    case Hearts;
    case Diamonds;
    case Clubs;
    case Spades;
}

function do_stuff(Suit $s)
{
    // ...
}

do_stuff(Suit::Spades);
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Pour une description complète, voir le chapitre
   sur <link linkend="language.enumerations">les énumérations</link>.
  </simpara>

 </sect2>

 <sect2 xml:id="language.types.enumerations.casting">
  <title>Casting</title>

  <para>
   Si une <type>enum</type> est convertie en <type>object</type>, elle n'est pas
   modifiée. Si une <type>enum</type> est convertie en <type>array</type>,
   un tableau avec une seule clé <literal>name</literal> (pour les Pure enums) ou
   un tableau avec les clés <literal>name</literal> et <literal>value</literal>
   (pour les Backed enums) est créé.  Tous les autres types de conversion entraîneront une erreur.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
