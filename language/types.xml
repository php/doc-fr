<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 161dde4fe721309398dd324edbf02aec409f127b Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: DAnnebicque -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Les types</title>

 <sect1 xml:id="language.types.intro">
  <title>Introduction</title>

  <para>
   Chaque expression en PHP possède l'un des types intégrés suivants, en fonction de sa valeur :
   <itemizedlist>
    <listitem><simpara><type>null</type></simpara></listitem>
    <listitem><simpara><type>bool</type></simpara></listitem>
    <listitem><simpara><type>int</type></simpara></listitem>
    <listitem><simpara><type>float</type> (nombre flottant)</simpara></listitem>
    <listitem><simpara><type>string</type></simpara></listitem>
    <listitem><simpara><type>array</type></simpara></listitem>
    <listitem><simpara><type>object</type></simpara></listitem>
    <listitem><simpara><type>callable</type></simpara></listitem>
    <listitem><simpara><type>resource</type></simpara></listitem>
   </itemizedlist>
  </para>

  <tip>
   <simpara>
    <link linkend="types.comparisons">Les tableaux de comparaison de types</link>
    peuvent également être utiles, car ils présentent divers exemples
    de comparaison entre des valeurs de types différents.
   </simpara>
  </tip>

  <note>
   <simpara>
    Il est possible de forcer une expression à être évaluée selon un certain type
    en utilisant un <link linkend="language.types.typecasting">type cast</link>.
    Une variable peut également faire l'objet d'un casting de type sur place en utilisant
    la fonction <function>settype</function> sur celle-ci.
   </simpara>
  </note>

  <para>
   Pour vérifier la valeur et le type d'une <link linkend="language.expressions">expression</link>,
   utilisez la fonction <function>var_dump</function>.
   Pour récupérer le type d'une <link linkend="language.expressions">expression</link>,
   utilisez la fonction <function>get_debug_type</function>.
   Cependant, pour vérifier si une expression est d'un certain type,
   utilisez plutôt les fonctions <literal>is_<replaceable>type</replaceable></literal>.

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a_bool = true;   // un booléen
$a_str  = "foo";  // une chaîne de caractères
$a_str2 = 'foo';  // une chaîne de caractères
$an_int = 12;     // an integer

echo get_debug_type($a_bool), "\n";
echo get_debug_type($a_str), "\n";

// Si c'est un entier, incrément de 4
if (is_int($an_int)) {
    $an_int += 4;
}
var_dump($an_int);

// Si $a_bool est une chaîne de caractères, on l'affiche
if (is_string($a_bool)) {
    echo "String: $a_bool";
}
?>
]]>
    </programlisting>
    &example.outputs.8;
    <screen>
<![CDATA[
bool
string
int(16)
]]>
    </screen>
   </informalexample>
  </para>
  <note>
   <simpara>
    Avant PHP 8.0.0, où la fonction <function>get_debug_type</function> n'est pas disponible,
    la fonction <function>gettype</function> peut être utilisée à la place.
    Cependant, elle n'utilise pas les noms de types canoniques.
   </simpara>
  </note>
 </sect1>

 &language.types.type-system;
 &language.types.null;
 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.numeric-strings;
 &language.types.array;
 &language.types.object;
 &language.types.enumerations;
 &language.types.resource;
 &language.types.callable;
 &language.types.mixed;
 &language.types.void;
 &language.types.never;
 &language.types.relative-class-types;
 &language.types.literal;
 &language.types.iterable;
 &language.types.declarations;
 &language.types.type-juggling;
 
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
